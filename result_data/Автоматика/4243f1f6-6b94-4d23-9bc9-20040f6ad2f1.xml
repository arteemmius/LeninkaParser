<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/vnutrishemnoe-programmirovanie]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Гаврилюк Дмитрий]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Внутрисхемное программирование]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[Метод внутрисхемного (внутрисистемного) программирования (ISP — In-System Programmability) на сегодняшний день является основным способом программирования микроконтроллеров, ПЛИС и других приборов, в состав которых входит память Flash или EEPROM. В основе внутрисистемного программирования лежит идея использования какого-либо стандартного интерфейса, интегрированного в программируемую микросхему для последовательного занесения в нее программных или конфигурационных данных.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Для этого используется три линии интерфейса: MISO, MOSI и SCK. Вывод RESET подключается к «земле» у AVR-серии или к положительному источнику — у серии AT89Sx. В этом режиме обеспечивается программирование (запись и чтение) памяти программ и данных, а также конфигурационных битов кристалла. MSB Ведущий LSB С 8-битный регистр сдвига Тактовый генератор SPI ! MISO MISO і I MOSI MOSI і 1 SCK SCK і VSB Ведомый LSB 8-битный регистр сдвига Включение сдвига SS SS} Л Рис. 3. Подключение ведущего и ведомого устройств через SPI е Компоненты и технологии, № 8'2OO3 Выход данных -• Вход инструкций-Вход тактирования - ■о г ¥ AVR MCU VCC РВ 6 (MISO) РВ 5 (MOSI) РВ 7 (SCK) XTAL2 XTAL1 GND RESET 2.7-6.ОВ и -GND Рис. 4. Внутрисхемное программирование микроконтроллеров Atmel через SPI-интерфейс 1.8-5.5В О dW4- УСС dW(RESET) GND Рис. 5. Подключение микроконтроллера к интерфейсу DebugWIRE DebugWIRE В мае 2003 года Atmel анонсировала интегрированный в устройства ATtiny13 [4] и ATtiny2313 интерфейс DebugWIRE (One-Wire Debug Interface — однопроводной отладочный интерфейс). Он представляет собой встроенный в кристалл механизм отладки на основе одной двунаправленной линии передачи информации, позволяющий управлять программным потоком, выполнять AVR-инструкции ядра микроконтроллера и осуществлять программирование интегрированной энергонезависимой памяти. Основные возможности интерфейса DebugWIRE: • комплексное управление программным потоком; • эмулирование всех функций кристалла, включая цифровые и аналоговые, за исключением вывода RESET; • работа в реальном времени; • поддержка символьной отладки (на основе исходных кодов ассемблера, С или других языков высокого уровня); • неограниченное число программных точек останова; • работа в «теневом» режиме (интерфейс не препятствует работе основной программы); • электрические характеристики идентичны реальному устройству; • автоматическое конфигурирование системы; • высокая скорость работы; • программирование энергонезависимой памяти. Режим отладки в устройстве активируется установкой бита DWEN (debugWIRE Enable) и сброса Lock-битов микроконтроллера. Физическое подключение эмулятора интерфейса к микроконтроллеру производится через вывод RESET, который работает как двунаправленный вывод с открытым стоком с подтягивающим к шине питания резистором. На рис. 5 показана схема подключения отлаживаемого микроконтроллера в режиме debugWIRE к эмулятору. Тактовая частота определяется установками битов CKSEL и не зависит от debugWIRE. Когда разрабатывается система, в которой будет использоваться debugWIRE, необходимо соблюдать следующие требования: • если используется «подтягивающий» резистор на выводе dW(RESET), величина его сопротивления должна лежать в диапазоне от 10 до 20 кОм; • соединение вывода RESET напрямую с источником питания Vcc недопустимо; • конденсаторы, подключенные к выводу RESET, должны быть отключены при использовании debugWIRE; • все внешние источники сброса микроконтроллера должны быть отключены. Поддержка программных точек останова в debugWIRE реализуется при работе с интегрированной средой разработки AVR Studio. При установке точки останова в исходной программе в AVR Studio в программную память микроконтроллера будет вставлена инструкция BREAK. Инструкция, замещенная инструкцией BREAK, будет сохранена. Когда выполнение программы будет продолжено, сначала будет выполнена инструкция, сохраненная из памяти программ. Команду останова можно вставить вручную, поместив инструкцию BREAK в программную память микроконтроллера. Следует учитывать, что Flash-память микроконтроллера перепрограммируется при каждом изменении точки останова. Этот процесс автоматически выполняет AVR Studio через интерфейс debugWIRE. Использование точек останова уменьшает ресурс Flash-памяти. Устройства, применявшиеся в отладке системы, не должны передаваться конечным пользователям. Использование интерфейса debugWIRE накладывает некоторые ограничения на устройство, в котором он применяется. Коммуникационный вывод интерфейса dW физически совмещен с выводом внешнего сброса. Поэтому источники внешнего сброса не поддерживаются при работе debugWIRE. Система debugWIRE точно эмулирует все входные и выходные функции на полной скорости, когда выполняется программа в CPU. Если процессорное ядро остановлено, необходимо проявлять осторожность при доступе к некоторым регистрам ввода-вывода через отладчик AVR Studio. При установке бита DWEN (активации debugWIRE), некоторые части системы тактирования остаются в активном состоянии при переходе в режим «sleep», что приводит к увеличению потребляемой мощности. Поэтому необходимо отключать DWEN, когда debugWIRE не используется. При работе с debugWIRE микроконтроллер использует 8-разрядный регистр DWDR, образующий коммуникационный канал между исполняемой в микроконтроллере программой и отладчиком. Этот регистр доступен только интерфейсу debugWIRE и не может быть использован как регистр общего назначения при нормальной работе. Дальнейшее развитие идея внутрисхемного программирования получила в 8-разрядной серии AVR микроконтроллеров Atmel. В ней реализован механизм самопрограммирования Flash-памяти программ через интегрированные интерфейсы SPI, UART или TWI. Все операции по программированию и перепрограммированию процессорное ядро выполняет по программе, находящейся в загрузочной области программной памяти. Когда происходит самопрограммирование, данные считываются в оперативную память через внешний интерфейс и затем записываются в программную память блоками по 10, 128 или 256 байт. Особенности такого подхода состоят в следующем: • возможно перепрограммирование готового изделия непосредственно в условиях его применения; • снижаются затраты, поскольку нет необходимости использовать дополнительные компоненты; • программирование может выполняться значительно быстрее, поскольку каждый сектор памяти стирается и программируется индивидуально; • перепрограммирование осуществляется через различные периферийные интерфейсы; • работа в режиме самопрограммирования осуществляется в полном температурном диапазоне и при любом допустимом напряжении питания. Комплексы внутрисхемного программирования Практическое применение ISP-технологии возможно с использованием аппаратно-программных комплексов самых разных производителей. Наиболее развитым направлением в этой сфере является производство разнообразных модулей и программных средств для решений на основе технологии JTAG/IEEE 1149.1. Гамма предлагаемых устройств включает контроллеры, подключаемые к портам ПК, а также устанавливаемые в слоты ISA, PCI, USB, PXI. Программное обеспечение этих приборов функционирует на платформе Windows (некоторые версии адаптированы для UNIX) и позволяет проводить тестирование, отладку модулей и перепрограммирование пользовательских микросхем на плате через стандартный TAP-интерфейс. Оборудование для работы с технологией граничного сканирования производят: 1. Corelis Inc., США (www.corelis.com). 2. JTAG Technologies, Нидерланды (www.jtag.com). Компоненты и технологии, № 8'2003 J 100 BC857C Q100 > R104 ■{шУ TRANSMIT RECEIVE l.OuF^ 20V D100 * R105 PAD 20 • 1 -V BAS 16 Cl 00 D101 BAS16" BC847C Q101 RxD TxD C101 и 100N AT90S1200 1 VCC GND RESET AINq/PBq PDo AIN,/PB, PD, PB2 pd2/intro PB3 №3 PB, md и 100 fh pd5 PD6 PB7 XTAL 1 XTAL 2 10 _12 J3 J_4 J5 16 17 18 19 A R106 -I rnoh 4MHz XC100 Рис. 6. Схема программатора фирмы Atmel для программирования AVR-микроконтроллеров через SPI VCC MOSI GND -02 -04 -Об 10- 30- 50- MISO I SCK RESET GND 3. GOEPEL Electronic, Германия (www.goepel.com). 4. ASSET InterTech Inc., США (www.asset-intertech.com). 5. XJTAG Limited, Великобритания (www.xjtag.com). 6. Hewlett-Packard, США (www.hp.com). 7. Teradyne, США (www.teradyne.com). Важно отметить, что профессиональное оборудование для граничного сканирования имеет достаточно высокую стоимость. Для оценки возможностей JTAG-технологии можно воспользоваться бесплатным программным обеспечением Дмитрия Кузнецова VEC4JTAG, которое доступно по адресу http://www.orc.ru/~dkuzn/index.htm. Пакет предназначен для получения доступа к средствам контроля и управления схемами ввода-вывода BS-чипов через порт JTAG при помощи кабеля ByteBlaster фирмы Altera. Пакет включает в себя: • утилиту для трансляции текстового файла назначений векторов и параметров цепи JTAG в более удобную форму — байт-код; • библиотеку для обеспечения доступа к назначенным векторам; • файлы примеров. Файл назначений векторов (с расширением .V4J) содержит список определений векторов в качестве объектов доступа к BS, а также определяет конфигурацию цепи JTAG. Вектор доступа к BS-чипам определяет совокупность (из одного или нескольких) выводов микросхем, объединенных в цепи JTAG. Библиотека V4J поддерживается в следующих операционных системах: • DOS; • Windows 9x (в DOS-сесии). Аппаратные требования: • свободный LPT-порт; • загрузочный кабель Altera ByteBlaster (его конструкция достаточно проста для самостоятельного повторения и бесплатно доступна на сайте www.altera.com). Фирма BLIC (www.blic.ru) предлагает бесплатную программу PasByteBlaster, которая работает в среде Windows 9x и при использовании производимого фирмой загрузочного кабеля BLIC ByteBlaster обеспечивает следую- щие возможности: • внутрисистемное программирование микроконтроллеров, поддерживающих программирование через SPI-интерфейс, например, фирмы Atmel; • ISP-программирование микросхем серий MAX9000 и MAX7000A, S фирмы Altera через LPT-порт в режиме JTAG-интерфейса; • конфигурирование микросхем серии FLEX 10K, KA, KE; FLEX 8000 и FLEX6000 фирмы Altera в пассивном последовательном режиме PS; • поддерживается программирование микросхем на разные напряжения: 3,3 и 5 В; • поддерживается загрузка данных непосредственно из среды программирования Altera MAX+PLUS II. Бесплатный программный продукт PonyProg от Claudio Lanconelli (www.LancOS.com) ориентирован на программирование в последовательном режиме большого количества перепрограммируемых микросхем памяти и микроконтроллеров различных фирм: Atmel, Microchip и пр. Версия PonyProg2000 V2.06a поддерживает следующие семейства: • I2C 8- и 16-разрядные EEPROM серий 24x, и AT17x; • MicroWire8 и MicroWire16 EEPROM серии 93х; • SPI EEPROM серии 25х; • микроконтроллеры Atmel AVR-серии и AT89Sx; • микроконтроллеры Microchip серий PIC12 и PIC16; • ImBUS EEPROM MDA2062, NVM3065; • SDE2506 EEPROM; • S2430, X2444, X2445. Конструктивно программатор PonyProg состоит из базового модуля, подключаемого к последовательному порту компьютера, и набора адаптеров для различных интерфейсов: SPI, I2C, MicroWire и ICSP (для поддержки PIC Microchip). Схема программатора очень проста и может быть реализована на доступных компонентах, ее версия 2.2 свободно доступна на сайте www.LancOS.com. Корпорация Atmel производит большой ассортимент средств ISP-программирования и отладки для своих изделий. Для микроконтроллеров AVR-серии на сайте фирмы (www.atmel.com) бесплатно предлагается ин- тегрированная среда разработки AVR Studio, работающая в среде Windows 98/2000/XP. С ее помощью возможно программирование и отладка в исходных кодах на ассемблере, а также внутрисхемное программирование микроконтроллеров с помощью программаторов JTAG, ICE, STK500, ICE50 и AVR-ISP (работает через SPI). Программатор AVR-ISP можно изготовить самостоятельно, на основе информации, содержащейся в Application Note «AVR910: In-System Programming» (находится на www. atmel.com). Схема этого программатора представлена на рис. 6. Он обеспечивает согласование COM-порта персонального компьютера с SPI-портом микроконтроллера. Программатор питается от того же источника, что и программируемый микроконтроллер. Когда программирование не происходит, все выводы программатора, подключенные к SPI-порту микроконтроллера, переводятся в третье состояние, благодаря чему программатор может быть постоянно подключен к плате с микроконтроллером. В целом, использование бесплатной программы AVR Studio и самостоятельно изготовленный вариант программатора AVR-ISP представляется идеальным решением для разработки и программирования устройств на базе линейки AVR-микроконтроллеров фирмы Atmel без каких-либо дополнительных затрат. МИ ]]></text>
</doc>

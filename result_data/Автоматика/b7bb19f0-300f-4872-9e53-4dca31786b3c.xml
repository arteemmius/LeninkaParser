<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/postroenie-optimalnogo-raspredeleniya-vychislitelnyh-resursov-po-programmnym-kompleksam-obrabotki]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Сонькин Михаил Аркадьевич]]></item>
    <item type="str"><![CDATA[Грачев Владимир Викторович]]></item>
    <item type="str"><![CDATA[Кузьмин Андрей Львович]]></item>
    <item type="str"><![CDATA[Яценко Михаил Анатольевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Построение оптимального распределения вычислительных ресурсов по программным комплексам обработки]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[cистемы конвейерной обработки информации]]></item>
    <item type="str"><![CDATA[псевдооптимальное распределение программных комплексов]]></item>
    <item type="str"><![CDATA[генетический алгоритм]]></item>
    <item type="str"><![CDATA[сonveyor system of information processing]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассматривается моделирование работы системы конвейерной обработки информации, позволяющее повысить эффективность ее функционирования. Построено псевдооптимальное распределение программных комплексов обработки по вычислительным модулям системы конвейерной обработки информации.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[М.А. Сонькин, В.В. Грачев*, А.Л. Кузьмин**, М.А. Яценко* Томский политехнический университет *ФГУП «НИИ «Квант», г. Москва **Академия ФСО, г. Орел E-mail: sonkin@tpu.ru Рассматривается моделирование работы системы конвейерной обработки информации, позволяющее повысить эффективность ее функционирования. Построено псевдооптимальное распределение программных комплексов обработки по вычислительным модулям системы конвейерной обработки информации. Ключевые слова: Системы конвейерной обработки информации, псевдооптимальное распределение программных комплексов, генетический алгоритм. Key words: Conveyor system of information processing, a pseudo optimal distribution of software systems, genetic algorithm. Введение В настоящее время системы конвейерной обработки информации (СКОИ) получили широкое распространение. В систему поступает случайный поток информационных элементов из разных источников и в различных форматах. Далее происходит их обработка в режиме многошагового аналитического конвейера, включающего стадии преобразования и интеграции данных. Во время работы ресурсы СКОИ распределяются неравномерно, что позволяет считать, что часть производительности остается нереализованной. Моделирование работы СКОИ является одним из подходов, позволяющим повысить эффективность функционирования [1]. При проектировании СКОИ возникает задача определения количества вычислительных ресурсов необходимых для обработки заданного входного потока. Для решения этой задачи успешно используется имитационное моделирование [2]. На основании собранной статистической информации строится имитационная модель системы и при различных параметрах входного потока определяется загруженность ее компонентов. После того, как определено количество вычислительных ресурсов, необходимых для обработки входного потока, возникает вопрос об их оптимальном распределении. Решение этой задачи позволит обрабатывать входной поток с меньшими затратами, не теряя при этом производительности. Построение оптимального распределения вычислительных ресурсов СКОИ можно интерпретировать как задачу нелинейного целочисленного программирования. Одним из методов решения сложных оптимизационных задач, в частности, с нелинейными целевыми функциями, является применение генетического алгоритма [3]. Однако ввиду сложности ограничений и целевой функции использование целочисленного генетического алгоритма неэффективно, поэтому полученное реше- ние приводится к целочисленному псевдоопти-мальному с помощью преобразования, основанного на использовании «жадного» алгоритма поиска. В последующих разделах рассматривается построение псевдооптимального распределения программных комплексов обработки (ПКО) по вычислительным модулям (ВМ) системы конвейерной обработки информации. Система конвейерной обработки информации Система конвейерной обработки информации принимает случайный поток информационных элементов. Информационный элемент (ИЭ) - единица обрабатываемой информации в СКОИ. Процесс конвейерной обработки информации P! описывается как P=(ti,Ai,Tri); где t! - момент инициирования процесса; Ai - атрибуты процесса, определяющие параметры источника информации, параметры информационного элемента, режим обработки данных, приоритет процесса и др.; - трасса процесса. Трасса процесса - последовательность этапов обработки, связанных с изменением информационного элемента от этапа к этапу. Трасса процесса представляется в виде упорядоченного множества этапов ^=^^2,^, имевших место в моменты времени ^, Ь1, tk, такие, что ^<^<4. К этапам обработки относятся моменты ввода ИЭ в систему, начала и завершения обработки на программном комплексе обработки, начала и окончания обработки на супервизоре и др. Каждый этап связывается с моментом его возникновения, программой, реализующей процесс, и ресурсом, обслуживающим процесс. Можно считать, что в определенные промежутки времени входной поток обладает свойством стационарности и можно априорно, на основании статистических данных, задать количество ресурсов, необходимых для его обработки. Предлагается в супервизоре СКОИ реализовать оптимальное распределение вычислительного ресурса системы между ПКО. Количество вычислительных ресурсов выбирается так, чтобы СКОИ могла обрабатывать входной поток за требуемое время. Производительность работы СКОИ измеряется по использованию ресурса процессорного времени и оперативной памяти. Распределение ПКО по ВМ можно интерпретировать как задачу целочисленного нелинейного программирования. СКОИ имеет сложную внутреннюю структуру, которая отражается в нелинейных ограничениях. Сложная структура СКОИ и постановка задачи требует использования нестандартных методов решения [4, 5]. Генетические алгоритмы являются одним из перспективных методов при решении задач оптимизации с нелинейной целевой функцией и нерегулярным пространством поиска [3]. Они обладают высокой робастностью для предотвращения попадания в локальные минимумы и способны получать действительно глобальное оптимальное решение. Кроме того, это методы нулевого порядка, не использующие информацию о производных целевой функции. Оптимальное распределение ресурсов в СКОИ Математическая модель задачи представляется в виде: х = шп °Р‘ КеП (1) * ] V 1 х = ага шах I а > — I > Т. > (;хи < Т ,>г;хи < V, 1 = 1, Л , (3) 1 =1 1=1 >> х.. = С,, 1 = 1 м, (4) г = 1 Н (х)= 0, , = 1,К . (5) Псевдооптимальное распределение ПКО по ВМ представляет собой матрицу х^Мм, где Я -число ВМ, М - число ПКО. X - множество возможных распределений, определяемых ограничениями (3-5). Критерием оптимальности является минимальное число ВМ, размещение на которых заданного числа ПКО удовлетворяет ограничениям (3-5). СКОИ имеет Я™ число ВМ, минимальное количество ВМ определяется итерационной процедурой нахождения хотя бы одной точки, удовлетворяющей ограничениям (3-5) при текущем числе ВМ 1<Я<Ягааг!, после этого для найденного Я ищется оптимальное распределение. В работе используется многокритериальная целевая функция для оценки производительности системы по процессорному времени и оперативной памяти. Для определения решения оптимального в смысле Парето используется метод взвешенной функции (6), где ае(0,1) - параметр скаляризации. Наличие ограничений делает невозможным использование методов поиска безусловного экстремума. Ограничения (3) определяют пределы загрузки для каждого вМ. Вектора Т=(ТЬТ2,...,ТЯ)Т, У=(У1,У2,...,УЯ)Т задают ресурс процессорного времени и оперативной памяти имеющихся ВМ. Вектора t=(t1,tь..,tM)T, у=(уьу2,...,%)т задают ресурсы процессорного времени и оперативной памяти необходимые для работы соответствующих ПКО. Ограничения (4) задают число ПКО разного типа, необходимых для обработки входного потока. Коэффициенты С=(С1,С2,.,СМ)Топределяются на основании статистических данных в соответствии с заданными требованиями по производительности. Внутренняя структура СКОИ отражается в нелинейных ограничениях (5). Через нелинейные ограничения задается возможность запуска различного вида ПКО на одном ВМ, учет производительности ПКО, отражение изменения производительности в зависимости от расположения ПКО в структуре конвейера. Для работы с нелинейными ограничениями применяется подход [6], использующий запись целевой функции в форме функции Лагранжа со штрафом (7). Преобразованная таким образом целевая функция является нелинейной, что делает невозможным использование методов линейного программирования. Ограничения (5) являются недиффренцируемыми, что не позволяет использовать градиентные методы оптимизации. (6) ©(х,я,р)= /(х)- > х,н, (х)+ н, (х)2, (7) г=1 2 ,=1 гдеЛ%) - целевая функция; 0(х,Я,р) - преобразованная целевая функция; Я - множители Лагранжа при нелинейных ограничениях; р - параметр штрафа. Для определения экстремума целевой функции (2) используется генетический алгоритм. Учет нелинейных ограничений произвольного вида в преобразованной целевой функции (7) и использование генетического алгоритма для поиска экстремума позволяет существенно расширить класс моделей, применяемых для описания СКОИ. «Жадный» алгоритм поиска Задача построения оптимального распределения является задачей целочисленного программирования, но использование только целочисленного генетического алгоритма сравнимо по скорости работы с полным перебором всех возможных распределений. Поэтому построение распределения ПКО по ВМ производится в два этапа: с помощью генетического алгоритма находится нецелочисленный максимум по критерию (2), затем округление и преобразование полученного решения х* для приведения к виду, удовлетворяющему ограниче- м _ 1=1 _ Л 1 + (1 -а)>> - v V, м . 1=1 . } ,(2) / (х )=а>> 7 г=1 м >> t х.. _ 1=1 _ +(■ -“)»7 1=1 У 1 м >> у.х .. > 1 и _ 1=1 _ ниям, по формуле (1). Свертка S•P задает округление и преобразование. Построение псевдоопти-мального распределения сводится к нахождению в окрестности х* целочисленного решения X01”. Предполагается, что после округления часть из ограничений (3) и (4) удовлетворяется, и за конечное число атомарных преобразований распределение х* можно привести к Хр1. Под атомарным преобразованием понимается изменение на единицу любого элемента распределения ПКО по ВМ. Преобразование Рможно представить в виде поиска в пространстве состояний, где текущее распределение можно рассматривать как состояние ||х/||, д>0, деН, округленное распределение как начальное х'*=||х;/°||, соответственно цель поиска - Х^ЦхД Поскольку размерность матрицы распределения может быть большой и в задаче наблюдается большой коэффициент ветвления, то чтобы избежать комбинаторного взрыва, предлагается использовать «жадный» алгоритм поиска [7]. Использование эвристики для выбора наиболее перспективных состояний и механизма возвратов делает «жадный» алгоритм перспективным методом для решения подобных задач. Для реализации эвристик могут быть использованы следующие стратегии поиска: 1. Удовлетворение ограничений (4): уменьшение X : X Х > С , увеличение х. . : £ ху < С,. г г 2. Использование поиска в глубину, чтобы удовлетворить ограничения (3) и (5). Реализация Для реализации предложенного подхода на базе Matlab R2009a был создан макет программной системы, позволяющей производить расчет псевдо-оптимального распределения ПКО по ВМ. Стандартных средств Matlab было недостаточно для решения поставленной задачи, поэтому при работе системы используется модифицированная версия пакета Matlab genetic algorithm and direct search toolbox [8]. Часть компонентов пакета была подвергнута рефакторингу и реинжинирингу, чтобы удовлетворять требованиям по скорости работы для задач большой размерности. Система имеет расширенный набор параметров и позволяет отображать информацию о работе алгоритма. Также присутствует возможность использовать целочисленный вариант генетического алгоритма. Рассмотрим систему конвейерной обработки информации с 20-ю вычислительными модулями. Построим псевдооптимальное распределение 10 ПКО по вычислительным модулям системы. Число ПКО необходимых для обработки заданного входного потока представлены в табл. 1. Данные в таблицах задаются в виде безразмерных усредненных единиц. Все вычислительные модули одного типа, соответственно ресурсы процессорного времени и оперативной памяти задается виде Ti=Vi=100. Различные характеристики вычислительных модулей могут быть учтены через весовые коэффициенты в нелинейных ограничениях. Ресурсы процессорного времени и оперативной па- СЛ Qj 11..812 11.811 11.81- 11.809 ++ О 11.812 11.811 11.81 11.809 500 Best: 111.8112 Mean: 11.8112 Bast fitness Mean fitness 1000 2000 1500 Generation Best, Worst, and Mean Scores 500 1000 1500 2000 Generation 2500 3000 I I I I I Г 1 “ 1 1 1 ± _ 1 1 1 1 2500 3000 Рисунок. Распределение по поколениям лучших, худших особей и среднее значение функции приспособленности по популяции мяти необходимые для работы соответствующих ПКО представлены в табл. 2. Таблица 1. Число ПКО разного типа, необходимых для обработки заданного входного потока ВМ 1 2 3 4 5 6 7 8 9 10 C 12 5 10 14 9 13 9 10 8 6 Таблица 2. Ресурсы процессорного времени и оперативной памяти необходимые для работы ПКО ВМ 1 2 3 4 5 6 7 8 9 10 t 10 20 7 15 9 22 35 11 9 3 v 5 15 8 18 3 13 15 10 2 11 Расчеты показывают, что минимальное число ВМ, при котором удовлетворяются ограничения, ^тш=14. RIШl обеспечивает максимальную загрузку каждого из используемых вычислительных модулей. Увеличение числа ВМ существенно уменьшает загруженность каждого из используемых модулей. Таблица 3. Псевдооптимальное распределение ПКО по ВМ ПКО 2 В 0 1 0 1 2 1 0 2 0 1 1 0 0 0 0 1 1 3 0 0 1 1 0 1 0 1 0 0 3 2 0 1 2 0 1 1 1 0 0 0 0 0 0 0 2 0 2 1 0 0 2 1 1 0 0 0 1 0 2 0 0 0 1 1 1 1 1 0 1 0 2 0 0 2 0 1 0 2 0 0 1 0 1 1 0 1 1 1 0 0 2 0 1 2 1 1 0 0 1 1 0 0 1 3 0 2 0 0 0 1 0 0 2 1 1 1 1 0 0 0 1 0 1 1 1 1 1 0 0 0 2 1 0 1 0 1 0 1 1 1 ]]></text>
</doc>

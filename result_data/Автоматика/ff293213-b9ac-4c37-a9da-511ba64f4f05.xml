<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/primenenie-avtomata-adaptatsii-pri-razrabotke-adaptivnogo-algoritma-optimizatsii-dostupa-k-dannym]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Чернышев Юрий Олегович]]></item>
    <item type="str"><![CDATA[Венцов Николай Николаевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Применение автомата адаптации при разработке адаптивного алгоритма оптимизации доступа к данным]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[АДАПТАЦИЯ]]></item>
    <item type="str"><![CDATA[ОПТИМИЗАЦИЯ]]></item>
    <item type="str"><![CDATA[ИНФОРМАЦИОННЫЕ МАССИВЫ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Приведено описание адаптивного алгоритма решения задачи выбора оптимального порядка соединения отношений, использующего автомат адаптации. Особенность данного алгоритма возможность адаптации вычислительного процесса под обрабатываемые информационные массивы.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Приведено описание адаптивного алгоритма решения задачи выбора оптимального порядка соединения отношений, использующего автомат адаптации. Особенность данного алгоритма - возможность адаптации вычислительного процесса под обрабатываемые информационные массивы. Адаптация; оптимизация; информационные массивы. Y.O. Chernyshev, N.N. Vencov APPLICATION OF THE AUTOMATIC MACHINE OF ADAPTING BY DEVELOPMENT OF ADAPTIVE ALGORITHM DATA ACCESS OPTIMIZATION In work the description of adaptive algorithm of the decision of a problem of a choice of an optimum order of connection of the relations using the automatic machine of adaptation is resulted. Feature of the given algorithm - possibility of adaptation of computing process under processed information files. Adaptation; optimization; information files. * Работа выполнена при поддержке: РФФИ (грант № 10-01-00481-а), г/б № 2.1.2.1652. Введение. Адаптация по своей сути сопутствует максимизации эффективности функционирования различных систем, в том числе, и информационных. В этой связи актуальной научной задачей является разработка адаптивных систем доступа к данным. Под адаптивной понимают систему обработки запросов, имеющую следующие признаки [1]: ♦ получение информации из среды; ♦ использование полученной информации для корректировки своего поведения; ♦ периодическое чередование процессов сбора информации о состоянии среды и корректировки собственного состояния на основе использования обновленной информации. Необходимость разработки адаптивных алгоритмов решения ресурсоемкой задачи выбора оптимального порядка соединения отношений обусловлена отсутствием в ряде случаев достоверных статистических характеристик отношений, входящих в базу данных. Отсутствие адекватной математической модели, а также большая область поиска, являются предпосылкой к использованию методов поисковой адаптаций, основанных на использовании обучающих автоматов, моделирующих поведение объекта (процесса) оптимизации в некоторой среде [2]. Алгоритм взаимодействия объекта оптимизации и автомата адаптации (АА) заключается в следующем, на первом этапе случайным образом или по результатам работы какого либо алгоритма реализуется начальная альтернатива. В последующем на каждом шаге (итерации) адаптивного алгоритма выполняется 4 такта [2]: ♦ на первом такте рассчитываются параметры среды и объекта адаптации (ОА) после реализации ранее выбранной альтернативы; ♦ на втором этапе по параметрам оценивается состояние ОА в среде, на основании чего вырабатывается управляющий сигнал «поощрения» или «наказания»; ♦ на третьем такте под действием управляющего сигнала АА переходит в новое состояние; ♦ на четвертом такте реализуется альтернатива, соответствующая состоянию АА. Описание задачи и известные алгоритмы ее решения. Введем обозначения: Я - множество отношений, подлежащих соединению Я = {г0,тх,г2,...,гп_1}, где г,],т,Л,g = 1,п-1 порядок соединения отношений полученный на к-ой итерации алгоритма, обозначим как рк = 1^., г., гт,...гл. Если на к-ой итерации алгоритма известны точные статистические характеристики отношения г, то в кортеж Рк записывается как г., Рк =^г, г., гт,... ^,...,г^ ■ На первом этапе формирование начального порядка соединения отношений происходит на основе статистических (приближенных) характеристик соединяемых отношений т. е. Р =^г, г., гт,... ^,...,г^. После того как определен начальный порядок соединения отношений р =^г, г., гт,... ^ ,...,г^1 происходит соединение первых двух отношений и г) из кортежа Р1 . В результате соединения становятся известны точные статистические характеристики и гу, а кортеж Р1 записывается в виде Рк=(г, , гт,... ^,...,г^. В зависимости от текущей альтернативы следующий шаг заключается либо в присоединении к отношению полученному в результате соединения и г. очередного отношения гт, либо в генерации нового порядка со- единения отношений Р2. Если в результате повторной оптимизации получен кортеж Р2 ф р, например, P2 = ^ r, fj, rd,..., rm,...,.то к отношению полученному в результате соединения ri и . присоединяется отношение rd. Таким образом, процесс адаптивного решения задачи в является итеративным и заключается в следующем: 1. Формирование начального порядка (плана) соединения отношений. 2. Частичное выполнение плана соединения отношений (присоединение очередного отношения). 3. Повторная оптимизация (при необходимости) невыполненной части плана соединения отношений. 4. Чередование п. 2 и п. 3 до тех пор, пока не будут соединены все отношения. Таким образом, необходимо найти такой порядок соединения отношений, т.е. найти такую перестановку на множестве R, чтобы выполнялось условие: n-1 £ Tt (r (i)0R0[i]) ^ min, (1) i=0 где r(i) - отношение, стоящее в кортеже Pk на i-ой позиции; Ro[i] - отношение, полученное в результате реализации альтернатив на предшествующих итерациях; T(r(i)0R0[i] - мощность отношения полученного в результате соединения отношений r(l) и Ro[i]. Разработанные ранее алгоритмы [3] адаптивного управления выбором оптимального порядка соединения отношений используют автомат адаптации (АА) [2,4], поддерживающий две альтернативы: A1 - перед присоединением очередного отношения необходимо произвести дополнительную оптимизацию невыполненной части запроса и 42 - выполнять план соединения, полученный ранее (рис. 1). а і лг Рис. 1. Граф-схема предлагаемых автоматов адаптации Для повторной оптимизации невыполненной части запроса, т.е. повторного поиска оптимального порядка, на основе уточненных характеристик уже присоединенных отношений, данные алгоритмы используют алгоритм случайного поиска с нелинейной тактикой и релаксационный алгоритм случайного поиска с линейной тактикой. Описание предлагаемого алгоритма. В качестве процедуры поиска оптимального порядка соединения могут быть использованы [4-8]: ♦ алгоритмы случайного поиска (АСП), позволяющие получать субопти-мальные решения с вероятностью 0,4-0,5 за полиномиальное время; ♦ методы динамического программирования (МДП), гарантирующие получение оптимального решения за экспоненциальное время; ♦ генетические алгоритмы (ГА), позволяющие получать более предпочтительные по сравнению с АСП решения, и обладающие меньшей вычислительной сложность по сравнению с алгоритмами, основанными на динамическом программировании. На основании выше изложенного можно утверждать: ♦ АСП целесообразнее всего использовать, когда объемы соединяемых отношений априори значительно меньше объемов доступной оперативной памяти; ♦ МДП целесообразно использовать, когда количество соединяемых отношений не велико (Ы< 6..8), а объемы соединяемых отношений соизмеримы либо превосходят доступные пространственные ресурсы; ♦ ГА являются некоторым компромиссом между АСП и МДП, варьируя параметрами ГА, можно наделять его свойствами в некотором роде характерными, как для АСП (полиномиальная временная сложность), так и ДП (высокая вероятность получения субоптимального/оптимального решения). По этой причине в данной работе предлагается расширить число альтернатив, поддерживаемых АА до четырех: ♦ А1 - перед выполнением очередной части запроса необходимо осуществить переоптимизацию при помощи АСП; ♦ А2 - перед выполнением очередной части запроса необходимо осуществить переоптимизацию при помощи ГА; ♦ А3 - перед выполнением очередной части запроса необходимо осуществить переоптимизацию при помощи ДП; ♦ А4 - выполнять план соединения, полученный ранее. Стандартный вероятностный АА определяется следующей пятеркой [2]: ({£}, {/}, {А}, Ф,/). Переход АА из состояния / в состояние ¿+1 осуществляется по правилу [2]: ^+1) = ФШ /(¿+1)), (2) Аа)=Asm где £(/) - внутреннее состояние автомата в момент ¿; /(/) - отклик среды на сигнал поощрения или наказания; Ф - функция перехода из состояния в состояние; А(¿) - выход автомата в момент времени ¿; / - функция выхода. Граф-схема переходов предлагаемого АА приведена на рис. 2. А1 А2 АЗ Рис. 2. Граф-схема переходов предлагаемого АА Правила выработки управляющих сигналов, под действием которых АА переходит в новое состояние, приведены в таблице. Используемый в таблице оператор “not” является оператором логического отрицания, функция “abs(x)” возвращает модуль переменной х, |Sk| - суммарная мощность промежуточных^ отношений образованных после реализации k-ой итерации алгоритма т. е. Sk =£T (г(i) <ВД). i=0 Т аблица Правила выработки управляющих сигналов № п/п Реализованная альтернатива Отклик среды Управляющий сигнал 1 А1 Pk = Pk-1 - 2 А1 not (Pk = Pk-i) + 3 А2 Pk = Pk-1 - 4 А2 not (Pk = Pk-i) + 5 Аз (n-k)>6 - 6 Аз (n-k)<6 + 7 А4 -№ b - 8 А4 •“P w 1 Ь + Работа предлагаемого адаптивного алгоритма начинается с выбора и последующей реализации начальной альтернативы А, (рис. 3). В случае, если соединяемые отношения полностью могут быть размещены в оперативной памяти. то в качестве начальной альтернативы используется А;, если число соединяемых отношений не велико (5-6), но они превышают доступные пространственные ресурсы -А3, в оставшихся случаях - А2. На основе текущего состояния АА и вновь рассчитанных параметров среды осуществляется выработка отклика среды, заключающаяся в генерировании сигнала «поощрения» (+) или «наказания» (-). Выбор начальной альтернативы Реализация начальной альтернативы Расчет параметров среды ОАиАА Выработка отклика среды Переход АА Реализация текущей альтернативы Рис. 3. Структурная схема предлагаемого алгоритма Выработка сигнала “+” является признаком того что: ♦ при реализации альтернатив А1-А3 проведенная повторная оптимизация принесла некие позитивные результаты; ♦ при реализации альтернативы А4 существуют предпосылки к проведению повторной оптимизации. В свою очередь, выработка сигнала “-” может быть следствием того что: ♦ проведенная повторная оптимизация (при реализации альтернатив А1-А3) не принесла положительного результата; ♦ необходимо провести повторную оптимизацию (при реализации альтернативы А4). Под действием сгенерированного сигнала происходит переход АА в новое состояние в соответствии с граф-схемой (см. рис. 2). Работа алгоритма повторяется итеративно (см. рис. 3) до тех пор, пока запрос не будет выполнен, т. е. до момента, когда будут соединены все необходимые отношения. Заключение. На основании результатов проведенных экспериментов можно утверждать: 1. Разработанный адаптивный алгоритм решения задачи выбора оптимального порядка соединения отношений обладает полиномиальной вычислительной сложностью порядка O(n) - O(n4) . 2. На степень полинома оказывают значительное влияние альтернативы, реализованные в процессе выполнения запроса. 3. При отсутствии достоверных статистических характеристик соединяемых отношений, предлагаемый алгоритм способен адаптивно корректировать свою работу. ]]></text>
</doc>

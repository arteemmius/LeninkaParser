<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/razrabotka-modelnoy-realizatsii-funktsiy-besselya-iz-standarta-lsb]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Пономаренко А.В.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Разработка модельной реализации функций Бесселя из стандарта LSB]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[В работе рассматривается модельная реализация функций Бесселя, входящих в состав интерфейсов, описанных в стандарте Linux Standard Base (LSB). Функции Бесселя играют важную роль в решении задач математической физики и широко применяются в электротехнике и радиотехнике. Цель работы состоит в создании реализации функций Бесселя, позволяющей проверить все свойства данных функций: тщательно проанализировать точность возвращаемых значений, проконтролировать значения функций в особых точках и в их окрестностях, их поведение на участках монотонности и асимптотику. Существует большое число методов вычисления функций Бесселя, которые позволяют получать значения функций в различных областях значений аргументов. Однако ни один метод не даёт нужной для тестирования точности вычисления на всей области определения. В модельной реализации применяется комбинация из наиболее эффективных методов, которые строго проанализированы на точность и документированы. Разработанная библиотека производит вычисление указанных функций с помощью модельного типа чисел с плавающей точкой, задаваемых с произвольной точностью.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[А. В. Пономаренко Московский физико-технический институт (государственный университет), Институтский переулок, 9, г. Долгопрудный, Московская область, Россия E-mail: 375susanin@mail.ru Аннотация В работе рассматривается модельная реализация функций Бесселя, входящих в состав интерфейсов, описанных в стандарте Linux Standard Base (LSB) [1]. Функции Бесселя играют важную роль в решении задач математической физики и широко применяются в электротехнике и радиотехнике. Цель работы состоит в создании реализации функций Бесселя, позволяющей проверить все свойства данных функций: тщательно проанализировать точность возвращаемых значений, проконтролировать значения функций в особых точках и в их окрестностях, их поведение на участках монотонности и асимптотику. Существует большое число методов вычисления функций Бесселя, которые позволяют получать значения функций в различных областях значений аргументов. Однако ни один метод не даёт нужной для тестирования точности вычисления на всей области определения. В модельной реализации применяется комбинация из наиболее эффективных методов, которые строго проанализированы на точность и документированы. Разработанная библиотека производит вычисление указанных функций с помощью модельного типа чисел с плавающей точкой, задаваемых с произвольной точностью. 1. Введение Главная цель данной работы заключается в создании модельной реализации функций Бесселя, описанных в стандарте Linux Standard Base (LSB) [1]. В работе рассматриваются наиболее эффективные из известных методов вычислений функций Бесселя первого и второго рода, -Jn(x) и 7я(х) соответственно. Тщательно проанализирована точность самих методов, а также точность выполняемых в ходе вычислений арифметических операций. Также в работе исследованы свойства функций Бесселя и их поведение в особых точках, составлены требования к реализациям этих функций. Работа состоит из следующих частей. Сначала приведены основные свойства функций для ознакомления с ними. Затем приведён набор методов вычислений и исследование их точности. После этого проведён анализ ошибок арифметических операций, выполняемых при вычислениях по этим методам. Далее следует набор требований к реализациям функций, включающий в себя также анализ поведения в особых точках. 2. Функции Бесселя в стандарте /.ЭВ таШ.Ьевве! функции Бесселя таШ.Ьезве! ^ первого рода порядка 0 таШ.Ьезве! И первого рода порядка 1 таШ.Ьезве! \п первого рода порядка п таШ.Ьезве! уО второго рода порядка 0 таШ.Ьезве! у1 второго рода порядка 1 таШ.Ьезве! уп второго рода порядка п Таблица 1. Список функций Бесселя, описанных в рамках Ь8В [1]. 3. Основные понятия Уравнение вида х2 -^Ц^ + х- — + (х2 - У2)'у = О <1х <1х ’ называется уравнением Бесселя индекса V . Решение уравнения Бесселя, имеющее вид J (х) = У_______________________________^~1-^_____Г-1 Л Ьыг(у + к + 1)Ы называют функцией Бесселя первого рода индекса V . Здесь Г {а) = | х“-1 • е"1 сЬс — о гамма-функция (для целых неотрицательных п Г(п) = (и -1)!). Решение вида у = Jv(x)■co?ivж)-J_v(x) У ът(уж) называется функцией Бесселя второго рода индекса V (а также функцией Неймана или функцией Вебера). В случае целых индексов V = п е Ъ приведенное выражение для (х) понимается как предел при у —» п. В работе исследуются функции Бесселя первого и второго рода для целых индексов V = п е Ъ . 4. Графики функций Графики функций J0(x),J1(x),J2(x) изображены на Рис. 1, соответственно, сплошной, пунктирной и точечной линией. Графики функций 70(х),71(х),72(х) изображены на Рис. 2, соответственно, сплошной, пунктирной и точечной линией. Рисунок 1. Г рафики функций ^(х), Jl(x), 1г(х). Рисунок 2. Г рафики функций ¥0(х), У^х), У2(х). 5. Асимптотики поведения функций Бесселя Функции Бесселя имеют следующие асимптотики при различных условиях (см. [2,3]). 1 6. Вычисление факториала Во многих формулах для вычисления функций Бесселя присутствует факториал индекса и!. Индекс есть переменная типа т1, которая может принимать максимальное значение 2147483647. Факториал этого числа огромен. В работе используется формула Стирлинга для представления и! в удобной для вычислений форме: Например, в первом разложении Мейсселя (см. ниже), в формуле для вычисления функции Бесселя первого рода есть множитель ——, который приводится с помощью п\-пп формулы Стирлинга к удобному для вычислений виду . Первые 10 чисел Бернулли с четными номерами имеют следующие значения: где Вг1 есть числа Бернулли, определяемые по формулам Поскольку, начиная с некоторого момента, числа Бернулли с номерами, делящимися на 4, отрицательны, а с номерами, не делящимися на 4, — положительны, ряд 5(и) знакопеременный. Возьмём первые 10 его членов. Величина остатка ряда не превосходит первого отброшенного члена. Пренебрежение остатком ряда приводит к следующей относительной ошибке применения формулы Стирлинга. В алгоритмах вычислений формула Стирлинга будет применяться для п >100. При таких условиях имеем следующую оценку относительной погрешности. Этого вполне достаточно, так как везде далее будем добиваться гораздо большей относительной ошибки 10~2°. 7. Методы вычисления функций Поскольку различные методы вычисления функций Бесселя имеют разные характеристики сходимости в разных областях, для вычисления значений этих функций на всех значениях аргументов была выбрана следующая комбинация методов. • Представление рядом Тейлора в окрестности нуля (х < 4п ). • Асимптотические разложения Ганкеля (х>пг). • Метод Стида (х = п). • Первое разложение Мейсселя (х < п, п > 100 ). • Второе разложение Мейсселя (х > п, п > 100 ). Везде далее целое число Р означает выбираемое заранее количество хранимых значимых цифр в числах, с которыми оперируют вычислительные алгоритмы вычисления. 7.1. Представление Jlt(x) в виде степенного ряда Согласно [2,3] Jn(x) имеет следующее разложение в ряд Тейлора в окрестности 0. Для вычислений удобно считать (Л^-^-ю частичную сумму ряда путём сведения к (ЛИ) произведениям для уменьшения промежуточных ошибок. 22-^1-и п V 1- 4 • 2 • (и + 2) 1- 4-3-(и + 3) 1-.., 4-(А^-1)-(и + А^-1) Величина остатка этого ряда меньше его Л^-го члена. Таким образом, ошибка метода есть величина Л^-го члена ряда. Из-за медленной сходимости и нарастания ошибки этот метод применяется для значений аргументов х < 4п . Для значений аргумента х > л/й он становится неустойчивым по отношению к промежуточным ошибкам, связанным с арифметическими действиями, выполняемыми в процессе вычисления. Вычисление функции отрицательного индекса сводится к вычислению функции положительного индекса с помощью формулы: 3_п (х) = (-1)" • 3п (х) 7.1.1. Ошибка вычисления Следовательно, А1г(п,х) при возрастании к сначала возрастают, а затем убывают. 4+і (”>■*) _________________________ А1г(п,х) (& + 1)(и + & + 1) Исследуем ошибки для значений аргумента х < 4п . 2-К есть относительная ошибка, так как ^А1(п, х) есть величина порядка единицы. К(М,х,п) уменьшается приуменьшении х, рассмотрим максимум: п КЫ 4 ^ 1 N -(п + М) АН к ' 1 ж “ 4* . дл Чтобы добиться относительной ошибки 1СГ20 нужно выбрать N, такое что 4Ж-Л^!>102°, №>18 Попробуем расширить интервал, в котором можно достичь нужной относительной погрешности. Зафиксируем п = 100, х = 100, N = 100, для К получим 50200 К(п = 100, х = 100, № = 100) =----* 7.89-10~36 200! Далее заметим, что К(п, х, Ы) убывает при дальнейшем увеличении N . 50202 К(п = 100, х = 100, N = 101) = —------* 9.71 • 10~37 101-201! Величину суммы ряда оценим на компьютере: ’^А1(п,х) « 1.14-10~13. к=0 Таким образом, величина относительной ошибки равна 7.89 • 10~36 /1.14-10~13 * 6.92 • 10~23. Функция К(п,х,Ы) убывает при уменьшении и, следовательно, имеем следующие интервалы, на которых достигается относительная ошибка 10~23 при выборе = 100 . п < 100, х < п Помимо ошибки, присущей самому методу, возникает ещё дополнительная ошибка, связанная с неточностью выполнения операций сложения, вычитания, умножения, деления. Ее влияние может быть исключено путём увеличения количества значимых цифр Р, хранимых при вычислениях (ошибка проанализирована в одном из последних разделов). 7.2. Представление Уп(х) в виде степенного ряда Используем следующее представление функций Бесселя второго рода [2,3]. ад=---/„«-(1пф+г)---2— ж 2 ж ^5 -т-1)! | т\ ' :§г 1 ^ (-1)" л т=0т\-(т + п)\ / \п+2т {!) '{1: В этой формуле при п = 0 второй член (сумма по т от 0 до и-1) считается равным 0. С помощью этого представления значение Уп(х) вычисляется для положительных индексов. Вычисление функции отрицательного индекса сводится к вычислению функции положительного индекса с помощью формулы: ¥_п (х) = (-1)" • Уп (х). 7.2.1. Ошибка вычисления Исследуем ошибки для значений аргумента х < л/й. Для этого введём следующие обозначения. 11=1.3п(х)-(\пф + г), л 2 _ 1 £(п-т-1)! (х^"+2т 2 к'^> гЫ \2 1^_нг_Г£Гг".(51+|:1 л т=0 т\-{т + и)! ^2^1 к 1=1 к ¥п{х) = 11-1г-1ъ. Проанализируем составляющие ¥п (х). Для 13 выполнено (-1Г + , 1.±—кМ ( л £^т\-(т + п)\ ^2^ {{^к к) л ^(т-\)\-(т + п)\ ^2 т.е. этот член имеет порядок равный порядку Jn(x). Таким образом, 1г = — ■ (х) ■ (1п(—) + у) по порядку величины всегда больше 1г. Если и>0, х<^1п то л 2 /2 по порядку величины больше /1, так как /2 содержит как отрицательные степени х, так и положительные (при п > 2). Отсюда можно заключить, что при вычислении Jп (х) и /, с некоторой относительной ошибкой (У, у Yn (х) относительная ошибка будет меньше а. Число членов в 13 для получения относительной ошибки 1СГ20 можно получить из неравенства, аналогичного выведенному при анализе Jп (х). 4Ж -(JV -1)!> 1020 N> 20 Можно расширить интервал, на котором возможно вычислить функцию Yn(x) с относительной погрешностью 1СГ20, взяв N = 100 (см. вычисление ошибок Jn(x)). п < 100, х < п 7.3. Асимптотические разложения Ганкеля (Hankel’s expansion) Jn (х), Yn (х) Используются асимптотические разложения Ганкеля [2] для функций Бесселя при х —» +со и ограниченном п. j ,х)„ Г^~ Ц(г ^ у(-Т-(п,2ш) ж-п ж “ (-ir-^ + l) J'{X) Чж-Х rS(X 2 4 h (2-х)2" ( 2 4 (2-x)2"+1 , m)_K-l}-K-3}---K-(2^-D2} V ; 22" - ml Ряды, которые содержат данные формулы, расходятся. В связи с этим знак бесконечности у суммы нужно понимать как суммирование до тех пор, пока члены ряда уменьшаются. 7.3.1. Ошибка вычисления Исследуем ошибки для значений аргумента х>пг Введём следующие обозначения. ул (-1)” • (п,2т +1) 2 ^ (2 • х)2"+1 Рассмотрим, как ведут себя Д^ (п,х). Ат _ 1 (4и2 -(4»г-3)2)-(4и2 -(4»г-1)2) Д^ х2 128-(2»г-1)-»г Д, (и, х) начнут увеличиваться, когда (4п2 — (4т — З)2)• (4н2 — (4т — I)2) 1 х2' 128 • (2т -\)-т т = х>пг Заметим, что Ая есть относительная ошибка вычисления, так как /1 есть величина порядка единицы. Теперь найдём, каким нужно выбирать количество членов ряда для получения нужной относительной ошибки. Ат _ 1 (4и2 -(4»г-3)2)-(4и2 -(4»г-1)2) и4 1 Д^ х2 128-(2»г-1)-»г 16х2»г2 16»г2 А,, <------\—г- < и = 1СГ20 16Ж-(Л^!)2 N>9 Для любого значения а можно подобрать свою величину N . При значениях аргумента х<пг необходимое значение N сильно увеличивается, и в добавление к этому метод становится неустойчивым по отношению к ошибкам выполняемых арифметических действий. Однако для небольших значений индекса попробуем расширить область применимости метода. Исследуем при Ан п < 100, х > п . Ая _ 1 (4и2 - (4Ы - З)2) • (4и2 - (4Ы -1)2) < и4 ^ пг А„_, х2 128-(2ЛГ-1)-ЛГ 16х2^ 16№2 1 Г\Г\2Ы А < ” < 100 < 10-20 -\вя -И2 “16-. И2 № = 90 Оценку /1 сделаем на компьютере: /1 ~ 2.32 ~ 1. Следовательно, Ая есть относительная ошибка. При уменьшении п, или увеличении х, при выборе N = 90, относительная ошибка будет уменьшаться (при этом /1 ~ 1). Алгоритм вычисляет последовательно Ат и сравнивает с нужной ошибкой, при этом N определяется автоматически. Теперь рассмотрим /2. Заметим, что /2 по порядку величины есть I, </, Вынесением множителя 4и2 -1 ------- из 12 можно повторить все рассуждения примененные к Таким образом, выбрав то же число членов ряда в /2, мы не увеличим относительной ошибки вычисления функции. 7.4. Метод Стида (Steed’s method) вычисления JJx), YJx) Рассматриваемый в этом разделе метод вычисления функций Бесселя описан в [4,5]. Он применяется для вычислений значений этих функций на аргументах, близких к их индексам. Решается система из 4-х уравнений относительно Jn(x), Yn(х) и их производных. W = Jn (х) ■ y'r (х) - Yn (х) ■ j'n (х) = — п ■ X f - Jn (Х) ” П Jn(x) х Jn(x) x 2(« +1) 1 1 2(n + 2) 1 x 2(h + 3) V — п 2-х х 2(х + г) + — п' 2{х + 2 • /) + — п' V 2(х + 3-/') + ... / Уп(Х)=Г-^п(Х)- Первая непрерывная дробь считается до Л^-го уровня, вторая до Л^-го уровня. Первая непрерывная дробь сходится быстро для х<п, вторая для х>п. Чем больше отклонение аргумента от значения х0 = п в ту или иную сторону, тем большими нужно выбирать числа N1 и N2, чтобы обеспечить нужную точность вычислений. Знак Jn(x) берётся равным знаку непрерывной дроби /п во втором уравнении. Этот метод позволяет находить значения функций Бесселя Jn(x),Yn(x) для значений аргумента х=п. 7.4.1 Ошибка вычисления 7я(л:) и ад Поскольку оценка погрешностей усложнена из-за наличия ошибки непрерывной дроби, оценить которую очень сложно, то применяется следующий алгоритм проверки ошибок. Известно, что функции Бесселя удовлетворяют рекуррентным соотношениям: Пусть нам нужно оценить точность вычисления функции Jn(x), тогда вычисляем заодно функции Jп_г (х) и J п+1 (х) по тому же алгоритму. Подставляем в рекуррентное соотношение. Если оно выполняется с некоторой ошибкой, то это и есть ошибка вычисления функции. Таким способом можно получить следующие интервалы, в которых данный алгоритм даёт относительную ошибку вычисления 1СГ20 при выборе числа итераций дробей равным 500: 1) 102 < п < 103,и-10 < х < и + 400 2) 103 <и<104,и-10<л:<и + 100 3) 104 <и<105,и-10< х<п + \0 Данные интервалы можно расширить более мелким разбиением значений индекса п . 7.5. Первое разложение Мейсселя (Meissel’s first expansion) Рассматриваемый в этом разделе метод приведен в [6]. Перепишем уравнение Бесселя в следующем виде, сделав замену переменных. находим функции и0,и1,и2,... с помощью подстановки выражения для Jn(nz) в уравнение Бесселя. Интегрируем и(г) и получаем выражение для функции Бесселя первого рода. 2 dzJ (nz) dJАш) Z----------h Z------ + и2(1 - z2)Jn(nz) = 0 fife fife Решение его ищем в виде Z 4z + z2 4z + 10z3+z5 и, 8(1-z2)5/2’“3 8(1-z2)4 z 64z + 560z3 +456z5+25z7 ----------------------, u. 16 z + 368z3 + 924z5 + 347z7 + 13z' 32(l-z2)7 , , . (иг)" • ехр(ил/1 - г2)■ ехр(-К ) и п (иг) =--------------------------. , е"-и!-(1-г2)1/4-[1 + л/1-г2 Т 1 [ 2 + Зг ] 4г + г 1 ~~ 24и1 {Х-г2)3'2 ) 2~ 16п2(1-г2)3 ’ 1 16-15122-36542-3752'’ К =--------Г ------------------------16 5760 • п1 ^ (1-22)9'2 32г2 + 288г4 + 232г6 +13г8 4“ 128-»4(1-22)6 ’ V, =----------1----—т^г (67599 • г10 +1914210 • г8 + 4744640 • г6 +1891200•г4 + 322560 • и5 (1-г2)15'2 + 78720 • г2 + 256)------ —- 1260-и5 72 у =----------------—(48 + 2580 • г2 +14884 • 24 +17493 • г6 + 4242 • 28 +103 • г10), 192-и (1-г ) У7 =----------\----—^(881664-г2 +99783936-г4 +1135145088-г6 + 7 3440640-и (1-г ) + 2884531440-г8 +1965889800-г10 +318291750-г12 +5635995-г14 -2048)+ 1 1680-и7 у =--------------=------ (1024 + 248320 • г2 + 5095936 • г4 + 24059968 • г6 + 8 4096 • и8 (1-г2)12 + 34280896 • г8 +15252048 • г10 +1765936 • г12 + 23797 • г14),... Аналогично для функции Бесселя второго рода получаем ‘ • (п -1)!-[1 + л/1 - г2 ]" • ехр(Уп) ¥п(пг) = п ■(т)п -(1-22)1/4 ■ ъхр^пЛ^-г2) 7.5.1. Ошибка вычисления ./„(л:) и Оценим ошибку применённых формул. п 1\=- 1 107-и9-(1-г2)2 •(106 -Г2 +108г4 +10“г6 +1012 -(г8 +г10 + г12) + 1010г14 +108г16 + 106г18) Это и есть нужная относительная ошибка вычисления, обозначим её за /(г). Потребуем, чтобы величина ошибки не превосходила а = 1СГ20. /(-) = 1 107 -и9 -(1-г2)27'2 •(106 -г2 + 108г4 + 101Сг6 + + 1012 -(г8 +г10 +г12) + Ю10г14 +108г16 + 106г18) < 1СГ20 Построим график функции /{£) для различных значений индекса п . См. Рис.3-6. одо оде 0.12 0.16 Рисунок 3. Графики Дг) для п = 100 и п = 300. Рисунок 4. Графики /(г) для п = 600 и п = 1000. 1Б20 ІГ ?п 1 I СІ ВЕ-21 SS.il Є&21 «її 1 №21 1 2Е.ЇІ 2Ё-21 у 072 0.76 05 054 000 056 0® 05 052 0.94 Рисунок 5. Г рафики /(г) для п = 3000 и п = 104. ІЕ-20 і ЭЕ-21 6Ь51 *£•21 2&2І / 0 0,566 0,97 0.^5 0.9Є 0395 Рисунок 6. Г рафик /(г) для п = 105. Анализируя графики, можно выбрать следующие интервалы для п и х, на которых данный метод приближает функции Бесселя с относительной погрешностью менее Ю"20. 1) 100 < и < 300, х < 0.1-и 2) 300 < и < 600, х < 0.3-и 3) 600 <п< 1000. л-< 0.5 п 4) 1000 < и < 3000, х < 0.6-н 5) 3000<и<104. *<0.8 п 6) 104 <и<105,*<0.9-и 7) 105 < и < со, х < 0.98-и 130 Данной относительной погрешности достаточно для тестирования функций на переменных типа long double, а следовательно и double и float. Для тестирования функций на переменных типа double требуется меньшая относительная погрешность, а для тестирования float ещё меньшая. 7.6. Второе разложение Мейсселя (Meissel’s Second expansion) Приведенное здесь разложение также взято из [6]. + 4242sec10/? + 103sec12 /?), = _cot /?sec р 4 + 248320. sec2 р + 5095936. sec4 f 4 4096•п + 24059968 - sec6 /? + 34280896 • sec8 /? +15252048 • sec10 /? + +1765936• sec12 p + 23797 • sec14 /?),... Qn = Qi +Qi +бз +Qt +■■■ Pn =Pj +P2 +P3 +P4 + ... Pj = °0t ^ (4 sec2 P + sec4 P), 16- n p cot P (32 sec2 p + 288 sec4 p + 232 sec6 p +13 sec8 /?), 2 128-и = cot__^ ec2 „ +2580sec4 r + 14884sec6 /? +17493sec8 /? + 3 192-и Й = «(tan /?-/?) -^^(2 + 3sec2 P), 24 n a=- COt ^(16 -1512 • sec2 p - 3654 • sec4 /? - 375 • sec6 /?), Q3 =----cot ^ (256 + 78720 • sec2 /? +1891200 • sec4 /? + 322560•n + 4744640 • sec6 /? +1914210 • sec8 /? + 67599 • sec10 /?), = cot I (881664 • sec2 В + 99783936 • sec4 /? + ^4 3440640-n1 +1135145088 • sec6 /? + 2884531440• sec8 /? +1965889800 • sec10 /? + + 318291750 • sec12 /? + 5635995 • sec14 /? - 2048),... 7.6.1. Ошибка вычисления Jn (x) Ps ~^P^-(10V +10V + 109(z6 + z8 + z10 +z12 +z14) + 108z16 +105z18), 10Vl Q ^^l£(io6z2 +108z4 +1012(z6 +z8 +z10+z12) + 10nz16+108-z18), 10 -и л 1 X cot P = , z = — л/F^l и Относительная ошибка вычисления есть Г = И|- е. » а = «(ton/*“/*) -£^(2 + 3sec2 Р) = 24и 1 24и-| 1-1-1 .и 2 + 31 — Учитывая, что £ = — , перепишем последнее соотношение. п а “ »fV(z)2 -1-arccosf-Y)--------Д---r^-(2 + 3z2) 24и • (г2 — 1) Построим графики функции /(г,п) = \Р^ (г, и)| + от г для различных значений индекса п . См. Рис. 7, 8. Q5(z,n)-tg(Qn(z,n)-—) как функции Рисунок 7. Графики /(г) для п = 100 и п = 1000. Из первого графика видно, что при г > 5 относительная ошибка меньше 1СГ20. 1,12 1,14 1,1В 1,18 1.2 Рисунок 8. Г рафики Дг) для и 1N' и /г III. Анализируя графики, можно выбрать следующие интервалы для п и х, на которых данный метод приближает функции Бесселя с относительной погрешностью менее Ю"20. 1) 100 < п < 1000,х > 5-п 2) 1000 <п< 104, дг > 1.6-и 3) 104 <и<105.л->1.14-и 4) 105 <и<оо,дг> 1.03-и Для другой относительной погрешности можно подобрать свои интервалы. 7.6.2 Ошибка вычисления )' (’.г ) Относительная ошибка вычисления есть -п- а - сока Построим графики функции /(г, и) = |Р5(г, и)| + от г для различных значений индекса п . См. Рис. 9, 10. а(-.»)-со«а(-.»)-т) как функции 5 5.5 6 6.5 7 7.5 Рисунок 9. Графики /(г) для п = 100 и п = 1000. Из первого графика видно, что при 2>Ь относительная ошибка меньше Ю“20. 1,12 1,14 1,16 1,18 1,02 1,03 1,04 1,05 1,06 1,07 1,08 Рисунок 10. Г рафики /(г) для п = 104 и п = 105. Анализируя графики, можно выбрать следующие интервалы для п и х, на которых данный метод приближает функции Бесселя с относительной погрешностью менее 1 (Г20: 1) 100 < п < 1000, х > 6-п 2) 1000 <п< 104, х > 1.1 -п 3) 104 <п< 105, х > 1.12-и 4) 105 < п < со, х > 1.03-и Для другой относительной погрешности можно подобрать свои интервалы. 8. Требования к реализациям функций Бесселя 8.1. Область определения функций 1. Jn(x) определена для всех значениях аргумента х. 2. ¥п(х) определена для значений аргумента х > 0 . 8.2. Точки выхода за интервал представимых чисел 1. Если значение одной из функций Jn(x), пфО при данном значении аргумента х —» 0 мало настолько, что выходит за пределы интервала чисел с плавающей точкой, то данная функция должна возвращать 0. Обозначим за е минимальное следует, что для аргументов |х| < 2-(е-п\)п функция должна возвращать 0. _1_ Таким образом, от функции Jn{x) нужно требовать: Jn{x) = 0, |х| < 2-(е-п\)п . 2. Функция J0(x) имеет в точке х = 0 экстремум(/„(*)< 1). Следовательно, нужно требовать, чтобы в некоторой окрестности нуля определяемой неравенством \-J0(x)<E функция возвращала единицу. Возьмём в разложении Тейлора представимое положительное число. Из асимптотики функции J0 (х) первые Из неравенства 1 -J0(x)<£ получим следующий интервал для аргумента Таким образом, от функции J0(x) нужно требовать: J0(x) = 1, |*| < 2-Гв. 3. Если значение одной из функций Yn(x) при данном значении аргумента х —^ +0 велико настолько, что выходит за пределы интервала чисел с плавающей точкой, то данная функция должна возвращать -со. Обозначим за М максимальное представимое число. Из асимптотики поведения функции 70(*)b нуле следует, что для аргументов 0 < х < 2 • ехр|- у - (3Десь у — постоянная Эйлера) функция должна возвращать - со. Заметим, что, например, для чисел типа float, double, long double верна следующая оценка: о I 2• ехр^ -у--- — Г - £> а значит Для всех представимых аргументов х > 0 выполнено |Г0(х)|<М. Для функции ^(х) должно выполняться: 2 7j(*) = -со, 0 < х <--. От функции ¥„(х) нужно требовать: к-М 1 7,(x) = -co,0<x<2-f(”~1)! ^ ж-М 8.3. Область значений функций Из всех функций только для одной можно дать точную оценку для области значений, причём это всего лишь оценка сверху. JoM<l Это свойство должно быть выполнено для всех значений аргумента. 8.4. Некоторые соотношения 1. JQ(—x) = JQ(x\Jl(—x) = —Jl(x\Jn(—x) = (—1)га • Jn(X) 2. J_n(x) = (-\)n -Jn(x) 3. Y_n(x) = (-iy-Yn(x) 4. Рекуррентные соотношения: 4.1 ,Jn_1(x) + Jn+1(x) = ^'j-Jn(x) 4.2 ,Yn_1(x) + Yn+1(x) = ^'j-Yn(x) 8.5. Сохранение знака Знак значения реализации функции для всех аргументов должен совпадать со знаком значения самой функции, кроме тех значений аргумента, у которых единица последнего разряда становится больше величины интервала смены знака. 8.6. Значения на особых числах с плавающей точкой X NaN +0 -0 + CO — CO J0(x) NaN 1 1 0 0 J,(x) NaN +0 -0 0 0 Jn (x), n>2 NaN +0 +0, n = 2k,ifiZ -o, n = 2k +1, k є Z 0 0 J n(x),n< -1 NaN +0, n = 2k, k в Z -0, n = 2k +1, k є Z +0 0 0 NaN — CO NaN 0 NaN вд NaN — CO NaN 0 NaN yjx) NaN — CO NaN 0 NaN Таблица 2. Значения функций Бесселя для особых чисел с плавающей точкой. 9. Ошибки выполнения арифметических операций Во время всех вычислений одновременно вычисляется оценка ошибки, связанной с ограниченностью количества хранимых значимых цифр Р в числах, с которыми оперируют используемые алгоритмы. Обозначим основание системы счисления за base. Оценка ошибка хранится в виде целого числа R и вычисляется по следующей формуле. R error =----- base Пусть производится некоторая операция с числами X и Y. Обозначим как е1 порядок числа X, как ег обозначим порядок числа Y, как f обозначим первую значащую цифру числа X, а как /2 — первую значащую цифру числа Y. Пусть ошибка X равна error;, ошибка Y равна еггогг. Далее приводятся алгоритмы вычисления ошибок, которые позволяют оценить порядок возникающих ошибок операций. Сначала ошибки всех чисел инициализируются единицей, так как за некоторое число операций в результате округления у чисел появится погрешность не превосходящая 1СГР. 9.1. Ошибка сложения чисел X и Y Если порядок X больше порядка Y, то 1 error = erro7-J Л-—— • error2. base’ ‘ Если порядок Y больше порядка X, то error = error л-----—- • error,. base Если порядки равны, то error = erroг, + error2. Если в результате сложения порядок результирующего числа больше порядка слагаемых, то ошибку нужно разделить на base. 9.2. Ошибка вычитания чисел X и Y Если порядок X больше порядка Y, то 1 error = erro7-J л---—— • error2. basee e Если el - e2 > P -1, то ошибка увеличивается на единицу. Если порядок Y больше порядка X, то 1 error = error л-----—- • error,. 2 base 1 Если el - el > P -1, то ошибка увеличивается на единицу. Если порядки равны, то error = erroг, + еггогг. 9.3. Ошибка умножения чисел X и Y еггог = erron-d + f) + error, -(1 + /2) base base 9.4. Ошибка деления чисел X и Y error, ■ base error ■ base ■ f, error =------!----+-----1-------— /i (Гг)" Если f / f2 > 1, то ошибку нужно разделить на base. 9.5. Статистика ошибок вычисления JJх) Далее в Табл. 3 приведены оценки ошибки используемьк методов в виде значений R для различных интервалов, на которых вычисляются функции. Метод Интервал Я Представление в виде степенного ряда и < 100, х < и ю8 и > 100, х < 4п ю2 Асимптотическое разложение Ганкеля и < 100, х > и 106 и > 100, х > и2 103 Метод Стида 102 < и < 103,и-10 < х < и + 400 ю9 103 < п < 104,и-10 < х < и + 100 ю9 104 <и<105,и-10<л:<и + 10 ю9 Первое разложение Мейсселя 100 < п < 300, х < 0.1 - и ю4 300 <п< 600, х<0.3-п 103 600 <п< 1000,* < 0.5-и 103 1000 <п< 3000,*< 0.6• п 103 3000 <и<104,*<0.8-и 103 104 <и< 105,*< 0.9-и ю4 Второе разложение Мейсселя 100 < п < 1000, х>5-п ю4 1000 <и<104,*>1.6-и ю5 104 <и< 105,*> 1.14-и 106 105 < п < со,* > 1.03-и 106 Таблица 3. Значения оценок ошибок арифметических действий при вычислении Jп (.V !. 9.6. Статистика ошибок вычисления Уп(*) Далее в Табл. 4 приведены оценки ошибки используемых методов в виде значений К для различных интервалов, на которых вычисляются функции. Метод Интервал д Представление в виде степенного ряда п < 100, х< п ю8 п > 100, * < л/й ю2 Асимптотическое разложение Г анкеля п < 100,х> п 106 п > 100,х> п2 103 Метод Стида 102 < п < 103,и-10 < * < и + 400 ю9 103 < п < 104,и-10 < * < и + 100 ю9 104 <и<105,и-10<*<и + 10 ю9 Первое разложение Мейсселя 100 < п < 300, х < 0.1 - и 104 300 <п< 600, * < 0.3 • и 103 600 <п< 1000,* < 0.5-и 103 1000 <п< 3000,*< 0.6• п 103 3000 <и<104,*<0.8-и 103 104 < и < 105,*< 0.9-и 104 Второе разложение Мейсселя 100 < п < 1000, * > 6 • п 104 1000 <и<104,*>1.7-и ю5 104 <п< 105,* > 1.12-и 106 105 < п < со,* > 1.03-и 106 Таблица 4. Значения оценок ошибок арифметических действий при вычислении У (х) . 10. Структура разработанной реализации В результате проведенной работы была разработана реализация функций Бесселя первого и второго рода на языке С. Реализация выполнена в виде набора функций, работающих с данными типа ипіИоаі (числа с плавающей точкой произвольной точности) и размещенных в файле Ьеээекс. Разработанные функции перечислены в Табл. 5. Декларация функции Пояснение unifloat bessel jO (unifloat x, int method) Функция Бесселя первого рода индекса 0 unifloat bessel jl (unifloat x, int method) Функция Бесселя первого рода индекса 1 unifloat bessel yO(unifloat x, int method) Функция Бесселя второго рода индекса 0 unifloat bessel yl(unifloat x, int method) Функция Бесселя второго рода индекса 1 unifloat bessel jn(int n, unifloat x, int method) Функция Бесселя первого рода индекса п unifloat bessel yn(int n, unifloat x, int method) Функция Бесселя второго рода индекса п Вспомогательные функции unifloat powerseries jn(int n, unifloat x) Реализация ряда Тейлора для </п(Х) unifloat powerseries yn(int n, unifloat x) Реализация ряда Тейлора для 7П(Х) unifloat Hankel jn(int n, unifloat x) Реализация разложения Ганкеля для «7п(д:) unifloat Hankel yn(int n, unifloat x) Реализация разложения Г анкеля для 7п(х) unifloat Steed jn(int n, unifloat x) Реализация метода Стида для «/п(лО unifloat Steed yn(int n, unifloat x) Реализация метода Стида для 7п(лО unifloat MeisselFirst jn(int n, unifloat x) Реализация первого разложения Мейсселя для «/п(л:) unifloat MeisselFirst yn(int n, unifloat x) Реализация первого разложения Мейсселя для 7п(х) unifloat MeisselSecond jn(int n, unifloat x) Реализация второго разложения Мейсселя для </п(х) unifloat MeisselSecond yn(int n, unifloat x) Реализация второго разложения Мейсселя для 7п(х) unifloat Stirling series (int n) Вспомогательная функция для вычисления факториала unifloat UFsqrt(unifloat x) Вспомогательная функция извлечения корня unifloat UFpow(int n, unifloat x) Вспомогательная функция возведения в степень complexnum complex add(complexnum x, complexnum y) Сложение комплексных чисел complexnum complex sub(complexnum x, complexnum y) Вычитание комплексных чисел complexnum complex mul(complexnum x, complexnum y) Умножение комплексных чисел complexnum complex div(complexnum x, complexnum y) Деление комплексных чисел Таблица 5. Список функций, разработанных при реализации вычислений функций Бесселя. 11. Заключение В результате данной работы исследованы и реализованы методы вычислений функций Бесселя, проанализирована их точность и приведена статистика арифметических операций. Составлены требования к реализациям функций. ]]></text>
</doc>

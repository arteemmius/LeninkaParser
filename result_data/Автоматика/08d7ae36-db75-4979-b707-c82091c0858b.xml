<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/svoystvoobrazuyuschie-harakteristiki-agentov-ispolzuemye-pri-postroenii-multiagentnyh-sistem-mas]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Янушко В.]]></item>
    <item type="str"><![CDATA[Еркин С.]]></item>
    <item type="str"><![CDATA[Далекин А.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Свойствообразующие характеристики агентов, используемые при построении мультиагентных систем (мас)]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[За последние 10 лет развитие телекоммуникационных технологий привело к возникновению концепций кросс-платформенных, распределенных и интеллектуальных программных систем. Такие системы могут быть реализованы разными способами, но именно мультиагентные системы (МАС) концентрируют все необходимые для таких технологий свойства с наибольшей выразительностью и полно. перспективность этому направлению. Технология и теория агентов продолжают развиваться в рамках исследовательских и коммерческих проектов. Особое внимание уделяется интеграции методов искусственного интеллекта, которые до настоящего времени находили применение преимущественно в исследовательских работах, в реальные коммерческие приложения (персональные помощники, обработчики почты, программы для электронной коммерции, компьютерные игры, системы управления и контроля сложными процессами в медицине, промышленности, ). , ( ), , . . - сти программы самостоятельно реагировать на внешние события и выбирать соот-. агентов, модели их поведения и свойства, семейство архитектур и библиотеки компонентов, ориентированные на современные требования, такие, например, как распределенность, автономность и др. [2]. На рис.1 приведена возможная схема взаимодействия агентов различного типа . Рис.1. Схема взаимодействия агентов Как видно из рисунка (см. рис.1) агенты типа А могут взаимодействовать только с агентами типа В или с себе подобными, агенты типа В могут, кроме того, иметь множественные связи с агентами типа С. Непосредственно между собой агенты типа А и С не взаимодействуют. Общепринятого определения термина «агент» не существует. Рассматриваемый в какой-либо системе мультиагент - это аппаратная или программная сущ- * Работа выполнена при поддержке РФФИ (фанты № 05-08-18115, № 07-01-18115) и программ развития научного потенциала высшей школы 2006-2008 гг. (РНП.2.1.2.3193, РНП 2.1.2.2238). ность, способная действовать в интересах достижения некоторых целей, поставленных перед ним владельцем и/или пользователем. Таким образом, агенты рас, , - нарию [1-2]. Агенты подразделяют на четыре основных типа: простые, умные (smart), ин-теллектуальные(ш1е1%еп1) и действительно интеллектуальные0ги1у intelligent). Интерес для построения MAC в задачах инженерии знаний представляют, в , , которые отличаются тем, что помимо автономного выполнения, взаимодействия с другими агентами и слежения за окружением могут адаптировать свое поведение, , . Программные интеллектуальные агенты - это новый класс систем программ, , - , . Они являются, по сути, новым уровнем абстракции, отличным от привычных абстракций типа классов, методов и функций. Но при этом разработка MAC позволяет создавать системы, обладающие расширяемостью, масштабируемостью, мобильностью, переносимостью, что, несомненно, очень важно при разработке систем, основанных на знаниях. Агент характеризуется следующими свойствами: ♦ автономность - агенты функционируют без прямого вмешательства людей или каких-либо других объектов и владеют определенной способностью контролировать свои действия и внутреннее состояние; ♦ методы (способы) общения - агенты взаимодействуют с другими агентами при помощи некоторого коммуникационного языка; ♦ реактивность - агенты способны воспринимать окружающую среду (которая может быть физическим миром, пользователем, взаимодействующим через графический интерфейс, коллекцией других агентов, Internet, , , ) - деленных временных рамках на происходящие в окружающей среде из; ♦ активность - агенты не просто реагируют на изменения среды, но и обладают целенаправленным поведением и способностью проявлять ини- ; ♦ индивидуальная картина мира - каждый агент имеет собственную ( ), , . , -рую получает из внешней среды; ♦ коммуникабельность и кооперативность - агенты могут обмениваться информацией с окружающей их средой и другими агентами. Возможность коммуникаций означает, что агент должен получать информацию об окружающей его среде, что дает ему возможность строить собственную модель мира. Более того, возможность коммуникаций с другими агентами является обязательным условием совместных действий для дос; ♦ интеллектуальное поведение - поведение агента включает способность , -щей среды для того, чтобы находить оптимальные способы поведения [1]. Следовательно, каждый агент - это процесс, который владеет (располагает) определенной частью знаний об объекте и возможностью обмениваться этими знаниями с другими агентами. Классификацию агентов можно провести в двух направлениях - по их инструментальной реализации (языку программирования агентов) и по основным приметам, которыми они владеют [1]. , или инструментальной системы разработки, которая бы полностью соответствовала требованиям построения агентов. С точки зрения принципов распределенного объектно-ориентированного программирования (ООП) необходимость передачи методов может быть существенно сокращена в том случае, если может быть обеспечен удаленный доступ к общим методам посредством передачи ссылок на уда, . -полнение к концепции ООП, каждый агент имеет возможность создания копий самого себя с полной или ограниченной функциональностью, обеспечивая возможность настройки на среду путем исключения неэффективных методов и замены их новыми. Традиционная для ООП схема класс/объект нарушается, т.к. агент имеет возможность постоянного изменения сценария поведения без его изменения в родительском классе. Многозначное наследование позволяет создавать экземпляры агентов, смешивая сценарии поведения, схемы наследования и атрибуты, определенные в родительских классах [2]. Следовательно, система разработки, которая бы полностью соответствовала требованиям построения агентов, должна была бы соответствовать следующим требованиям: обеспечение перенесения кода на , , , . Чаще всего в агентных технологиях используются: универсальные языки программирования (Java); языки, «ориентированные на знания», такие, как языки представления знаний (KIF), языки переговоров и обмена знаниями (KQML, AgentSpeak, April), языки спецификаций агентов; специализированные языки программирования агентов (TeleScript); языки сценариев (Tcl/Tk); символьные языки и языки логического программирования (Oz). Одно из самых главных свойств агента - это интеллектуальность. Интеллектуальный агент владеет определенными знаниями о себе и об окру, . Интеллектуальные агенты являются основной областью интересов агентной технологии. Важна также среда существования агента: это может быть как реальный , ( ), распространением сети Internet. От агентов требуют способности к обучению и даже самообучению. Поскольку обучение обуславливает наличие знаний у обучаемого, то обучаемым или самообучаемым может быть только интеллектуальный агент. В зависимости от наличия свойства планирования агенты подразделяются на регулирующие и пла-. ( ), агент будет постоянно переоценивать ситуацию и заново вырабатывать свои действия на окружающую среду. Планирующий агент имеет возможность запланировать несколько действий на различные промежутки времени. При этом агент имеет возможность моделировать развитие ситуации, что дает возможность более адекватно реагировать на текущие ситуации. Однако агент должен учитывать не только свои действия и реакцию на них, но и сохранять модели объектов и агентов окружающей среды для предсказания их возможных действий и реакций [3]. Агент может иметь доступ к локальным и глобальным ресурсам. При этом агентов, которые имеют доступ к локальным ресурсам (ресурсы, к которым имеет , ), -ками, они автоматизируют работу текущего пользователя, помогая ему в выполнении некоторых операций. Соответственно, сетевой агент самостоятельно получает доступ к информации, не доступной пользователю напрямую либо доступ к которой не был предусмотрен. Важным свойством является мобильность - возможность менять свое местонахождение в окружающей среде. Для программного агента под мобильностью понимается возможность передвигаться по сети от компьютера к компьютеру. Переходя от одного компьютера к другому, такой агент может обрабатывать данные и передавать по сети только результаты своей работы. Сис-, , другу некоторую информацию, взаимодействовать между собой, и называется многоагентной (МАС) [4]. ]]></text>
</doc>

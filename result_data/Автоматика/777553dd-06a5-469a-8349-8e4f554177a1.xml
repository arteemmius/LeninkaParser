<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/formalizatsiya-problemy-optimizatsii-razmescheniya-dannyh-sapr-v-oblake]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Коваленко Олеся Сергеевна]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Формализация проблемы оптимизации размещения данных САПР в «Облаке»]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[«ОБЛАЧНОЕ» ХРАНЕНИЕ ДАННЫХ]]></item>
    <item type="str"><![CDATA[РАЗМЕЩЕНИЕ ДАННЫХ]]></item>
    <item type="str"><![CDATA[МЕТОД ОПТИМИЗАЦИИ]]></item>
    <item type="str"><![CDATA[«CLOUD» DATA STORAGE]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассмотрена формализованная постановка задачи оптимизации размещения данных САПР в «облаке» в соответствии с предложенным иерархическим представлением структуры сложной САПР. Определены и описаны основные этапы и проблемы решения данной задачи на различных уровнях организации системы, определены исходные данные задачи. На каждом этапе решения задачи оптимизации вводятся необходимые ограничения. Разработана математическая модель размещения данных для взаимосвязи уровней функциональной и аппаратной конфигурации, размещения фрагментов данных. Выбраны критерии эффективности и выведена формула общего критерия эффективности для задачи оптимизации размещения данных в узлах «облака».]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Рассмотрена формализованная постановка задачи оптимизации размещения данных САПР в «облаке» в соответствии с предложенным иерархическим представлением структуры сложной САПР. Определены и описаны основные этапы и проблемы решения данной задачи на различных уровнях организации системы, определены исходные данные задачи. На каждом этапе решения задачи оптимизации вводятся необходимые ограничения. Раз- * Работа выполнена при частичной поддержке РФФИ (проект № 11-01-00122). работана математическая модель размещения данных для взаимосвязи уровней функциональной и аппаратной конфигурации, размещения фрагментов данных. Выбраны критерии эффективности и выведена формула общего критерия эффективности для задачи оптимизации размещения данных в узлах «облака». «Облачное» хранение данных; размещение данных; метод оптимизации. O.S. Kovalenko CAD SYSTEM’S DATA ACCOMMODATION IN «CLOUD» OPTIMIZATION PROBLEM FORMALIZATION It is considered formalized statement of optimization of the accommodation data of the system of CAD in the «cloud» according to the offered hierarchical representation of the structure complex CAD system in this article. The basic stages and problems of the decision of the given problem at several of the system organization levels are defined and described. Input data are declared. Required constraints are introduced in each stage of the optimization problem decision. Mathematical model of the data accommodation is designed for the relationship between levels of functional and hardware configuration and data fragments accommodation. It is chosen efficiency criterions and deduced a formula complex efficiency criterion for the problem of the optimization of the data accommodation in «cloud» hosts. «Cloud» data storage; accommodation of data; the method of optimization. . - ность в компромиссе между функциональными возможностями и эксплуатацион-. API, намного более ограниченные, чем в традиционных системах баз данных, с минималистским языком запросов и ограниченными гарантиями согласованности. Это затрудняет программирование приложений, но позволяет создавать более предсказуемые службы облачных сервисов, в которых обеспечиваются соглашения об уровне обслуживания, трудно достижимые для полнофункциональных сервисов данных на основе языка SQL. Требуется дополнительная работа и накопление опыта в нескольких направлениях для исследования непрерывного спектра подходов между ранними облачными сервисами данных и более развитыми с функциональной точки зрения, но, возможно, менее предсказуемыми альтернативами [1]. По сравнению с традиционными системами, достижение высокого уровня , , осложняется тремя факторами: ограниченным человеческим вмешательством, значительным разбросом диапазона рабочих нагрузок и разнообразием совместно . - рование платформ должно будет в основном производиться в автоматическом режиме. Со временем может значительно изменяться рабочая нагрузка даже у одного и того же потребителя. При этом возможности настройки сервисов зависят от « » . « » - мых рабочих нагрузок и используемых платформ. При наличии этих вариантов требуется пересмотреть традиционные роли и распределение ответственности для многоуровневого управления ресурсами. Потребность в управляемости делает более срочной разработку технологий самоуправления баз данных, которые исследовались в последнее десятилетие. Для обеспечения жизнеспособности этих систем [1,2]. Архитектура системы при использовании облачных вычислений является логическим продолжением и обоснованным аппаратно-программным решением для построения единого информационного пространства, объединяющего потоки дан- ных. Все функциональные элементы перенесены внутрь облака и скрыты за кольцом интерфейсов доступных сервисов, а само облако при этом является интеллектуальным источником распределения данных и построения сложной архитектуры системы [2]. Создание сложных компьютерных интеллектуальных аналитических систем для САПР, функционирующих в «облаке» предполагает, прежде всего, подготовку «облачной» САПР и БД к работе такими системами. Работа «облачной» САПР , , -ленных по серверам «облака» программных модулей САПР и фрагментов БД САПР. Для решения этих задач создается «облачная» информационная система, которая обеспечивает своевременное поступление исходных данных и команд, необходимых системе и пользователю в процессе работы, передачу результатов , . В настоящее время актуальной является постановка и решение задачи оптимизации размещения данных среды САПР в «облачной» информационной системе автоматизированного проектирования [1-7]. Решение любой оптимизационной задачи предполагает следующие этапы: ♦ постановка проблемы; ♦ конструирование ко нцептуальной модели; ♦ выбор критерия эффективности; ♦ построение мате магической модели; ♦ выбор алгоритма оптимизации; ♦ реализация; ♦ проверка модели; ♦ анализ получен ных результатов. На первом этапе для формализации процедуры нахождения оптимального размещения данных в «облаке» описание структуры САПР можно представить в виде иерархии нескольких уровней (рис. 1) [1-4,7]: ♦ уровень аппаратной конфигурации, который представлен серверами и « », , как объем оперативной памяти, скорость передачи данных, частота процессора, объем видеопамяти и т.д.; ♦ уровень функцион альной конфигурации, означающий характер распределения программного обеспечения и программных модулей САПР по узлам « », . . -, -, -; ♦ уровень информ ационной модели, на котором представлен состав данных, необходимых для функционирования системы в целом и отдельных приложений и программных модулей в частности, а также БД. Из рисунка (см. рис. 1) видно, что на различных элементах аппаратной кон, . . « », -, уровня информационной модели (это показано изображением блоков, имеющих различную степень окраски, в том случае, когда данные не требуются, блоки изо). Рис. 1. Структура САПР в виде иерархии уровней [3] В качестве исходных данных задачи размещения программных модулей САПР в «облаке» служит следующая информация: ♦ PCi, і = 1, п - количество серверов «облака», при этом каждый из них может характеризоваться быстродействием центрального и графического процессора, объемом оперативной памяти, возможностями сетевой подсистемы; ♦ Mj, і = 1, p - набор программного обеспечения, модулей и компонент , сети («облака»), т.е. элементах аппаратной конфигурации; ♦ Бк, к = 1, т - набор структурированных данных определенных типов и категорий на уровне информационного обеспечения, которые представляют наполненные соответствующей информацией фрагменты БД. Не менее важной компонентой исходной информации о системе сложной САПР являются выбранные проектные решения для организации межмашинного , сервисов специализированного оборудования [3]. Для взаимосвязи уровней функциональной и аппаратной конфигурации вводится матрица распределения программных функциональных модулей и компонент САПР по элементам вычислительной сети «облака» МСу, і = 1, п, і = 1, р. Элемент матрицы МСу может принимать следующие значения: мсг і1' если 7-ая компонента находится на г-ом сервере, 0, в противном случае. При этом подразумевается факт физического расположения определенной про- « ». , , проектирования исходя из конкретных целей и задач. Например, это возможно при наличии нескольких мониторов или средств поддержки проектирования в составе программного обеспечения САПР, не использующих средства визуализации и прямого взаимодействия с пользователями системы. Очевидно, что на каждый физиче-, « », -. X МСу> 1, і = 1, п. і =1 Ограничением на данном этапе формализации может являться существование единственной копии уникального сервера или специализированного модуля программного обеспечения в комплексной системе САПР, в том случае, если наличие таких ограничений не снимается спецификой и задачами функционирования конкретного процесса проектирования. Например, для повышения надежности работы системы или при работе с одним проектом несколькими операторами одновременно: п ___ X мсц = 1, г = 1, р. 7=1 Состав данных уровня информационной модели каждого отдельного физического элемента аппаратной конфигурации определяется совокупным составом данных всех компонент уровня функциональной конфигурации, расположенных на данном сервере. Для этого необходимо ввести матрицу определения потребности данных для каждого программного модуля и пользователя системы. Соотношения матрицы соответствуют факту потребностей определенного элемента или самостоятельного компонента программного обеспечения уровня функциональной конфигурации данных и объектов проектирования, представленных уровнем информационного обеспечения процесса проектирования, т.е. матрицей вида МВ]к, 7 = 1, р, к = 1, т . Элемент матрицы МВ^к может принимать следующие значения: МВ]к=\ 1 если 7“МУ пользователю (модулю) нужны к-ые данные, (О, в противном случае. Из данного представления видно, что одному элементу уровня функциональной конфигурации могут соответствовать несколько типов объектов. При этом каждый существующий на начало проектирования фрагмент данных должен быть необходим, по крайней мере, одному модулю или элементу про, общем информационном пространстве становится бессмысленной. Перечисленные выше утверждения и описания исходных составляющих так называемой базы данных конфигурирования системы могут служить исходными для процедур и модулей, позволяющих строить оптимальные стратегии распределения фрагментов информационной модели сложной САПР в «облаке». Следующим этапом формализации данной задачи может стать создание на основе полученных исходных данных начальной матрицы размещения фрагментов данных. В этом случае делается предположение о том, что данные должны быть распределены с наиболее возможной максимальной потребностью для каждого физического узла системы, т.е. необходимо ввести аналог матрицы МВ, но уже для уровня аппаратной конфигурации системы. Форма записи имеет вид Сгк, г = 1, п, к = 1, т . Элемент матрицы Сгк может принимать следующие значения: с = 1, г- к- , 0, . Выполнение такого размещения в действительности должно согласовываться с рядом ограничений, например таких, как объем оперативной памяти каждого компьютера, отведенный для хранения и работы с фрагментами данных. Эти ограничения должны выбираться и согласовываться с особенностями функционирова- ния элементов САПР, так как одним из основных показателей отдельных фрагментов данных является их высокая динамичность, постоянное изменение объема данных и количества экземпляров. В связи с этим могут возникнуть дополнительные трудности и особенности разработки алгоритмов и моделей оптимизации. , , мере, на один физический узел, и, в то же время, при необходимости находиться в реплицированном виде на других узлах. В отдельных случаях какой-то узел может не содержать фрагментов данных, как по экономическим соображениям, так и вследствие получившейся стратегии размещения данных. После выполнения процедуры создания матрицы С необходимым условием является оценка принятого решения. Данная оценка может производиться расче-, . -, -ся жесткие временные ограничения, которые необходимо соблюдать при проектировании распределенной информационной системы. Данная процедура может быть выполнена расчетом временной матрицы для соотношения программного модуля (потребителя определенного типа объекта проектирования) и собственно данных (источника информации - объект проектирования) с учетом физического размещения данных, принятого матрицей С, т.е. вычисляется матрица 7}к,7= 7 = 1, р, к = к = 1, т . Элементы данной матрицы принимают значения в соответствии со следую: ♦ модулю М', 7 = 1, Р необходимы для своего функционирования данные Вк, к = 1, т, при этом они размещены на том же физическом узле конфигурации, что и модуль, тогда время Т7к вычисляется с учетом работы непосредственно в оперативной памяти компьютера; ♦ модулю М', 7 = 1, Р необходимы для своего функционирования данные Вк, к = 1, т, при этом они размещены на другом физическом узле конфигурации, тогда время Т7к вычисляется с учетом работы сетевой подсистемы; ♦ модулю М', 7 = 1, Р не НУЖНЫ Для своего функционирования данные Вк, к = 1, т, тогда время Т7к принимается равным 0. Существенной проблемой при этом будет оценка времени получения данных сетевой подсистемой при различном количестве информации, текущей загрузке , данными. Таким образом, с учетом введенных условных предположений можно рассчитать суммарное значение времени. Другим немаловажным показателем является суммарная потребность в памяти для данного варианта размещения данных. Критерием эффективности может являться оценка, складывающаяся из двух со: ♦ информационному ресурсу САПР на отдельном узле и (или) «облаке» в целом к эталонному значению времени доступа; ♦ для хранения структур и объектов САПР на отдельном узле и (или) «обла-» . В общем виде критерий эффективности Б’ для функции времени можно представить следующим образом: р т Т ¥ ' = ^ т1п, 7 =1 к =1 Тэ где Тэ - эталонное время доступа. Для критерия эффективности используемой памяти выражение принимает вид п V ¥ = У ^ ш1п, ____ У ^ где V , г = 1, п, - суммарное значение памяти, занимаемой объектами САПР на отдельном узле и (или) «облаке» в целом, Уэ - эталонное значение памяти. Тогда общий критерий эффективности Б принятого размещения данных в системе ¥ = w1 ¥1 + w2 ^ ^ тт , где w1, w2 - аналоги весовых коэффициентов, позволяющих дифференцировать важность того или иного критерия в общем представлении, w1 + w2 = 1, w1 = 0, 0,5 , W2 = w2 = 0,5, 1. При этом взаимодействие с сетевой подсистемой не ограничивается только получением необходимых данных при условии того, что программному модулю М', 7 = 1, Р необходимы для своего функционирования данные Вк, к = 1, т и они физически находятся на другом узле, а также необходимо для поддержания всего информационного пространства в адекватном состоянии на каждый момент времени. Например, при изменении параметров объектов САПР данные должны быть обновлены не только в локальных структурах определенного сервера состава ап, -понентам, находящимся в распределенных структурах. Своевременное выполнение таких операций позволяет поддерживать информационное пространство САПР и наполнение процесса проектирования для всех участников. Из этого следует, что чрезмерное дублирование элементов программных модулей может отразиться возрастающими потребностями дополнительного обновления отдельных структур, интенсивно меняющих свои параметры в процессе ра. не позволяет тратить оперативную и дисковую память для их хранения на многих , -тему, используя их как элементы удаленных сервисов данных. Тогда задачей моделей оптимизации является определение эффективного размещения данных с учетом наличия дублирования в тех случаях, где это не повлечет за собой значительных затрат на повторное обновление отдельных структур и создание одиночных экземпляров данных для работы с ними через удаленные интерфейсы для сокращения лишнего сетевого трафика. Выполнение подобных условий позволит создать максимально сбалансированную стратегию размещения данных проектирования в «облачной» САПР с учетом введенных ограничений. В отличие от рассмотренной глобальной проблемы оптимизации размещения в рамках всей распределенной структуры «облачной» САПР также можно выделить локальную задачу оптимизации топологии структур для хранения данных программных модулей на отдельном узле системы. В данном случае при использовании современных технологий программирования и разработки приложений производится формирование динамических структур типа списков и деревьев в оперативной . необходимо учитывать дополнительные временные затраты на обход и поиск нуж- ных элементов. Для уменьшения времени поиска необходимой информации в этих структурах целесообразно предложить оптимизацию топологии дерева данных проектирования, которая учитывала бы факторы использования запросов. Это может достигаться путем дополнительных разбиений на отдельные поддеревья, группировки данных в соответствии с требованиями потребителей, введением специальных указателей с учетом специфики работы с определенными типами данных. Такое решение позволит минимизировать технологическую сторону в скорости получения информации пользователями и программными модулями уже на конкретном физическом элементе функциональной конфигурации САПР. Введение математических постановок задачи на различных этапах функционирования системы с учетом того, что данные операции могут входить как функции в САПР и выполняться как фоновый процесс во время процесса проектирова-, , . ]]></text>
</doc>

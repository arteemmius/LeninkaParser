<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/obektno-orientirovannoe-proektirovanie-izmeritelnoy-informatsionnoy-sistemy-dlya-kontrolya-radiatsionnoy-obstanovki]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Хлебус Евгений Александрович]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Объектно-ориентированное проектирование измерительной информационной системы для контроля радиационной обстановки]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ИНФОРМАЦИОННАЯ СИСТЕМА]]></item>
    <item type="str"><![CDATA[РАДИАЦИОННЫЙ КОНТРОЛЬ]]></item>
    <item type="str"><![CDATA[МЕТЕОРОЛОГИЧЕСКОЕ НАБЛЮДЕНИЕ]]></item>
    <item type="str"><![CDATA[ОБЪЕКТНО-ОРИЕНТИРОВАННОЕ ПРОЕКТИРОВАНИЕ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Приводится объектно-ориентированное описание основных измерительных элементов программной системы радиационно-метеорологического контроля. Произведено тестирование программного обеспечения.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Приводится объектно-ориентированное описание основных измерительных элементов программной системы радиационно-метеорологического контроля. Произведено тестирование программного обеспечения. Ключевые слова: информационная система, радиационный контроль, метеорологическое наблюдение, объектно-ориентированное проектирование. Для непрерывного контроля состояния качества окружающей среды все шире применяются автоматизированные системы. Особенную актуальность подобные системы приобретают на территориях, находящихся под угрозой потенциального радиохимического заражения. В этих условиях необходимо контролировать не только гамма-фон, но и состояние основных метеорологических параметров, в первую очередь для оперативного прогнозирования распространения результатов аварийного функционирования технологических установок. В отличие от чистых метеорологических систем, на системы вида радиация-погода не возлагаются задачи по прогнозированию гидрометеорологической обстановки. К настоящему времени существует некоторое количество систем типа «радиация-погода» [1-3]. По результатам анализа таких систем можно сделать вывод о том, что конструктивно подобные системы представляют собой «закрытые» коммерческие решения, требующие больших капитальных затрат и постоянной технической поддержки со стороны организации-разработчика. Традиционно [4] автоматизированные системы контроля радиационной обстановки имеют распределенную структуру по иерархическому типу и состоят из отдельных автоматизированных постов и центрального так называемого диспетчерского поста. Таким образом, автоматизированной системой радиационно-метеорологического мониторинга является техническое решение на базе аппаратного и программного обеспечения диспетчерского поста и автономных автоматизированных постов для контроля над состоянием складывающейся радиационной обстановки. Автоматизированным постом будем называть конструктивно законченное аппаратнопрограммное решение, предназначенное для проведения измерений, первичной обработки измерительной информации и выдачи ее в виде, удобном для принятия оператором-экспертом решения о состоянии складывающейся радиационной обстановки. Техническое исполнение поста допускает его автономное использование. В некоторых случаях необходимо предусмотреть использование поста в составе передвижной лаборатории. Программное обеспечение. Для разработки программного обеспечения будем использовать объектный подход [5]. Целесообразность выбора обусловлена тем, что он позволяет весьма просто расширить программную систему за счет включения дополнительных объектов, что будет необходимо при объединении определенного количества постов в объединенную систему мониторинга. Разрабатываемая система мониторинга отвечает за проведение непрерывного измерения и контроля состояния окружающей среды. Измерения производятся группой датчиков, входящих в состав аппаратного обеспечения системы. Поэтому ключевой абстракцией при разработке программного обеспечения с использованием объектно-ориентированного подхода является датчик. Структура классов в основном определяется аппаратной архитектурой системы [6] на некотором уровне абстракции. Безусловными элементами объектной архитектуры программного обеспечения автоматизированной системы мониторинга являются классы таймеров, графических панелей (дисплеев), коммуникационных портов для объема информацией с объектами класса датчиков, структура которых приведена на рис. 1 (с использованием языка моделирования ИМЬ [7]). Класс Sensor является абстрактным. Он также является общим предком по отношению ко всем классам датчиков, использование которых предполагается. Класс IonizingSensor также является абстрактным и родительским по отношению к классам, описывающим шаблон экземпляров классов конкретного дозиметрического оборудования. В нашем случае описан лишь шаблон для одного типа дозиметрического оборудования, а именно GammaSensor. Помимо гамма-фона, необходимо контролировать основные метеорологические параметры. Для этого определим шаблон MeteoSensor, который будет предком по отношению к классам-потомкам: • WindSensor - шаблон для датчиков направления и скорости ветра; • THPSensor - шаблон для датчиков температуры, относительной влажности и атмосферного давления; • RainSensor - класс датчиков осадков (дождя и ветра). i IonizingSensor I -cntCf: float * -IsEnable : bool l+getClassQ: object) i L -Count: long -SpdCnt: float OoseRate: float IsAveraging: bool -IsCount: bool > +getCnt(): long +getSpdCnt(): float +resetCnt(): bool +startCnt(): bool +stopCnt(): bool +getDoseRate(): float +setAveraging(): bool FT n. MeteoSensor -SensorAddr: byte -ISEnable : bool +Reset(): string +ResetMeasurement(): string I THPSensor -minWindDir: uint -meanWindDir: uint -maxWindDir: uint -minWindSpd : float -meanWindSpd: float -maxWindSpd : float -UpdTime : uint = 5 -AveragingTime: uint -SamplingTime: uint -MeasureMtd : bool -UnitType: string :WindDirCorrect: sbyte +getWind(); float[| +getSettings(): string +setUpdTime(): string +setMeasureMtd(): string +setAverTime(): string +setUnitType(): string +setWindDirCorr(): string +setSamplingTime(): string -Temp : float -Humidity: float -Pressure: float -UpdTime : uint = 5 -AveragingTime: uint -SamplingTime : uint -PressureUnitType: string -TempUnitType : string Zl RainSensor +getTHP(): floatn +getSettings(): string +setUpdTime(): string +setAveragingTime(): string +setPressureUnitType(): sbyte +setTempUnitType(): sbyte +setSamplingTime(): string -RainCnt: float -RainTime: uint -Rainlntensity : float -UpdTime : uint = 5 -AverTime: uint -SamplingTime: uint -MeasureMtd: bool -UnitType: string -WindDirCorr: sbyte -HailCount: float -HailTime: uint -Haillntensity: float +getRain(): float[] +getSettings(): string +setUpdTime(): string +setMeasureMethod(): string +setAveragingTime(): string +setRainUnitType(): string +setHailUnitType(): string +TypeofRainHailReset(): char Рис. 1. Иерархия классов датчиков системы Для всех датчиков используется единственный таймер. Периодичность прерываний по-умолчанию устанавливаем в 5 с (главным образом из-за необходимости отслеживать быстроменяю-щееся направление ветра). Это значение может изменяться программно для каждого типа датчика в зависимости от складывающейся радиационной обстановки. Для рассматриваемой метеорологической станции производителем реализованы методики проведения измерения, и в отличие от блока детектирования необходим лишь их периодический опрос. Что касается блока детектирования, то его показания считываются посредством программируемого 32-разрядного пересчетного блока. Например, для реализации измерения с использованием алгоритма «бегущее среднее» используется метод Бо8еЯа1е объекта класса ОаттаБешог. За вывод информации на дисплей отвечают стандартные библиотеки разработчика для определенных операционных систем. Например, при проектировании в среде за вывод информа- ции на дисплей (стандартный набор элементов) отвечает класс '1Мо'М8.Рогт8. Для визуализации данных в виде графиков и диаграмм отвечает класс 'т^'М8.Рогт8.Ба;аУ18иа^айоп.СЬа11т§.СЬа11;. Испытания. Произведем испытания разработанного программного обеспечения поста. Для этого объединим в информационную сеть метеостанцию и блок детектирования, используя интерфейс TIA/EIA-485. После этого, через преобразователь электрических интерфейсов Т1А/Е1А-485/232 подключим оборудование к ЭВМ. Запустим разработанное программное обеспечение, зададим настройки последовательного интерфейса и произведем измерения. Результаты испытаний для мощности экспозиционной дозы представлены на рис. 2. Автоматизированный пост метеонаблюдений ^В|х| |)_1 Меню | Настройки База данных | Настройки дозиметра СОМ6 ▼ 19200 ы Справка ▼ Нет Тип датчика Параметр Значение| Ед. изм. Счетчик Гейгера Датчик Ветра » Настройки WXT-520 Сот-порт ▼ Скорость ▼ Четность ▼ ^ ▼ ) Гамма-Фон|| ТВД | Ветер| Осадки| Супервизор! Датчик ТВД Датчик осадков Супервизор Мош/ность экспозиционной дозы 10.72 мкРЛ-і Минимальное напра в ление в етра 116 Среднее направление ветра 162 Максимальное направление ветра 184 Минимальная скорость ветра 1.5 Средняя скорость ветра 1.9 Максимальная скорость ветра 2.5 Температура воздуха 25.3 Относительная влажность 48.6 Атмосферное давление 748.6 Накопление дождя 0 Продолжительность дождя 0 И нтенси в ность дожд я 0 Пико в а я интенси в ность дожд я 0 Накопление града 0 Продолжительность града 0 Интенсивность града 0 Пиковая интенсивность града 0 Напряжение питания 5.1 град. град. фад. м/с м/с м/с С % ммАн ммАн удары/см2 с. удары/см2ч удары/см2ч 14:56.00 14:58:00 15:00:00 15:02:00 15:04:00 15:06:00 Рис. 2. Графический интерфейс пользователя в режиме измерений Также в программной системе реализованы механизмы архивирования (используя СУБД MySQL) данных мониторинга с последующей их визуализацией по выбранным оператором-пользователем периодам и основным измеряемым параметрам, таким как: • ветер - скорость и направление в режимах двух диаграмм и объединенной диаграммы по типу «розы ветров» с цветовой индикацией градаций по силе ветра (шкала Бофорта); • температура атмосферного воздуха, его влажность и давление; • количество и интенсивность атмосферных явлений (дождь, град); • уровень мощности экспозиционной либо амбиентной эквивалентной дозы. Результаты испытания в режиме взаимодействия с базой данных приведены на рис. 3. Заключение. В настоящей работе рассматривалась программная система для контроля радиационной обстановки и проведения метеорологических наблюдений. Также в работе нашла отражение структура программной части системы в виде иерархии классов датчиков (в терминах объектноориентированного подхода). Произведены лабораторные тесты программной системы в режимах проведения измерений и в режиме взаимодействия с базой данных. Разработка с использованием объектного подхода позволила за небольшой временной промежуток создать законченное, готовое к использованию программное обеспечение для контроля радиационно-метеорологической обстановки. Рис. 3. Графический интерфейс пользователя в режиме взаимодействия с базой данных ]]></text>
</doc>

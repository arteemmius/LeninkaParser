<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/razrabotka-emulyatorov-dlya-kvantovyh-vychisliteley]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Гузик Вячеслав Филиппович]]></item>
    <item type="str"><![CDATA[Гушанский Сергей Михайлович]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Разработка эмуляторов для квантовых вычислителей]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[КВАНТОВЫЕ ВЫЧИСЛИТЕЛИ]]></item>
    <item type="str"><![CDATA[ПОСТРОЕНИЕ ЭМУЛЯТОРОВ]]></item>
    <item type="str"><![CDATA[МОДУЛЬНАЯ СИСТЕМА]]></item>
    <item type="str"><![CDATA[ОТКРЫТАЯ АРХИТЕКТУРА]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Средства моделирования необходимы для квантового компьютинга. В работе рассмотрены существующие подходы построения эмуляторов квантовых вычислителей. Предложена модульная система с открытой архитектурой, состоящая из четырех блоков: математического ядра, модуля подготовки квантовых схем, модуля ввода исходных данных и модуля представления результатов.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Средства моделирования необходимы для квантового компьютинга. В работе рассмотрены существующие подходы построения эмуляторов квантовых вычислителей. Предложена модульная система с открытой архитектурой, состоящая из четырех бло-: , , данных и модуля представления результатов. Квантовые вычислители; построение эмуляторов; модульная система; открытая . V.Ph. Guzik, S.M. Gushanskiy DEVELOPMENT OF EMULATOR FOR QUANTUM COMPUTERS Modeling tools are necessary for quantum computing. In work existing approaches of construction of quantum computers emulators are considered. The modular system with the open architecture, consisting offour blocks is offered: a mathematical kernel, the module of preparation of quantum schemes, the module of input of initial data and the module of results representation. Quantum computing; constriction quantum simulation; building block concept; open system. Основная проблема, стоящая перед разработчиками квантовых компьютеров (КК), в настоящее время заключается даже не в технологической сложности уст, каких бы то ни было универсальных вычислительных машин. Неотъемлемая вы- числительная сложность моделирования квантового вычисления на классическом компьютере была обозначена Ричардом Фейнманом в 1980-х [1]. Более того, это привело его к идее использования квантомеханических эффектов для ускорения классического компьютинга [2]. Хотя такие ускорения были теоретически определены Шором и Гровером, численное моделирование квантовых вычислителей на классических компьютерах остаётся заманчивым в прикладном плане. Моделирование КК может использоваться в качестве исследовательского средства для физической реализации квантовых вычислителей, для изучения квантовых алгоритмов интерак-, , -сти при проектировании ошибкоустойчивой архитектуры КК, а также в качестве средства для создания учебных демонстраций известных квантовых эффектов. При описании замкнутой квантовой системы обычно используется понятие , -растеризуется не точными значениями координат и импульсов, а некоторой пси-функцией 1//(хД), где х - полный набор всех непрерывных и дискретных переменных, определяющих состояние квантовой системы. Например, это могут быть координаты, моменты, поляризация, спиновые переменные всех частиц и т.д. Данная комплексная волновая функция позволяет описывать свойства частиц и определять вероятности тех или иных событий. С другой стороны, уравнение волновой функции в координатном представлении Шредингера или энергетическом пред-( ), , , плане поведение самой пси-функции вполне вычислимо и предсказуемо в отличие от поведения описываемых ею квантовых объектов. В соответствии с теорией представления, которая устанавливает связь квантовых состояний с комплексными числами и операторов, действующих в формальном математическом гильбертовом пространстве, с математическими операциями над полем комплексных чисел (функций), оператор (матрица оператора) в своем собственном представлении является диагональной матрицей, т.е. матрицей, у которой диагональные элементы являются собственными значениями оператора. Остальные элементы матрицы оператора равны нулю. , описать посредством векторов и матриц, что позволяет привести численное моделирование квантовых вычислителей к матричной алгебре со всеми вытекающими . Разработка эмулятора квантового вычислителя (ЭКВ) - это сложная задача, так как в настоящее время существует очень ограниченное количество квантовых , . , , моделировании результаты, не представляется возможным. Более того, мы не зна-, -ля при построении квантовых вентилей (гейтов): ионные ловушки, впадины ОББ, соединения Джозефсона, ММЯ-технологии или другие [15, 16, 17, 18]. Поэтому моделирование как самостоятельная часть разработки квантового вычислителя, использующего новую технологию, для эмулирования физической модели квантовых процессоров может оказаться необходимым. В противоположность обычным , -зана с логической работой всей машины, внутренняя квантовая динамика каждого логического элемента - ключевая составная часть КК. Следовательно, важным элементом для соединения в моделируемый макет является физика элементарных , . обычно предполагает существование единиц, выполняющих высоко идеализированные единые операции. Однако на практике эти операции сложны в реализации: не учитывая декогерентизацию, физические КК будут выполнять отдельные операции, которые сложнее, чем рассматриваемые в теоретической работе. Следова-, -. , -, , - -, . -ния КК [5, 6, 9, 10, 11, 12, 13, 15]. Большая часть эмуляторов базируется на квантовой схеме либо на системе записи Дирака квантовых явлений в операторном виде. Так, регистр кубитов представляется кет-вектором. Новое состояние регистра получается путём преобразования исходного. Оператор такого преобразования представляет собой квадратную матрицу комплексных чисел. Квантовый алгоритм является набором последовательных преобразований состояния регистра, их ещё называют квантовыми гейтами. Некоторые ЭКВ предназначены для моделирования работы определенного алгоритма или ограниченного числа алгоритмов. Такие симуляторы ориентированы на какую-то одну, конкретную задачу, например промоделировать работу алго-. - -вого алгоритма в них обычно отсутствует. Примером может служить Shor's Algorithm Simulation [3]. Результаты, получаемые при использовании такого ЭКВ за счет узкой специализации модели, могут быть получены за меньшее время и отличаться более высокой точностью. Однако такой подход к построению ЭКВ нельзя отнести к эффективным с точки зрения массового использования модели. Особенно если учесть временные затраты на построение самой модели с учетом особенностей каждого квантового алгоритма - при работе с такой моделью требуется постоянное присутствие разработчика-программиста либо исследователь квантового алгоритма сам должен быть разработчиком ЭКВ. Для повышения эффективности работы применяются подключаемые “квантовые” библиотеки для вполне стандартных программ моделирования типа MatLab, Maple, MathCAD [4, 5, 6, 7]. Подобные библиотеки требуют лишь минимума специальных знаний о самой среде, содержат набор интуитивно понятных квантовых операторов и существенно расширяют возможности программных пакетов по моделированию как самых элементарных, так и более сложных квантовых схем с целью разработки квантовых алгоритмов. К недостаткам библиотечного подхода можно отнести отсутствие графического интерфейса с позиций отображения особенностей именно квантового вычислителя, низкую скорость обработки информации (особенно для схем с числом кубит более 15-20), необходимость владения определенными знаниями в области программирования и навыками в организации структуры программы на базе выбранной библиотеки. Поэтому большинство ЭКВ представляют собой законченные программные , описывать и симулировать практически любые из существующих квантовых алгоритмов [8, 9, 10, 11, 12, 13]. Работа с такими ЭКВ может выполняться по двум вариантам. Первый заключается в том, что для описания квантового алгоритма создается свой язык программирования. Пользователь составляет программу квантового алгоритма на этом языке, запускает ее на выполнение и получает результаты. В отличие от библиотечного ЭКВ, весь процесс моделирования происходит в самостоятельной программной среде. Другой подход более нагляден, поскольку позволяет формировать алгоритм не в программном коде, а посредством некоторой , ( ). Возможно объединение обоих вариантов. Однако сделать заключение, что существует какой-либо один ЭКВ, который сможет удовлетворить потребности большинства исследователей из разных областей: квантовой механики, математики, вычислительной техники, который при этом бы сочетал в себе и удобство пользования, и широкие возможности при построении самих схем, достаточно затруднительно. Оптимальный ЭКВ должен обладать несколькими ключевыми характеристиками или соответствовать следующим критериям: 1) - [14]: ♦ Паули X, Y, Z; вращения вокруг оси у; Адамара; ♦ вероятностные X, Y, Z гейты; ♦ обобщённого демп фирования амплитуды; ♦ зашумленного синтетического гейта Адамара; ♦ контролируемого X, Z, H; ♦ контролируемого и дважды контролируемого NOT; ♦ ф азы; 2) алгоритма, позволяющий не только строить, но и читать схему; 3) ошибок при операциях над кубитами; 4) , пользоваться готовыми базами, но и создавать собственные библиотеки; 5) , , симуляцию набранной квантовой схемы; 6) ; 7) ; 8) , - хранять промежуточные результаты и возвращаться к ним в случае не; 9) библиотечные компоненты с последующим их подключением на другие схемы в случае необходимости; 10) ; 11) иметь базу заранее проработанных примеров. Для того чтобы ЭКВ удовлетворял перечисленным характеристикам, он должен быть реализован в виде модульного программного продукта с открытой архитектурой. Существует несколько преимуществ модульной программной архитектуры для эмулирования квантовых вычислителей с чётко определёнными межмо- . , -граммная архитектура улучшает способность к взаимодействию модулей и делает проще добавление новых элементов к уже существующему набору, также она упрощает сохранение и добавление новых улучшений к существующим средствам моделирования. В настоящее время наши знания о том, как оптимизировать модели квантовых вычислителей на предмет адекватного соответствия реальным физи-, , -ровать ошибки и увеличить скорость моделирования. Модульная архитектура позволит экспериментировать с новыми алгоритмами и с помощью моделирования определять их выгодность с данной квантовой технологией, прежде чем создавать реальные физические компоненты устройства. С экономической точки зрения, ни одна группа в одиночку не может позволить себе огромные затраты на улучшение программного обеспечения, требуемое для развития всех инструментов, необходимых для создания квантового устройства. Структурно ЭКВ можно представить (рис. 1) как 4 взаимосвязанных модуля. Рис. 1. Структура эмулятора квантовых вычислений Основу эмулятора составляет модуль математического ядра, реализующий математический аппарат, на котором базируются квантовые вычисления, описывающие чистые состояния замкнутой системы. Однако реальное моделирование нуждается в явной или неявной обработке смешанных состояний как для исследования квантовых алгоритмов, так и для более реального моделирования шумовых процессов или декогерентизации. Также математический аппарат должен поддерживать исследования квантовых схем с запутанными состояниями. При этом математическое ядро представляет собой открытую структуру и при необходимости может выполнять математическую поддержку, основанную не только на матричном или операторном подходе, но и на списковом. Вторым модулем является модуль подготовки квантовых схем. С помощью этого модуля осуществляется настройка квантовой схемы, реализующей исследуемый квантовый алгоритм, схему коррекции ошибок или что-либо другое. Модуль квантовых схем, имеющий графический интерфейс, должен включать в себя библиотеку подготовленных рабочих элементов, описание которых присутствует в . -вых элементов программным способом с помощью языковых средств, с последующей записью в библиотеку элементов как самого элемента в виде графическо-, . самой квантовой схемы осуществляется путем выбора нужного элемента из библиотеки с применением метода Drag-and-Drop. Для организации задания исходных значений и параметров для элементов , ( ) . - циализации значений элементов достаточно простой графической оболочки или простейшего ввода с клавиатуры, то для подготовки вновь создаваемых элементов потребуется программный продукт, позволяющий не только графически сформировать новую конструкцию, но и подготовить математическое описание, с которым будет выполнять свои действия математическое ядро эмулятора. Последней частью ЭКВ является модуль представления результатов моделирования. Метод представления конечных результатов может отличаться в каждом конкретном подходе к исследуемой квантовой схеме или алгоритме. В зависимости от потребностей пользователя результаты можно сформировать в виде таблицы с цифрами, в виде графика или набора графиков, в виде матрицы плотности. Также должна существовать возможность приостанавливать работу в процессе , . Рассматриваемая модульная структура ЭКВ с открытой архитектурой предоставляет возможность пользователю выбрать наиболее подходящий для него метод подготовки и ввода исходных данных, а также вид и способ представления , . -да или вывода не удовлетворяет потребителя, т.е. он привык использовать другие концепции или конструкции, то открытость архитектуры позволяет через добавление дополнительных библиотечных элементов или программные конверторы приблизить имеющуюся модель к желаемой. Расширение возможностей математического ядра также осуществимо за счет добавления новых библиотечных элементов. Тогда работа с ЭКВ, построенному по предлагаемой модульной архитектуре, будет заключаться в настройке имеющихся элементов под конкретную задачу либо добавлении дополнительных конструкций с последующей возможностью их дальнейшего повторного использования. ]]></text>
</doc>

<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/evolyutsionnaya-avtomatizirovannaya-informatsionnaya-sistema-osnovy-organizatsii-i-funktsionirovaniya]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true"/>
  <title auto="true" type="str" verify="true"><![CDATA[Эволюционная автоматизированная информационная система: основы организации и функционирования]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[эволюционная база данных]]></item>
    <item type="str"><![CDATA[поддержка темпоральности]]></item>
    <item type="str"><![CDATA[эволюционная автоматизированная информационная система]]></item>
    <item type="str"><![CDATA[манипулирование данными]]></item>
    <item type="str"><![CDATA[изменение структуры системы]]></item>
    <item type="str"><![CDATA[эволюция системы]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[© А. А. МАСЛЕННИКОВ, В. В. ДРОЖДИН, А. В. СПИРИН Пензенский государственный педагогический университет им. В. Г. Белинского, кафедра прикладной математики и информатики e-mail: almas@rambler.ru, drozhdin@yandex.ru, aspirin_c@mail.ru Масленников А. А., Дрождин В. В., Спирин А. В. - Эволюционная автоматизированная информационная система: основы организации и функционирования // Известия ПГПУ им. В. Г. Белинского. 2010. № 18 (22). С. 184-188. - Предложен способ организации автоматизированной информационной системы, использующей в качестве хранилища эволюционную базу данных. Описаны особенности функционирования такой информационной системы. Кратко охарактеризованы основные структурные преобразования, а также операции манипулирования данными в эволюционной автоматизированной информационной системе. Ключевые слова: эволюционная база данных, поддержка темпоральности, эволюционная автоматизированная информационная система, манипулирование данными, изменение структуры системы, эволюция системы. Maslennikov A. A., Drozhdin V. V., Spirin A. V. - The evolutional automated information system: elements of organization and operation // Izv. Penz. gos. pedagog. univ. im.i V. G. Belinskogo. 2010. № 18 (22). P. 184-188. - The way of organization the automated information system using the evolutionary database as a depository is suggested. The peculiarities of such system operation are described. The main structural transformation and also the operations of data manipulating in evolutionary information system are shortly characterized. Keywords: evolutional database, support of temporal aspect, evolutional automated information system, data manipulation, transformation of system structure, evolution of system. Разработка многих программных приложений требует решения задачи хранения исторических (не актуальных в настоящий момент времени) сведений о предметной области. Данная проблема наиболее характерна для различных автоматизированных информационных систем. Можно выделить два аспекта поддержки исторической информации в базе данных программного приложения. Первый аспект связан с реализацией темпоральности в отношении изменения состояний элементов данных (операции добавления, удаления и модификации элементов данных). Второй аспект связан с изменением структуры данных (операции преобразования схемы базы данных). Задача поддержки темпоральности заключается в реализации возможности получения состояния любого объекта базы данных на любой момент времени его существования. Другими словами, если какой-либо объект базы данных был создан в момент времени t4 и уничтожен в момент времени t2, то должна существовать возможность получения состояния этого объекта на каждый момент времени t е [t4, t2]. База данных, обладающая способностью оперативно изменяться (эволюционировать) в течение всего времени своего существования, может быть названа эволюционной базой данных. Подобная возможность изменения может быть реализована, в частности, посредством поддержки эволюции схемы базы данных. Такая поддержка заключается в реализации механизмов создания новых и изменения существующих отношений (схем отношений, сущностей, классов) после определения схемы базы данных. Осуществление тех или иных эволюционных преобразований базы данных может быть вызвано из внешней среды (например, соответствующими правилами бизнес-логики приложения) или инициировано механизмом самоорганизации самой базы данных (если применяемая при проектировании хранилища модель данных предусматривает самоорганизацию) [1]. Эволюционная база данных может осуществлять поддержку темпоральности в отношении элементов данных централизованно, посредством регистрации сведений обо всех изменениях, связанных с элементами данных (добавление, удаление, модификация), в специальном реестре. Будем называть такой реестр темпоральной таблицей. При создании объекта (элемента данных, кортежа) в темпоральную таблицу могут заноситься сведения о времени его создания (с соответствующей ссылкой на сам объект). При мо- дификации объекта помимо времени изменения может сохраняться значение предыдущего состояния этого объекта. При удалении объекта может фиксироваться время удаления и значение состояния объекта на момент удаления. Описанный способ поддержки темпоральности в отношении элементов данных аналогичен реализованному практически во всех современных системах управления базами данных (СУБД) механизму журнализации изменений базы данных. В качестве альтернативы централизованной поддержке темпоральности в отношении элементов данных можно рассматривать децентрализованную поддержку темпоральности. Примером реализации такого способа решения поставленной задачи является СУБД Postgres. В данной СУБД при модификации объекта (кортежа) непосредственное изменение исходного объекта не производится. Вместо этого создается новая запись, которая содержит измененные поля, а также сведения о транзакции, инициировавшей изменение (включая время завершения транзакции, т. е. собственно время изменения). Созданная таким образом запись ставится в соответствие исходному объекту при помощи добавления её в конец списка записей о предыдущих изменениях этого объекта [2]. Задача поддержки темпоральности в отношении схемы базы данных затрагивает вопросы внешнего представления хранилища программного приложения и поэтому представляет собой серьёзную проблему. В связи с тем, что эволюционная база данных допускает оперативное изменение своей схемы (схемы базы данных), пользователи (клиенты) такой базы данных должны согласовывать формулировку своих запросов с состоянием схемы базы данных на требуемый момент времени. Несогласованность запроса пользователя со схемой базы данных может повлечь за собой, в частности, попытку обращения к несуществующей в момент запроса (или на момент, указанный в запросе) сущности (классу, таблице) или к несуществующему в указанный момент времени атрибуту (свойству, полю). Можно предложить три конвенции внешнего представления структуры хранилища, упорядочивающие согласование запросов пользователя со схемой базы данных. Первая конвенция заключается в согласовании запроса пользователя с состоянием структуры хранилища в начальный момент времени. В этом случае происходит фиксация внешнего представления структуры хранилища на момент создания схемы базы данных. Состояние схемы базы данных в любой момент существования отображается через представление её состояния в начальный момент времени (в момент её создания). Такой способ согласования позволяет скрыть от пользователя факт эволюции схемы базы данных. Однако сами эволюционные возможности при этом ограничены зафиксированным внешним представлением структуры хранилища. Вторая конвенция заключается в согласовании запроса пользователя с состоянием структуры хранилища в текущий момент времени. В этом случае любые запрашиваемые исторические сведения отображаются через представление текущего состояния схемы базы данных. Подобный способ согласования не накладывает принципиальных ограничений на эволюционные возможности схемы базы данных. Однако при этой конвенции пользователь вынужден отслеживать изменения в текущем состоянии внешнего представления структуры хранилища. Следует также отметить, что доступ к исторической информации на моменты времени, когда представление схемы базы данных отличалось от её текущего представления, будет осуществляться с неизбежными искажениями. Третья конвенция заключается в согласовании запроса пользователя с состоянием структуры хранилища на момент времени, который указан в запросе. В этом случае любые запрашиваемые исторические сведения отображаются в соответствии с представлением схемы базы данных на требуемый момент времени. Такой способ согласования позволяет адекватно представлять историческую информацию на любой момент действительного времени. Однако принятие этой конвенции влечёт за собой необходимость формулировки запроса пользователя в точном соответствии с особенностями представления схемы базы данных на каждый конкретный исторический момент. Реализация программного приложения на основе эволюционной базы данных целесообразна, главным образом, из-за необходимости адаптации хранилища к изменениям во внешней среде. Немаловажную роль играет также потребность в повышении эффективности хранения и обработки данных при стабильных внешних условиях. Применение эволюционной базы данных в качестве хранилища программного приложения позволяет упростить автоматизацию решения задач, связанных с хранением и обработкой исторической информации. Реализация поддержки способности автоматизированной информационной системы к эволюции способствует снижению затрат на сопровождение системы, а также увеличению времени её эксплуатации. Эволюционная автоматизированная информационная система в процессе своего существования претерпевает различные изменения. Выполнение в эволюционной системе некоторой операции или комплекса операций переводит систему в новое состояние. В качестве инициатора перехода системы из одного состояния в другое обычно выступает внешняя среда. Перед осуществлением перехода системы в новое состояние необходимо сравнить текущие качественные характеристики системы с возможными характеристиками системы на следующей ступени эволюции, т.е. выполнить оценку предстоящего шага эволюции системы. Эволюционная информационная система должна поддерживать операции, позволяющие осуществлять преобразование структуры системы, а также операции манипулирования данными, учитывающие такие структурные преобразования. Эволюция структуры системы реализуется при помощи операций разбиения, интеграции, расширения и сужения. Операции манипулирования данными можно разделить на операции чтения данных и операции изменения дан- ных. Чтение данных осуществляется при помощи операций выборки, проекции, объединения и соединения. Изменение данных осуществляется при помощи операций добавления, удаления и модификации. Результатом выполнения операции выборки является множество объектов указанного типа (класса, сущности), удовлетворяющих заданным условиям. В прикладном аспекте использование операции выборки можно считать основным способом получения требуемой информации. Результатом выполнения операции проекции является сущность, структура которой сформирована из определённых атрибутов указанной сущности. Традиционные реализации объектно-ориентированной парадигмы не предусматривают непосредственного выделения части объекта или класса. Идиоматическое решение поставленной задачи может заключаться в выборке объектов определённого типа (класса) с последующим использованием только необходимых атрибутов. Результатом выполнения операции объединения является множество объектов, принадлежащих к указанным типам (классам, сущностям). При этом указанные типы должны быть совместимы по объединению, т.е. иметь одинаковую структуру. Сформированное в результате выполнения операции объединения множество объектов образует новый тип, структура которого совпадает со структурами исходных типов. Результатом выполнения операции соединения является множество объектов, каждый из которых представляет собой определённое отношение между соответствующими объектами указанных типов (классов, сущностей). Такие отношения между объектами могут устанавливаться посредством включения в состав объектов ссылок на другие (связанные) объекты. Сформированное в результате выполнения операции соединения множество объектов образует новый тип, структура которого определяется в соответствии с параметрами операции соединения. Результатом выполнения операции добавления является создание в эволюционной информационной системе нового объекта указанного типа (класса, сущности). Структура нового объекта при этом может не соответствовать структуре указанного типа. Будем называть объекты, структура которых отличается от структуры типа, которому они принадлежат, объектами отклонения. Рассмотрим операцию добавления объекта в некоторую эволюционную информационную систему, содержащую на момент добавления определённый перечень допустимых типов объектов. Один из этих типов выбирается в качестве шаблона нового объекта системы. При выполнении операции добавления на вход системы поступает список элементов, каждый из которых должен быть преобразован в значение соответствующего атрибута нового объекта системы. При отображении списка элементов в множество значений атрибутов создаваемого объекта могут возникнуть следующие ситуации. Ситуация полного совпадения характеризуется тем, что количество входных элементов совпадает с количеством атрибутов в шаблоне создаваемого объекта. При этом входные элементы совместимы с соответствующими атрибутами по принадлежности к домену. Такая ситуация способствует сохранению текущего состояния структуры системы. Ситуация количественного несовпадения характеризуется отсутствием входных элементов для некоторых атрибутов в шаблоне создаваемого объекта или наличием лишних (избыточных) элементов. Атрибуты, для которых входные элементы отсутствуют, заполняются значениями по умолчанию или остаются незаполненными. Для сохранения избыточных элементов в создаваемый объект включаются дополнительные атрибуты. Будем называть такие атрибуты атрибутами отклонения, а сам объект - объектом расширения. Объекты расширения можно рассматривать как особый вид объектов отклонения. Ситуация качественного несовпадения характеризуется наличием входных элементов, которые не могут быть преобразованы в значения соответствующих атрибутов (т. е. входные элементы не совместимы с атрибутами по принадлежности к домену). В данной ситуации система должна выполнить приведение качественного несовпадения к количественному несовпадению. В результате каждый не сопоставленный с входным элементом атрибут примет значение по умолчанию (или останется пустым), а для каждого не сопоставленного с атрибутом входного элемента в создаваемый объект будет добавлен соответствующий атрибут отклонения. Ситуация полного несовпадения характеризуется наличием как количественных, так и качественных несовпадений. В данной ситуации система должна выполнить приведение качественных несовпадений к количественным несовпадениям, после чего решить проблему количественных несовпадений описанным выше способом. Создаваемые в эволюционной информационной системе объекты отклонения записываются в реестр объектов отклонения соответствующего типа. В процессе существования системы такие отклонения накапливаются. Когда количество одинаковых отклонений достигнет определённой критической величины, целесообразно выполнить преобразование структуры системы. Такие структурные преобразования предполагают мутацию объектов системы, принадлежащих соответствующему типу. Исходя из результатов анализа накопленных отклонений, перед запуском процесса мутации в системе необходимо сформировать новую структуру данного типа (объектов данного типа). После создания новой структуры объектов следует выполнить преобразование основных правил работы с объектами данного типа. Затем необходимо осуществить преобразование всех объектов данного типа к новой структуре типа, соответствующим образом скорректировав при этом реестр объектов отклонения. По завершении процесса мутации информационная система будет готова к переходу на новую ступень эволюции. Поскольку решение задачи манипулирования исторической информацией в эволюционной автоматизированной информационной системе не предполагает физического уничтожения объектов, операция удаления реализуется как перемещение утратившего актуальность объекта в темпоральное хранилище (архив). Сохранение архивной информации обеспечивает принципиальную возможность восстановления состояния системы на любой момент времени её существования. Операция модификации заключается в преобразовании значений атрибутов объекта. В результате модификации объект может стать объектом отклонения. При модификации объекта все прежние значения его атрибутов сохраняются в виде хроники изменения состояния объекта. Инкапсуляция в объекте истории его эволюционных изменений повысит эффективность реализации поддержки темпорального аспекта информационной системы. По результатам анализа накопленной информации об истории изменения объектов информационной системы может быть принято решение о реорганизации структуры системы. Структурные изменения, переводящие информационную систему на новую ступень эволюции, осуществляются при помощи соответствующих операций. В результате выполнения над множеством объектов определённого типа операции разбиения происходит формирование нового множества объектов, каждый элемент которого представляет собой совокупность взаимосвязанных фрагментов соответствующего исходного объекта. Такая совокупность фрагментов должна быть эквивалентна исходному объекту, что позволяет манипулировать новыми объектами так же, как объектами до разбиения. Необходимость выполнения операции разбиения, как правило, обусловлена частым совместным использованием некоторых атрибутов объектов определённого типа. В результате выполнения операции интеграции в эволюционной информационной системе происходит создание новой системы объектов на основе исходных подсистем объектов. Перед проведением интеграции необходимо определить семантику отношений элементов (связей между объектами) в создаваемой системе, исходя из статистики использования объектов подсистем, задействованных в операции. Интеграция подсистем объектов в новую систему объектов может быть поверхностной или полной. При поверхностной интеграции происходит построение системы объектов более высокого уровня абстракции, чем тот, на котором находится самая высокоуровневая подсистема из перечня интегрируемых подсистем. Новая система объектов связывает исходные подсистемы, не внося в них изменений, что позволяет сохранять возможность работы с исходными подсистемами как с самостоятельными системами объектов. При полной интеграции исходные подсистемы полностью включаются в новую систему объектов, утрачиваю свою самостоятельность. В результате выполнения операции расширения происходит преобразование структуры исходного типа объектов к структуре соответствующих объектов расширения определённого вида. При этом объекты, которые не удастся сопоставить с обновлённой структурой типа, сформируют новое множество объектов отклонения данного типа объектов. В результате выполнения операции сужения происходит удаление из структуры исходного типа объектов атрибутов, которые в большинстве объектов данного типа не содержат значений или содержат значения по умолчанию. При этом объекты, соответствующие атрибуты которых содержали значения, отличные от значений по умолчанию, становятся объектами расширения. Эволюционную информационную систему можно рассматривать как совокупность подсистем семантически связанных объектов одного уровня абстракции. Каждая такая подсистема может содержать множества объектов отклонения. Критерием формирования данных множеств может являться идентичность структуры включаемых в них объектов. В результате в рамках одной функциональной единицы происходит деление по структурному признаку, не затрагивающее исходной функциональности и назначения. Будем определять множество объектов отклонения как множество, содержащее объекты отклонения одинаковой структуры. Поскольку в одной системе объектов могут существовать объекты разной структуры, следует определить структуру объекта, характерную для данной системы. Для решения этой задачи выделим из множеств объектов отклонения множество с наибольшим временем жизни или с наибольшим количеством входящих в него объектов. Будем называть такое множество аттракторным доминантным множеством. Структуру объектов данного множества будем называть структурным аттрактором. Таким образом, любой структурный аттрактор в эволюционной информационной системе можно рассматривать как шаблон структуры объектов аттракторного доминантного множества. Представим систему объектов в виде некоторого пространства, заполненного объектами, стремящимися к определённому структурному аттрактору. Такое представление системы объектов будем называть структурной клеткой. Расстояние от объекта до центра указанного пространства (ядра клетки), а также направление отклонения можно определять, исходя из комплексной оценки количества добавленных, изменённых или незаполненных атрибутов отклонения. Как правило, по мере приближения к ядру клетки плотность заполнения возрастает. Объекты аттрактор-ного доминантного множества при этом находятся на нулевом расстоянии от ядра. В эволюционной информационной системе в зависимости от особенностей процесса эволюции возможно существование структурных клеток, ядро которых не совпадает с аттракторным доминантным множеством. Например, если для начала процесса преобразования структуры системы требуется наличие множества объектов отклонения, которое в несколько раз превышает по мощности аттракторное доминантное множество, то такая структурная клетка будет иметь наибольшую плотность возле множества объектов отклонения, а не возле аттракторного доминантного множества. В этом случае ядром будет являться множество объектов отклонения. Таким образом, поскольку структура объектов отклонения не соответствует структурному аттрактору, ядро (центр плотности) и аттракторное доминантное множество совпадать не будут. Такую структурную клетку будем называть клеткой со смещённым ядром. Любой объект, не входящий в аттракторное доминантное множество, может представлять собой объект отклонения. Отличие структур объектов по одному из атрибутов (отсутствие атрибута, присутствие дополнительного атрибута, различие форматов атрибутов и т. д.) примем за единицу расстояния между объектами системы. Количество подобных отличий будем называть расстоянием между объектами (структурами объектов). Таким образом, можно определить расстояние между ядром и аттракторным доминантным множеством. В структурных клетках со смещённым ядром это расстояние отлично от нуля. Данную характеристику можно рассматривать в качестве одного из основных критериев проведения структурных преобразований в эволюционной информационной системе. Изменение структуры информационной системы является ресурсоёмким процессом, поэтому необходимо предусмотреть возможность выполнения структурных преобразований в течение нескольких шагов, на каждом из которых перестраивается определённая часть системы. Производимые в системе из- менения могут вступить в силу только после того, как преобразование структуры будет полностью завершено. В процессе проведения структурных изменений автоматизированная информационная система должна продолжать поддерживать возможность работы с объектами прежней структуры. Использование в качестве хранилища автоматизированной информационной системы эволюционной базы данных способствует продлению срока эксплуатации системы при одновременном уменьшении затрат на её сопровождение. Реализация операций, поддерживающих эволюцию, позволит эволюционной автоматизированной информационной системе активно реагировать на внешние воздействия и адаптироваться к различным изменениям, происходящим в предметной области. Поддержка аспекта темпораль-ности в указанных операциях обеспечит возможность восстановления состояния системы на любой момент действительного времени, а что позволит естественным образом манипулировать не только актуальной, но также и исторической информацией. ]]></text>
</doc>

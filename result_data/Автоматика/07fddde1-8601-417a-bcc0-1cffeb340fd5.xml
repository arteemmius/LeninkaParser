<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/upakovka-na-osnove-metoda-muravinoy-kolonii]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Лебедев Олег Борисович]]></item>
    <item type="str"><![CDATA[Зорин Виктор Юрьевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Упаковка на основе метода муравьиной колонии]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[РОЕВОЙ ИНТЕЛЛЕКТ]]></item>
    <item type="str"><![CDATA[МУРАВЬИНАЯ КОЛОНИЯ]]></item>
    <item type="str"><![CDATA[АДАПТИВНОЕ ПОВЕДЕНИЕ]]></item>
    <item type="str"><![CDATA[ОДНОМЕРНАЯ УПАКОВКА]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассматривается муравьиный алгоритм решения задачи одномерной упаковки. Описывается структура графа поиска решений, процедура поиска решений на графе, способы отложения и испарения феромона. В работе используется циклический (ant-cycle) метод муравьиных систем. Экспериментальные исследования проводились на IBM PC. По сравнению с существующими алгоритмами достигнуто улучшение результатов.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Рассматривается муравьиный алгоритм решения задачи одномерной упаковки. Описывается структура графа поиска решений, процедура поиска решений на графе, способы отложения и испарения феромона. В работе используется циклический (апґ-еуеіе) метод муравьиных систем. Экспериментальные исследования проводились на ІВМРС. По сравнению с существующими алгоритмами достигнуто улучшение результатов. Роевой интеллект; муравьиная колония; адаптивное поведение; одномерная упаковка. * Работа выполнена при поддержке: РФФИ (грант № 09-01-00509), г/б № 2.1.2.1652. O.B. Lebedev, V.J. Zorin PACKING ON THE BASIS OF THE METHOD ANT COLONY* In work the ant algorithm of the decision of a problem of one-dimensional packing is considered. The structure of the decisions search graph decisions, search procedure on the graph, ways of adjournment and evaporation pheromone is described. In work it is used cyclic (ant-cycle) a method of ant systems. Experimental researches were spent on IBM PC. In comparison with existing algorithms improvement of results is reached. Swarm intelligence; ant colony; adaptive behaviour; one-dimensional packing. Введение. Задача упаковки одномерных блоков является распространенной производственной задачей. Она решается при производстве стали, стекла, бумаги, дизайне СБИС, составлении бюджета и т.д. [1]. Рассматриваемая задача упаковки одномерных элементов в блоки является ЛР-полной. Несмотря на высокую изученность задачи, существование огромного количества различных методов ее решения для ряда контрольных (тестовых) задач оптимальное решение не получено. Более того, на данный момент не существует представленного в литературе универсального алгоритма, способного одинаково эффективно решать все тестовые задачи. Ввиду вышеизложенного, задача упаковки блоков является актуальной проблемой комбинаторной оптимизации, стоящей перед специалистами в различных областях производства. Результатом непрекращающегося поиска наиболее эффективных методов упаковки стало использование бионических методов и алгоритмов [2-6] . Одним из новых направлений таких методов являются мультиагентные методы интеллектуальной оптимизации, базирующиеся на моделировании коллективного интеллекта [7-9]. К таким методам можно отнести, и муравьиные алгоритмы (Ant Colony Optimization - ACO) [10]. Идея муравьиного алгоритма - моделирование поведения муравьев, связанного с их способностью быстро находить кратчайший путь от муравейника к источнику пищи. Основу поведения муравьиной колонии составляет самоорганизация, обеспечивающая достижения общих целей колонии на основе низкоуровневого взаимодействия благодаря которому, в целом, колония представляет собой разумную многоагентную систему. В работе излагается метод решения задачи упаковки, основанный на моделировании адаптивного поведения муравьиной колонии. Постановка задачи. Проблема одномерной упаковки может быть сформулирована следующим образом. Дано множество элементов A={ai\i=1,2,...,nj. Вес элементов задается множеством W={w, \ i=1,2,...,n}. Необходимо сформировать F узлов, т.е. множество A разбить на F непустых и непересекающихся подмножеств Aj. A = uAj, Aj*0 (Vij) [A, nAj =0]. Обозначим через Wj вес элементов, назначенных в узел Aj: Wj =Yw, , для {i\ at e Aj}. Задается максимально допустимый суммарный вес - C элементов, назначенных в каждый узел: W<C. Критерий оптимизации - число узлов F. Цель оптимизации - минимизация F. Рассмотрим стандартную процедуру упаковки [2]. Дан список S элементов для упаковки. Предположим, что элементы для упаковки отсортированы некоторым образом. Первый элемент списка Sупаковывается в блок A;. Элементы 2, ..., n рассматриваются в порядке возрастания их индексов: рассматриваемый элемент упаковывается в текущий блок, если не происходит переполнения блока; в противном случае он упаковывается в новый блок, который становится текущим. Временная сложность алгоритма O(n). Очевидно, что существует такая последовательность элементов в списке, при которой решение задачи упаковки будет оптимальным. Таким образом, решение задачи упаковки сводится к нахождению списка, используемого стандартной процедурой упаковки. Поиск решений осуществляется на полном графе поиска решений О=(Х,и). Вершины множества Х={х,\г=1,2,п} соответствуют элементами списка & Решением является маршрут в графе О, включающий все вершины. Для нахождения маршрута в графе используются различные алгоритмы, особую эффективность показали алгоритмы, построенные на основе метода муравьиной колонии [5,9]. В работе предлагается муравьиный алгоритм решения задачи упаковки с использованием стандартной процедуры упаковки. Поиск решений на основе моделирования адаптивного поведения муравьиной колонии. Поиск решений осуществляется на полном графе поиска решений О=(Х,и). Вершины множества Х={х\1=1,2,..., п} соответствуют элементам а,. В общем случае поиск решения задачи упаковки осуществляется коллективом муравьев 1={ік\к=1,2,...,п}. На каждой итерации муравьиного алгоритма каждый муравей 2к строит свое конкретное решение - маршрут в графе О, разбитый на части. Вершинам каждой части маршрута соответствуют элементы, назначаемые в один блок. Для равномерного распределения муравьев и создания равных стартовых условий в качестве начальных вершин у формируемых муравьями маршрутов используются вершины множества Х общим числом п. Моделирование поведения муравьев в задаче упаковки связано с распределением феромона на ребрах графа О. На начальном этапе на всех ребрах графа О откладывается одинаковое (небольшое) количество феромона Ф/у, где v=\ и\. Параметр Ф задается априори. Процесс поиска решений итерационный. Каждая итерация і включает три этапа. На первом этапе муравей находит решение, на втором этапе откладывает феромон, на третьем этапе осуществляется испарение феромона. В работе используется циклический (ай-сус1е) метод муравьиных систем. В этом случае феромон откладывается агентом на ребрах после полного формирования решения. На первом этапе каждой итерации каждый к-й муравей формирует свой собственный маршрут Мк. Процесс поиска решений итерационный. На первом этапе каждой итерации каждый к-й муравей формирует свой собственный маршрут Мк с разбиением его на части. Каждая часть Мк-єМк включает вершины, соответствующие элементам, помещаемым в блок А-. Процесс построения маршрута Мк пошаговый. На каждом шаге ґ агент 2к применяет вероятностное правило выбора следующей вершины для включения ее формируемый маршрут Мк(ґ). Пусть на шаге ґ формируется часть М-(ґ), являющаяся хвостом Мк(ґ). Для этого выделяется множество вершин Хк(ґ) єХ, таких, что, если х, єХк(ґ), то рассматриваемый на шаге ґ элемент і'(ґ) єБк, соответствующий вершине х,, может быть зафиксирован в блоке А,, без переполнения, т.е. без превышения веса зафиксированных в нем элементов. Пусть ек(ґ) - множество вершин части Мк-(ґ) маршрута Мк(ґ). Агент просматривает все вершины х,єХк(ґ) и для каждой вершины рассчитывается параметр /к - суммарный уровень феромона на ребрах графа О, связывающих х, с вершинами множества ек(ґ). Вероятность Рк включения вершины х,єХк(ґ) в часть Мк-(ґ) маршрута Мк(ґ) определяется следующим соотношением: Ргк=/гк/ X Іік . (1) І Агент 2к с вероятностью Р,к выбирает одну из вершин х,єХк(ґ), которая включается в конец маршрута Мк(ґ). После этого фиксируется размещение элемента х,єХк(ґ) в блоке А-. ЕслиХк(ґ) оказывается пустым, то выбирается не входящая в маршрут вершина, а соответствующий ей элемент помещается в следующий блок А-+1. На втором этапе итерации, каждый муравей 2к откладывает феромон на ребрах полных подграфов, каждый из которых построен на множестве вершин, входящих в состав одной из частей Мк-(ґ) маршрута Мк(ґ). Количество феромона Azk(l), откладываемое муравьем zk на каждом ребре подграфов, построенных на l-ой итерации, определяется следующим образом: Axk(l)= Ф / Fk(l), (2) где l - номер итерации, ФІ - общее количество феромона, откладываемое муравьем на ребрах полных подграфов Gj, Fk(l) - целевая функция для решения, полученного муравьем zk на l-ой итерации. Чем меньше Fk(l), тем больше феромона откладывается на ребрах построенного маршрута и, следовательно, тем больше вероятность выбора этих ребер при построении маршрутов на следующей итерации. После того, как каждый агент сформировал решение и отложил феромон, на третьем этапе происходит общее испарение феромона на ребрах полного графа G в соответствии со следующей формулой: fik = fik (l-p), (3) где p - коэффициент обновления. После выполнения всех действий на итерации находится агент с лучшим решением, которое запоминается. Далее осуществляется переход на следующую итерацию. Временная сложность этого алгоритма зависит от времени жизни колонии l (число итераций), количества вершин графа n и числа муравьев m, и определяется как O(l*n2*m). Алгоритм одномерной упаковки на основе метода муравьиной колонии формулируется следующим образом. 1. В соответствии с исходными данными формируется полный граф поиска решений G=(X,U). 2. Определяются число агентов и вершины, в которые они помещаются. 3. Задается значение параметра Ф и число итераций - Nl. 4. На всех ребрах графа G откладывается начальное количество феромона. l=l. 5. На первом этапе l-й итерации на ГПР G каждым агентом zk находится маршрут Mk(l)и соответствующее ему решение задачи упаковки. 6. Для каждого решения задачи упаковки находится значение целевой функции Fk(l). 7. В графе G на ребрах полных подграфов Gkj, каждый из которых построен на множестве вершин, входящих в состав одной из частей Mj(t) маршрута Mk(l), откладывается феромон. Количество феромона, откладываемого каждым агентом, пропорционально Fk(l). 8. Выполняется процедура испарения феромона на ребрах графа G. 9. Выбирается лучшее решение, полученное на протяжении всех выполненных итераций. 10. Если все итерации выполнены, то конец работы алгоритма, в противном случае переход к пункту 4 для выполнения очередной итерации. Заключение. Предложены новые механизмы решения задачи упаковки, использующие математические методы, в которых заложены принципы природных механизмов принятия решений. В отличие от канонической парадигмы муравьиного алгоритма муравьем на графе поиска решений G=(X, U) строится маршрут с разбиением на части и формированием на вершинах, входящих в каждую часть, подграфов, на ребрах которых откладывается феромон. Экспериментальные исследования проводились на IBM PC. Временная сложность алгоритма (ВСА), полученная экспериментальным путем, практически совпадает с теоретическими исследованиями и для рассмотренных тестовых задач составляет (ВСА ~ D(n2)). Для проведения объективных экспериментов были использованы известные тестовые задачи, представленные в литературе и Интернет. Задачи, на которых был протестирован разработанный алгоритм, доступны в библиотеке OR-объектов (http://www.ms.ic.ac.uk/info.html). Для составления достоверных выводов был проведен не один, а серия опытов-экспериментов. По сравнению с существующими алгоритмами достигнуто улучшение результатов на 2-3 %. ]]></text>
</doc>

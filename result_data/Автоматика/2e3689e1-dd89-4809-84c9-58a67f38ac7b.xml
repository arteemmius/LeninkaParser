<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/primenenie-vstroennyh-kontrollerov-v-tehnicheskih-sistemah-servisa]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Петров Геннадий Алексеевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Применение встроенных контроллеров в технических системах сервиса]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[встроенные контроллеры]]></item>
    <item type="str"><![CDATA[контроллерные системы управления]]></item>
    <item type="str"><![CDATA[функции автомобильных контроллеров]]></item>
    <item type="str"><![CDATA[операционные системы]]></item>
    <item type="str"><![CDATA[ЯЗЫКИ ПРОГРАММИРОВАНИЯ]]></item>
    <item type="str"><![CDATA[протоколы]]></item>
    <item type="str"><![CDATA[си-муляторы]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассматриваются вопросы использования встроенных контроллеров в современных технических системах. Приводятся примеры технических систем со встроенными контроллерами и рассматривается базовая структура контроллерной системы управления. Обсуж-даются основные функции контроллеров на примере современного автомобиля, требования к опе-рационным системам и характеристикам контроллеров. Приводится модель для практического изучения контроллеров на примере симулятора ADUC812.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Г. А. Петров1 Санкт-Петербургский государственный университет сервиса и экономики (СПбГУСЭ), 191015, Санкт-Петербург, ул.Кавалергардская, 7 Аннотация - Рассматриваются вопросы использования встроенных контроллеров в современных технических системах. Приводятся примеры технических систем со встроенными контроллерами и рассматривается базовая структура контроллерной системы управления. Обсуждаются основные функции контроллеров на примере современного автомобиля, требования к операционным системам и характеристикам контроллеров. Приводится модель для практического изучения контроллеров на примере симулятора ADUC812. Ключевые слова: встроенные контроллеры, контроллерные системы управления, функции автомобильных контроллеров, операционные системы, языки программирования, протоколы, симуляторы. USING OF EMBEDDED CONTROLLERS IN TECHNICAL SERVICE-SYSTEMS G.A.Petrov The St.-Petersburg state university of service and economy (SPbSUSE), 191015, St.-Petersburg, streetKavalergardsky, 7, lit. A Summary - This article discusses the use of embedded controllers in modern technical systems. The examples of technical systems with embedded controllers and the basic structure of the microcontroller systems are discussed. The main functions of the controllers as an example of a modern car, the operating system requirements and characteristics of controllers are discussed. Simulator ADUC812 for the practical study of controllers is shown. Keywords: embedded controllers, controller systems, functions of engine controllers, operating systems, programming languages , protocols, simulators. Встроенные контроллеры составляют большую часть производства микропроцессорных средств. Подавляющее большинство современных промышленных, автомобильных, бытовых и других технических систем используют встроенные электронные модули управления, включающие в свой состав управляющий компьютер, называемый микроконтроллером. Термин микро отражает не микро возможности управляющего компьютера, а его размеры и то, что он реализован средствами микроэлектронной технологии в виде чипа, содержащего миллионы транзисторов. На рис.1. показан график увеличения транзисторов на чипе за 40 лет развития микропроцессорной техники с 1970 года по 2010 год. Нижний график отражает теоретически предсказанное увеличение транзисторов на чипе доктором Г.Муром - одним из основателей фирмы Ш;е1, а второй - реальное увеличение транзисторов, которое, как видно, соответствует прогнозам. Пользователи устройств и систем со встроенными контроллерами могут и не знать, что в них имеется компьютер, используемый для автоматизации процессов управления, обеспечения функциональной гибкости, повышения технического интеллекта системы и качества управления системой. В отличие от обычных персональных компьютеров в микроконтроллерах программа хранится в отдельной энергонезависимой памяти, например флэш памяти, а в оперативной памяти хранятся только данные, поступающие от датчиков системы, константы и т.п. С развитием технологии больших интегральных схем встроенные контроллеры стали настолько дешевыми, что их можно найти в большинстве современных устройств и систем [2]. Примеров современных систем, использующих встроенные контроллеры, можно привести очень много, труднее назвать систему, которая не содержит контроллеров. В табл. 1 приведены некоторые из примеров устройств и систем, позволяющих представить масштабы применений контроллеров [4]. 10,000,000.000 1.000,000,000 100,000,000 10,000,000 1.000,000 100,000 10.000 1,000 1970 1980 1990 2000 2010 Рисунок 1 - Развитие микропроцессорной техники Таблица 1 - Примеры систем со встроенными контроллерами Автомобили Управление двигателем, антиблокировочные и тормозные системы, управление подушками безопасности, системой микроклимата, навигация gps, системная диагностика и т.п. Бытовая электроника Телевизоры, посудомоечные машины, плееры DVD, стереосистемы, фотокамеры, часы, автоответчики и другие. Устройства для компьютера Клавиатуры, принтеры, сканеры, дисплеи, модемы, жесткие диски и т.д. Электронные инструменты Осциллографы, вольтметры, генераторы сигналов, логические анализаторы. Персональные устройства Сотовые телефоны, переносные плееры МР3, видео-плееры, цифровые камеры. Авиационные сис- Автопилоты самолетов, темы навигационные системы, системы автоматической посадки, системы наведения и управление двигателем. Биомедицинские системы Системы компьютерной томографии и ультразвукового исследования. Промышленное оборудование Управление лифтами, роботы, станки с ЧПУ, промышленные системы автоматизации и управления и другие. Обобщенная структурная схема контроллерной системы управления техническим объектом управления (ОУ) представлена на рис.2. Микроконтроллер (МК) принимает множество информационных сигналов {X} и {и} из дискретных (ДД) и аналоговых датчиков (АД) соответственно из объекта управления (ОУ) и вырабатывает множество управляющих сигналов ^} в соответствии с алгоритмом управления и выдает их в исполнительные механизмы (ИМ). Рисунок 2 - Структурная схема микрокон-троллерной системы управления Закон управления реализуется контроллером на основе сигналов {X} и {^ из ОУ, алгоритмов их реализации и информации с пульта управления (ПУ). МК содержит модули, обеспечивающие выполнение программ управления объектом, хранение данных, а также периферийные модули для подключения датчиков и исполнительных механизмов. С помощью ПУ пользователь получает возможность доступа к микроконтрол-лерной системе: запускать и останавливать её, загружать в контроллер значения некоторых уставок (констант), выводить на индикаторы информацию о состоянии объекта и т. п. С помощью последовательного канала связи (ПсК) МК может организовать взаимодействие микроконтроллера с персональным компьютером (ПК) в режиме «запрос - ответ». На рис.3 приведена плата микроконтроллера, содержащая кроме самого чипа микроконтроллера необходимые компоненты, требуемые для запуска микроконтроллера, а также основная периферия, часто используемая разработчиками программного обеспечения для реализации встраиваемых приложений таких как: ЕШете^приложения, файловые системы, ввод/вывод, отображение и передача информации и т.п. Для подключения дополнительной периферии на плате предусмотрены разъемы портов ввода/вывода МК[3]. Рассмотрим функции контроллеров в подсистемах автомобиля. Современный автомобиль, как и любую техническую систему с точки зрения объекта управления, можно представить состоящим из множества аналоговых и цифровых датчиков, набора исполнительных устройств и механизмов. На рис.4 представлены основные узлы автомобиля, для управления которыми используются автомобильные контроллеры. В автомобиле может использоваться до десятков управляющих контроллеров, основными функциями которых являются: • обработка данных от подключенных к контроллеру датчиков для формирования информационного «окна»; • управление подключенными к контроллеру исполнительными механизмами, используя общее информационное «окно»; • выполнение функций контроллерного устройства в общей вычислительной сети автомобиля. К контроллерам автомобилей предъявляются специальные требования: работа происходит в условиях тряски, расширенном диапазоне температур, воздействия агрессивных сред, влажности и т.п. Одна из важнейших особенностей автомобильных систем состоит в том, что в них большинство процессов протекает в режиме реального времени и для принятия контроллером решений о формировании соответствующих управляющих воздействий в исполнительные механизмы требуется ограниченное время: от секунд до тысячных секунд. Разрядность контроллеров для автомобиля с учетом специфики использования лежит в диапазоне от 8 до 64 бит, используются и такие мощные компьютеры, как РепЦит 4. Рисунок 3 - Плата микроконтроллера Рынок программного обеспечения для автомобильных контроллеров в силу своей специфики нельзя пока назвать освоенным и развитым. Даже разработки программистов фирмы Microsoft, результатом которых стала Windows Automotive, пока не оказали на эволюцию автомобильных операционных систем значительного влияния. Проблемой создания автомобильного программного обеспечения начинают самостоятельно заниматься автоконцерны. Так, например, японская корпорация Toyota сообщила о намерении создать универсальную операционную систему для своих автомобилей. Причём слово универсальная в данном случае является ключевым: сейчас для каждой новой модели фирмануota создаёт операционную систему с нуля, что требует больших трудозатрат. Появление же единой операционной системы реального времени, одинаково функционирующей на любой новой модели автомобиля, по мнению концерна, не только приведёт к сокращению стоимости, но и заметно повысит эффективность. Рисунок 4 - Основные узлы автомобиля, управляемые контроллерами Несмотря на то, что компания уже определила команду разработчиков, окончательная версию уникального программного продукта появится, по-видимому, не ранее 2015 года. Внедрение контроллеров в самое различное оборудование автомобилей привело к использованию сетей. В настоящее время специалисты знакомы с сетевыми шинами CAN - Controller Area Network, LIN - Local Interconnection Network. Сеть CAN используется в таких важных подсистемах автомобиля, как: управление двигателем, системой безопасности (подушки безопасности, контроль давления в шинах, АБС и т.п.). Стандарт шины LIN был разработан для создания недорогих локальных сетей обмена данными на небольшие расстояния. В автомобиле в данную сеть объединяют такие устройства как стеклоочистители, стеклоподъемники, замки дверей, приводы, обогрев зеркал и т.п. В последнее время активно развивается концепция «управления по проводу» (drive-by-wire) , которая состоит в переводе всех механических частей (привод «газа», тормоз и другие) на электронное управление, что позволяет сделать автомобиль более надежным и безопасным. С этой целью ряд ведущих автомо- бильных фирм разработали новый скоростной протокол FlexRay (по названию одной из фирм). FlexRay - это надежный коммуникационный протокол, который используется в электронных автомобильных системах. Автопроизводители разрабатывают концепцию безопасного обмена данными для систем цифрового электронного автомобиля, а также такую его архитектуру, которая могла бы надежно связывать важнейшие компоненты с драйверами программного обеспечения, а те, в свою очередь - с интерфейсом водителя автомобиля. На новые контроллеры FlexRay возлагаются широкие задачи контроля двигателя, трансмиссии, подвески, подсистем торможения, рулевого управления и другой бортовой электроники - областей, где актуально расширение функциональности и наличие развитых средств диагностики. Отметим, что устройства FlexRay совместимы с основными стандартами современных бортовых сетей: сети контроллеров CAN, сети локальной внутренней связи LIN, так что переход к новым системам может осуществляться поэтапно. FlexRay приблизительно в 10 раз быстрее шины CAN, поэтому постепенная замена сетей CAN ожидается, прежде всего, в дорогих автомобилях но- вого поколения, а затем на новую систему перейдут производители всех автомобилей. Технология FlexRay дебютировала на автомобильном рынке в 2007 году. Например, FlexRay на специализированном чипе производства компании Freescale реализована на BMW X5 второго поколения. Комбинация активного подавления кренов и регулировки жесткости амортизаторов позволяет достичь абсолютно иного уровня характеристик. Технология получила название AdaptiveDrive и стала первой системой, которая для координации своих действий использует инновационную технологию передачи данных FlexRay. Новое поколение ESP (Electronic Stability Program) является самой распространённой среди существующих сегодня систем динамической стабилизации автомобиля. Система работает совместно с ABS (Anti-lock Braking System - антибло-кировочная тормозная система), EBD (Electronic Brake-force Distribution - система электронного распределения тормозного усилия), EBA (Electronic Brake Assist - система усиления экстренного торможения) и системой управления двигателем. Данная система выравнивает траекторию движения автомобиля, но пытается делать это уже в соответствии с пожеланиями водителя. Особенно ESP эффективна в ситуации заноса автомобиля и позволяет даже неопытному водителю эффективно выходить из дорожных затруднений. Как только начинается скольжение через блок ABS осуществляется строго дозированное торможение одного или нескольких колес, а также, если необходимо, снижение оборотов двигателя. Мониторинг ситуаций осуществляется с помощью датчиков бокового ускорения, и если угол поворота руля не соответствует углу поворота автомобиля, то приводится в действие ESP. В некоторых современных автомобилях предусмотрена возможность беспроводной связи Bluetooth, Wi-Fi , а также интерфейс USB. Например, на основе беспроводной связи осуществляется доступ в Интернет, она может использоваться для телеметрической диагностики неисправностей автомобиля, ориентирования в дорожной ситуации. Регуляторы скорости современных автомобилей позволяют определять расстояние до впереди идущей машины, препятствия и выполнять торможение, если это требуется для соблюдения дистанции. Причем, современные системы достаточно интеллектуальны, чтобы реагировать на перестроения и другие маневры. Контроллеры устанавливаются по территориальному принципу, то есть в тех местах автомобиля, где имеется большое число датчиков систем и исполнительных механизмов. Один контроллер может обслуживать датчики и исполнительные механизмы разных систем по принципу его близости к объекту управления. Объединение узлов в единую управляющую систему происходит в общем информационном окне, содержащее всю информацию о текущем состоянии узлов и систем автомобиля. Структура и содержание информационного «окна» зависят от набора систем, установленных в автомобиле. В 2006 г. правительство США выпустило постановление, чтобы все производимые в стране автомобили должны быть оборудованы системами контроля курсовой устойчивости. Национальное управление по безопасности дорожного движения (NHTSA) распространило результаты анализа, который убедительно показал, что вероятность столкновения автомобилей, оборудованных средствами контроля устойчивости, на 35% меньше, чем у автомобилей без таких систем. По прогнозам рост общемирового уровня оснащенности автомобилей электронными средствами контроля курсовой устойчивости должен составить с 21% в 2006 году до 35% в 2012 году (годовой прирост 12,5%). При этом предполагается, что доля автомобилей, оборудованных электронными тормозными системами возрастет с 1% в 2007 году до 5% в 2012 году. Рассмотренные выше системы относятся к системам реального времени, которые должны реагировать на внешние входные сигналы, состояния и формиро- вать множество выходных сигналов за определенное ограниченное время. Время отклика не должно превышать максимально допустимое , так как это может привести к сбоям или отказу системы реального времени. Наглядным примером одной из функций системы реального времени для автомобиля является контроллер автомобильной подушки безопасности. Когда датчики движения воздушной подушки (акселерометры) распознают столкновение, системе необходимо среагировать, раскрывая воздушную подушку в течение 5-10 мс, или система не сработает нужным образом. На высокой скорости с задержкой более 10 мс водитель уже столкнется с рулевым колесом до того, как раскроется подушка. Это же можно отнести к функции охранной сигнализации, управлению системой торможения и т.д. Подобные системы иногда называют жесткой системой реального времени. В жесткой системе реального времени выходные сигналы, поступающие в исполнительные устройства, должны быть сформированы в заданных интервалах времени, составляющих цикл управления. Во многих системах реального времени имеется множество входных и выходных управляющих сигналов, формируемых независимо друг от друга. Программирование упрощается при разделении задач, что требует от контроллера периодического переключения между различными задачами. Операционная система, которая поддерживает мульти-задачность, обеспечивает разделение времени контроллера между различными задачами. Операционные системы часто классифицируют по их характеристикам реального времени. Операционные системы общего назначения, как правило, не являются системами реального времени. В соответствии с указанными критериями встроенная ОС, такая как Windows Embedded CE, квалифицируется как операционная система реального времени (ОС РВ) . Встроенные операционные системы обычно разрабатываются на языках C и C++ и поставляются вместе с компилятором и инструментами отладки, чтобы помочь разработчикам в проектировании прикладных программ и тестировании устройств. Рис.5 показывает разрядность контроллеров, используемых в разработках встроенных устройств. / / / m n Ш Ш ■ ■ 8 бит 16 бит 32 бита 64 бит Рисунок 5 - Разрядность встраиваемых контроллеров Как можно видеть, большинство текущих разработок сосредоточено вокруг 16- и 32-битных контроллеров. Это не удивительно, так как с учетом продолжающегося развития технологии больших интегральных схем тенденция всегда была направлена в сторону использования встроенных контроллеров с большей разрядностью. Например, модель BMV745 использует такой микропроцессор как Pentium 4. Семейство процессоров архитектуры X86 имеют достаточно низкую стоимость благодаря своему широко применению в персональных компьютеров. Процессоры X86 и микросхемы поддержки доступны от множества поставщиков и в устройствах на базе процессоров X86 доступен широкий диапазон значений соотношения цена/производительность. Рис. 6 иллюстрирует используемые операционные системы (ОС) во встраиваемых контроллерах. В устройствах с операционной системой наиболее популярным выбором является готовая коммерческая операционная система. В обзоре коммерческих операционных систем в последние годы система MS Embedded имела самую большую долю рынка, как видно из рис.6. MS Embedded состоит из систем Windows Embedded XP и Windows Embedded CE. Затем идет VxWorks OS компании Wind River Systems. Symbian является ОС, которая широко используется в сотовых телефонах. Современные контроллерные системы управления различного назначения для их программирования используют языки программирования, адаптированные к задачам, решаемым системами автоматизации. В 1979 году Международный Электротехнический Комитет (МЭК) создал специальную группу технических экспертов по проблемам программируемых контроллеров, включая аппаратные средства, монтаж, тестирование, документацию и сопряжение [1]. Данная группа опубликовала международный стандарт 1131, который с 1997 года имеет обозначение МЭК 61131. Если посмотреть на языки стандарта МЭК с точки зрения современной информатики, то каждый из пяти языков можно подвергнуть оправданной критике. Но попытка создания одного универсального языка также оказалась нереальной в условиях конкуренции фирм, поэтому каждый пользователь выбирает язык по своему усмотрению и квалификации. Рисунок 6 - Операционные системы встраиваемых контроллеров К языкам стандарта МЭК относятся следующие: • язык инструкций (Instruction List, IL) - входной язык , аналогичный ассемблеру. Написанная на нем программа представляет собой список последовательно выполняемых команд, которые адаптированы к задачам управления; • релейно-контактная схема РКС (Ladder Diagrams, LD) - графический язык программирования, который обес- печивает построение на экране монитора требуемой схемы, аналогичной принципиальной электрической схеме и с помощью специальных программ в программаторе или контроллере создается программа управления системой. Такой подход к программированию отличается наглядностью при решении задач логического управления; • схема функциональных блоков (Function Block Diagram, FBD) - графический язык программирования , при котором на экране программатора составляется схема, аналогичная принципиальной электрической схеме на логических элементах. Эти схемы позволяют изображать последовательность обработки сигналов как логических, так и цифровых в достаточно наглядном виде; • последовательно-функциональная схема или Графсет (Sequential Function Chart, SFC) - графический язык программирования, аналогичный блок-схеме алгоритма. Этот язык удобен для программирования процессов с последовательными операциями и наличием сложных ветвлений в алгоритмах управляющих программ; • язык структурированного текста (Structured Text, ST), аналогичный языку программирования Pascal. Однако разработчики при создании программных продуктов не ограничены набором только данных языков в соответствии со стандартом МЭК, широко применяются также языки от ассемблера до С. На рис. 7 показаны распространенные языки программирования для разработки встроенных систем и ,как видно, семейство языков С используется в большинстве разработок. Как видно из диаграммы около трети разработчиков встроенных систем все еще должны использовать язык ассемблера для некоторых разработок. Как видно, большая часть разработок программ для встроенных контроллеров выполняется с использованием языков семейства С. Язык ассемблера все еще используется при разработке низкоуровневых процедур для некоторых уст- ройств, но его использование продолжает сокращаться. Рисунок 7 - Языки программирования контроллеров Интенсивное использование информационных технологий, компьютерной техники и связанных с ними коммуникационных технологий порождает новые направления информатизации практически в любой сфере жизни и деятельности человека. Использование симулятора в учебных дисциплинах, например: «Информатика», «Информационные системы и сети», в которых студенты направления «Автосервис» могут изучать контроллеры, алгоритмы и программы выполнения некоторых функций технических систем, как например: охранная сигнализация автомобиля на основе булевых функций, поддержание температуры двигателя в заданных пределах, запуск двигателя и другие. Использование подобных симуляторов позволяет более детально и наглядно изучать следующие основные вопросы по контроллерным системам: • базовую структуру типовой контроллерной системы управления, включающей контроллер с определенным набором входов для подключения датчиков входных сигналов и исполнительных механизмов; • модель контроллера, отражающую набор основных его модулей и их взаимодействие в системе управления объектом. Основными модулями являются центральный процессор, память программ, память данных, интерфейсные модули для сопряжения контроллера с датчиками входных сигналов и исполни- тельными механизмами, контроллеры обработки сигналов запросов прерываний при внештатных ситуациях, таймеров и счетчиков сигналов, аналого-цифровых и цифро-аналоговых преобразователей сигналов, коммуникационные интерфейсы для организации контроллерной сети; • разработка управляющих алгоритмов и программ, реализуемых контроллером функций заданной подсистемы управления. Пользовательский интерфейс симулятора представлен на рис. 8. Для организации работы в симуляторе на экран монитора можно вызвать любые изучаемые устройства контроллера, используя стандартные меню. Необходимые для выполнения задания устройства контроллера выбираются из меню симулятора View. На рис.8 показан вызов четырех основных устройств контроллера: центральное процессорное устройство (SFRs), оперативная память данных (Intenel Memory), память программ (Online Disassemble), входные и выходные порты P0-P3 (Ports). Пользователь имеет возможность, используя мышь и клавиатуру компьютера вводить данные в регистры процессора, ячейки памяти данных и порты ввода и вывода, выполнять требуемые в соответствии с заданием команды и т.п.. Особенностью выполнения задач на подобном симуляторе является то, что может быть выбран любой режим реализации: покомандный, с остановом по точкам прерывания и автоматический. Для имитации сигналов, поступающих с устройств ввода, необходимо мышкой установить в выбранных входных портах (Input) соответствующие коды или их можно сформировать в области ввода памяти данных. Для разработки программного обеспечения изучаемых устройств и их взаимодействия пользователь должен выбрать набор модулей, необходимых для выполнения заданных функций и их отладки. Для подключения к контроллеру устройств ввода и вывода данных в модели имеются порты ввода (Input Ports) и порты вывода (Output Ports). Рисунок 8 - Пользовательский интерфейс симулятора При отладке программы в порты ввода можно загрузить входные данные и стартовать выполнение программы. Выходные сигналы, поступающие в порты вывода, к которым подключены устройства вывода, формируются моделируемой программой. Отлаживаемую в симуляторе программу можно выполнять в следующих режимах: • автоматический режим выполнения программы полностью; • выполнение программы отдельными фрагментами до точки останова (Breakpoint), количество точек останова неограниченно; • пошаговый режим выполнения команд программы. Время выполнения моделируемой программы определяется симулятором автоматически. Основными достоинствами использования подобных симуляторов для практического изучения контроллеров являются следующие: • великолепная наглядность выполнения программ при изучении работы устройств контроллера в заданном режиме их выполнения; • полное соответствие работы симулятора и аппаратной платформы контроллера. Программа, отлаженная в симуляторе, практически всегда будет корректно выполняться в контроллере; • многолетний опыт показал, что студенты быстро осваивают симулятор, используя методические материалы и консультации преподавателей. ]]></text>
</doc>

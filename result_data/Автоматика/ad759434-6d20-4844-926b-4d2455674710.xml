<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/integralnyy-metod-vosstanovleniya-reliefa-donnoy-poverhnosti-po-kartograficheskoy-informatsii]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Пьявченко А.О.]]></item>
    <item type="str"><![CDATA[Переверзев В.А.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Интегральный метод восстановления рельефа донной поверхности по картографической информации]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ИНТЕГРАЛЬНЫЙ МЕТОД]]></item>
    <item type="str"><![CDATA[ВОССТАНОВЛЕНИЕ ПОВЕРХНОСТИ МОРСКОГО ДНА]]></item>
    <item type="str"><![CDATA[КАРТОГРАФИЧЕСКАЯ ИНФОРМАЦИЯ]]></item>
    <item type="str"><![CDATA[РЕАЛЬНЫЙ МАСШТАБ ВРЕМЕНИ]]></item>
    <item type="str"><![CDATA[ПРОГРАММНОЕ МОДЕЛИРОВАНИЕ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[В статье рассматривается один из подходов к решению задачи модельного восстановления поверхности дна моря с требуемым качеством по неполному набору значений глубин для заданного района плавания. Предложенный метод отличается высоким уровнем параллелизма выполняемых операций c ориентацией на аппаратную реализацию. В статье приводятся результаты программного моделирования метода, а также рассматривается возможность создания на его основе специализированных конвейерных многопроцессорных систем с пространственной коммутацией, предназначенных для решения указанной задачи в реальном масштабе времени.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Предлагаемый к рассмотрению метод восстановления рельефа донной поверхности по картографической информации относится к классу волновых методов и основывается на анализе корреляционных связей между соседними узловыми вершинами регулярной сетки, накладываемой на 2Б-изображение промерной карты. Метод позволяет проводить обработку данных о поверхности морского дна, представленных в виде дискретных числовых значений промерных глубин и/или линий изобат в пределах одного или нескольких кадров изображения. При этом анализируемая поверхность должна быть представлена с привязкой к узлам сетки, причем исходные данные о поверхности (опорные точки) могут быть распределены по ней случайно, без всякой закономерности. Остальные же узлы сетки обозначаются как неопределенные, то есть как раз такие, чьи значения необходимо вычислить в конце работы алгоритма реализации метода. Метод предназначен для реализации на программно-аппаратном многопроцессорном комплексе, предназначенном для восстановления донного рельефа в трехмерном виде в реальном масштабе времени. Приведем краткое описание метода. Пусть задана сетка регулярной систолической структуры, фрагмент которой представлен на рис. 1. Причем сетка не является кольцевой: прямые связи между краевыми вершинами, принадлежащими противоположным столбцам или строкам сетки, отсутствуют. Такую сетку размерностью NxN узлов будем называть растровой. Рис.1. Фрагмент структуры сетки, моделирующей растр 8х8 Шагу растровой сетки (расстояние между соседними узлами (в дальнейшем, вершинами)) соответствует некоторое заранее определенное значение прямого расстояния, отмеренное на плоскости, например, промерной карты по долготе или по широте между двумя точками донной поверхности. Следовательно, величиной шага можно регулировать исходный масштаб дискретного представления донной поверхности. Однако при этом необходимо помнить, чем больше шаг сетки, тем хуже точность восстановления поверхности из-за увеличения вероятности непопадания исходных координат в узлы сетки и прямого роста ошибки представления исходных данных. В ходе проводимых вычислений опорные точки (опорные узловые вершины сетки) не меняют до конца работы алгоритма своих координат и своего определенного заранее значения. Они также являются первичными источниками волн, шаг за шагом распространяющихся в четырех условных направлениях: вниз, вверх, влево и вправо. Интервал, за который волна распространяется сразу в четырех условных направлениях на один шаг по сетке, будем называть итерацией распространения волны. Следует отметить, что просчет одной итерации производится над всеми узлами сетки, не являющимися опорными. При расчете используются результаты предыдущей итерации. В итоге при размере сетки, равном 512х512 узлов, для худшего варианта представления исходных данных, когда определены только две опорные вершины в противоположных углах сетки, получим искомый результат не более чем за 512 полных итераций распространения волны. Следовательно, значение времени вычислений прямо пропорционально размерности самой сетки и обратно пропорционально числу изначально известных ее узловых опорных вершин. Поясним работу метода на примере распространения четверть волны вниз (рис. 2). Пусть каждая узловая вершина сетки (она же точка растра) характеризуется двумя основными параметрами - расстоянием до ближайшей опорной точки Ь1} и текущей глубиной в точке. При практической реализации метода, если вести обработку перепадов глубин от 0,1 м до 1638,2 м включительно, то для представления исходных данных достаточно 14 двоичных разрядов плюс два разряда на классифицирующие признаки (флаг определения вершины как промерной точки, а также флаг блокировки изменения промера в процессе расчетов). Первоначальное значение кода дистанции для всех вершин сетки принимается равным нулю. Первоначальное значение кода глубины для всех вершин сетки, кроме опорных, принимается как неопределенное: вводится специальный код, определяемый как код неопределенности. Опорные вершины, которым сопоставлен нулевой код глубины, определяют дискретное представление береговой линии. В процессе расчета дистанции до ближайшей опорной вершины расстояние по вертикали и горизонтали между соседними узлами сетки условно принято равным 1, а расстояние по диагоналям сетки между соседними узлами - равным 2 (рис. 2). Сделано это с целью сокращения используемой при расчетах разрядной сетки процессорных элементов целочисленного многопроцессорного вычислителя и, как следствие, сокращения аппаратурных затрат на его проектирование. Замечание 1. Для обеспечения более симметричного процесса распространения волны от опорных вершин значение расстояния между соседними узлами по диагонали сетки следует приблизить к л/2. Например, если расстояние по вертикали и горизонтали между соседними узлами сетки условно принять равным 100010, то диагональное расстояние станет равным 1414ш (101100001102), что, в свою очередь, позволяет увеличить точность производимых расчетов. Однако это увеличивает код представления дистанции как минимум на 10 двоичных разрядов. Пусть хотя бы одна из вершин сетки является опорной и ей сопоставлено ненулевое значение глубины. Тогда при распространении в растровой сетке четверти волны в направлении, например, «сверху - вниз» анализируемая вершина (//), не являющаяся опорной, принимает значения глубин от трех соседних сверху вершин (/-1/-1), (1-1,/), (1-1/+1) (см. рис. 2). В результате «кажущееся» значение глубины ^ в вершине (/,/) может быть определено следующим образом: _ Сйг,]'-1 ' -1,]'-1 + Сйг,/ ' -1,]' + Сйг,/+1 ' -1,]'+1 (1) и /-! + Сйи/ + Сйи/+! ’ ( ) где ,Д-:ц , А^+1 - числовые значения глубин в соседних вершинах сетки на текущий момент времени, Сй,-1 ,Сй, , Сй/+1 - весовые коэффициенты, вычисляемые для каждой из дуг сетки, связывающих соседние вершины с текущей при распространении волны вниз. Замечание 2. Если соседней верхней вершине сопоставлен код неопределенности, то вершина не участвует в расчете и соответствующий весовой коэффициент дуги, связывающей вершину с текущей, приравнивается нулю. Если все весовые коэффициенты равны 0, то код глубины в текущей вершине (/,/) остается без изменения. Другими словами, для вершины, имеющей в окружении соседние вершины, код глубины в которых не определен, текущий код остается прежним до следующей итерации волны. Легко заметить, что выражение (1) является разновидностью дискретной свертки, используемой в методах цифровой пространственной фильтрации [1]. Основой алгоритмов фильтрации данного класса является одномерная или дву- мерная последовательность коэффициентов, называемая ядром свертки. Применяемый оператор строится на основании значений соседних точек, а также на последовательности особого вида констант или коэффициентов, определяемых как норма свертки. В случае двумерных сверток рассматриваемый кадр изображения проходит обработку окном конечного размера и определенной формы (например, весь растр или меньше). В нашем методе каждый коэффициент Сй,/ рассчитывается как функция от значения кратчайшего расстояния Ьй до ближайшей опорной вершины от анализируемой с учетом принятых выше значений расстояний йЬ между соседними узлами сетки (множество {1, 2}). Следует отметить, что в общем случае на выбор коэффициентов также оказывают влияние предельные значения величин перепадов глубин, изначально представленных в сетке, а также требуемые точность представления исходных данных и необходимая скорость вычислений. В упрощенном же случае коэффициенты Сй, могут быть рассчитаны как функция, обратная дистанции по каждой дуге, то есть: Сй,_1 _ ЬЬй, - Ьй /.+1, Сй,/ _ ЬЬй, - Ьй*/+1, (2) Сй1/+1 ЬЬй1-Ьй ,/+1+1, где Ьй Ьй / Ьй ,-+1 - числовое значение кратчайшего расстояния до ближайшей опорной вершины от вершины (У), ЬЬйi - сумма значений кратчайших рас- стояний, рассчитанная по формуле 1 * ЬЬйi _ ^ Ьй /к , (3) к=-1 где Ьй\/_1= Ьйц/_1+2, Ьй\/= Ьй-1/+1, Ьй*,-+1 = Ьй-1/++2. «Кажущееся» значение кода дистанции в вершине (,/) определяется как Ьй , / = шт(Ьй Ьй / Ьй /+1). После вычисления по формуле (1) с учетом выражений (2) и (3) «кажущегося» значения текущей глубины О- производится расчет «истинной» глубины обрабатываемой вершины с округлением к ближайшему. Причем, если значение О у глубины, полученное в рассчитываемой вершине на предыдущем шаге итерации, определено как беззнаковое число, то і = (4) Если же текущей вершине сопоставлен код неопределенности, то Оу принимается равным Б, / . Истинное значение кода дистанции Ь, на текущем шаге распространения волны определяется как результат нахождения минимума между его «кажущимся» и старым ненулевыми значениями для текущей вершины сетки. При нулевом значении кода дистанции для текущей вершины соответствующий ей новый код дистанции будет равен его «кажущемуся» значению Ьй i /. В соответствии с представленным выше методом можно выделить следующий алгоритм определения глубины в каждой отдельно взятой вершине растровой сетки за один шаг прохода четверти волны сверху вниз. Расчетная вершина не является опорной. 1. Используя (2), рассчитать коды дистанции Ьй ,/-1, Ьй - Ьй ,-+1, а также код их суммарного значения ЬЬй,. Замечание 3. Расчет кодов дистанции ведется только для тех дуг растровой сетки, которые связывают текущую расчетную узловую вершину с соседними, содержащими код глубины, отличный от кода неопределенности. 2. Подсчитать значения весовых коэффициентов Сй,_1 ,Сй, , Сй,+1. 3. Определить «кажущиеся» значения глубины В, - и дистанции Ьй, -. 4. Рассчитать «истинные» значения глубины В, и дистанции Ь, анализируемой узловой вершины с учетом соответствующих предыдущих значений. Для остальных трех направлений при распространении одной полной итерации волны методика расчета кодов глубины и дистанции аналогична. Тогда общий алгоритм реализации метода будет иметь следующее описание. 1. Установить начальные значения В,/, Ь, для всех узлов сетки, определив положение опорных вершин при нулевом для них коде дистанции. 2. Для всех вершин сетки, кроме опорных, выполнить расчет одного шага полной итерации волны при ее распространении вниз. 3. Для всех вершин сетки, кроме опорных, выполнить расчет одного шага полной итерации волны при ее распространении вверх. 4. Для всех вершин сетки, кроме опорных, выполнить расчет одного шага полной итерации волны при ее распространении влево. 5. Для всех вершин сетки, кроме опорных, выполнить расчет одного шага полной итерации волны при ее распространении вправо. 6. Повторить М-раз пп.2 - 5 для всех вершин растровой сетки, кроме опорных, где N - размерность сетки. 7. Разблокировать все опорные вершины. Повторить один раз пп.2 - 5 для всех вершин растровой сетки: выполнить сглаживание поверхности. На рис. 3, а, .., 3.в представлены результаты работы экспериментальной программы, реализующей вычисления согласно рассмотренному выше методу и интерпретирующей результаты расчета в графическом трехмерном виде, используя библиотеку ОрепвЬ. Здесь приведены начальное трехмерное изображение поверхности, представленной опорными вершинами в растровой сетке размерностью 64х64 узлов (рис. 3,а), результат вычисления первой полной итерации волны (рис. 3,6) и окончательный вид восстановленной поверхности (рис. 3,в). а б в Рис. 3. Результаты работы метода при восстановлении поверхности по произвольно заданным опорным точкам (размерность сетки - 64х64) На рис. 4 представлен пример экспериментального построения поверхности морского дна по картографическим данным, причем слева приведен фрагмент исходной навигационной карты (рис. 4,а), а справа - соответствующая ей картинка донного рельефа, включающая контур береговой линии и полученная после обработки значений изобат и промерных глубин, заданных картой (рис. 4,б). а б Рис. 4. Фрагмент навигационной карты и ее модельное представление, полученное в результате просчета изобат и промерных глубин В заключении необходимо отметить, что предложенный метод восстановления рельефа донной поверхности характеризуется естественным параллелизмом, векторизуемостью и масштабируемостью основных операций: алгоритм вычислений в каждом узле растровой сетки одинаков как для каждой четверти итерации, так и для всех итераций в целом. Это позволяет выполнять решение задачи восстановления донной поверхности на параллельных процессорах с 81МБ архитектурой, например, на мультипроцессорах с конфигурацией связи типа п-куб, систолическая решетка и т.п. Как показало макетирование, благодаря наличию современных ПЛИС-технологий становится возможным создание отечественных мультипроцессорных систем, обеспечивающих эффективное решение задачи восстановления донного рельефа в реальном масштабе времени. Автор выражает благодарность ведущему инженеру-программисту кафедры ВТ Переверзеву В. А. за любезно предоставленные им программные средства собственной разработки, позволившие не только протестировать метод, но и наглядно проиллюстрировать результаты его работы. ]]></text>
</doc>

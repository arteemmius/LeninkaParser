<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/o-vozmozhnostyah-yazyka-funktsionalno-logicheskogo-programmirovaniya-flogol]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Бенеташвили А.Г.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[О возможностях языка функционально-логического программирования FLOGOL]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Одной из важнейших характеристик любого языка программирования является область его применения. Она прежде всего определяется математическим аппаратом, лежащем в основе языка. Так, логика предикатов первого порядка, лежащая в основе языка Prolog, однозначно определяет класс задач, для решения которых эффективно использовать Prolog: построение экспертных систем, систем поддержки принятия решений, систем искусственного интеллекта. Лежащая в основе огромного количества языков теория алгоритмов, являясь практически универсальной, тем не менее накладывает ряд ограничений на возможность решения задач с использованием подобных языков. Достаточно давно предпринимаются попытки создания математического аппарата, на основе которого возможно создать язык, охватывающий практически все сферы современного программирования. В качестве такого математического аппарата предложена теория направленных отношений [1], на основе которой создан язык функционально-логического программирования FLOGOL [2]. Выбор в качестве математической основы языка FLOGOL аппарата направленных отношений обусловлен анализом математических моделей существующих языков функционального, логического и реляционного программирования. Направленное (т,п)-арное отношение (d-отношение) R(m,n) понимается как некоторое неоднозначное в общем случае соответствие: Di' х D2' х х Dm' -> Di" х D2" х х D„" для соответствующих подмножеств D,’, l<i<m и Dj", l<j<n. Множества {d| I R(m,n) (d,) = d2} и {d21 R(m,n) (d|) d2} называются областью определения и областью значений R(m,n) соответственно. Одной из областей применения языка FLOGOL является реализация аппарата реляционной алгебры. В 1995 году в Лондонском Университете под руководством Дэйва Сандерса была создана система выражения запросов реляционной алгебры с использованием языка Miranda. Фундаментальное для реляционной алгебры понятие «кортежа» было представлено в языке не в качестве базового типа «кортеж», а как список ячеек, которые могли быть пустыми или могли представлять строковые, числовые, булевы константы или даты, что упростило реализацию. Другим примером языка программирования, позволяющего использовать операции реляционной алгебры, является язык LIBRA [3]. Язык основан на алгебре бинарных отношений. Отношение в языке LIBRA не только рассматривалось как множество в обычном математическом смысле, но также и применялось к аргументу для получения одного или более результатов. Такая формулировка отношения аналогична применению функций в функциональных языках программирования. Классическое понятие отношения в реляционной алгебре можно рассматривать как частный случай формализма направленных отношений, на основе которого построен язык FLOGOL. Это позволяет легко реализовать аппарат реляционной алгебры средствами языка. Предусмотренные в языке средства интеграции с языком С значительно расширяют возможности языка FLOGOL. В то же время средствами самого языка FLOFOL могут быть созданы библиотеки для широкого ряда предметных областей. Так, средствами языка реализованы библиотека арифметических операций и библиотека операций для работы со списками. Язык функционально-логического программирования FLOGOL разработан с целью применения в системах искусственного интеллекта для обработки сложно организованных данных с широким использованием рекурсивных определений объектов для задания на таких данных функций и отношений. ]]></text>
</doc>

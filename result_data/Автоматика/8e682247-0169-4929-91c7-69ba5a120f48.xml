<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/k-voprosu-povysheniya-proizvoditelnosti-sintezatora-radiolokatsionnogo-signala]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Таранцев Е. К.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[К вопросу повышения производительности синтезатора радиолокационного сигнала]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[РАДИОЛОКАЦИОННЫЙ СИГНАЛ]]></item>
    <item type="str"><![CDATA[СИНХРОНИЗАЦИЯ]]></item>
    <item type="str"><![CDATA[РЕГИСТРАТОР]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Разработано программное обеспечение синтеза радиолокационного сигнала, предложена реализация блока синхронизации регистратора радиолокационного сигнала на языке VHDL и получены временные диаграммы его работы.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Ключевые слова: радиолокационный сигнал, синхронизация, регистратор, программное обеспечение Tarantsev E. K. — On the question of improving the performance of the synthesizer radar signal // Izv. Penz. gos. pedagog. univ. im.i V. G. Belinskogo. 2011. № 26. P. 646—653. — The software synthesis of radar signal, implementation of the block synchronization registrar radar signal in VHDL and received timing diagrams of his work are proposed in this article. Keywords: radar signal synchronization, the registrar, the software При отладке и испытаниях многофункциональной бортовой радиолокационной станции (МБРЛС), производящей первичную обработку радиолокационной информации в аналоговом виде, каким, например, является АК "Шмель необходимо генерировать имитационное воздействие в аналоговой форме, а так же сигналы азимутальной привязки. Для этого необходимо решить задачи: 1) генерации записи радиолокационной информации (РЛИ); 2) вывода записи РЛИ в аналоговой форме; 3) вывода сигналов азимутальной привязки. Радиолокационный сигнал генерируется программой подготовки тестовых данных, задачами которой являются: расчет кадров данных для разных режимов работы РЛС и разных точек съема информации, генерация заголовков кадров, запись кадров с заголовками в файл, перемежая их маркерами. Ранее задача расчета данных решалась в программном обеспечении, однако из-за обилия режимов работы радиолокационных станций и усложнения модели данных часть обработки была перенесена в математический пакет matlab. В настоящее время шаблон кадра генерируется в matlab, после чего считывается программным обеспечением, обрамляется маркерами, заголовками и циклически выводится в файл по числу кадров. Основным недостатком такого решения является идентичность всех кадров записи, что не позволяет проверить корректность межкадровой обработки (проводится в низкочастотных режимах). Преимуществом является простота генерации самих кадров, скорость генерации. Наиболее трудоемкой математической операцией используемой при генерации записей является быстрое преобразование Фурье (БПФ). Поэтому первичной задачей при повышении производительности программного обеспечения синтеза является ускорение этой операции. Изначально алгоритм был реализован на С+—Н без привлечения дополнительных возможностей. Это решение оказалось удовлетворительным по скорости. Однако когда встал вопрос о переносе программного обеспечения на С# стало ясно, что это еще больше замедлит вычисления. Выходом оказалось применение свободно распространяемой библиотеки FFTW [1]. Сравнение времени затраченного на вычисление БПФ приведено в таблице 1. Таблица 1 - Время расчета БПФ для кадра. Размерность БПФ Время расчета (с) С++ С#, FFTW ша^аЬ 256 0,031 0,014 0,006 512 0,078 0,026 0,013 1024 0,141 0,053 0,028 Из таблицы видно, что использование подключаемой библиотеки значительно ускоряет процесс расчета записей. Наиболее быстрым является вычисление БПФ на шаНаЬ. Таким образом, генерация исходных данных на ша^аЬ является наиболее перспективным решением. Радиолокационный сигнал представляет собой узкополосный сигнал, спектр которого сосредоточен в окрестности некоторой частоты ^о. Такие сигналы выгодно представлять в виде комплексной огибающей, перенося спектр сигнала на нулевую частоту. При этом сигнал описывается меньшим числом отсчетов. Для восстановления узкополосного колебания радиолокационного сигнала из его комплексной огибающей используется квадратурный модулятор, который может быть выполнен в виде отдельной микросхемы, например ЛБ9857 [2]. Синтез сигнала должен производиться в реальном масштабе времени, что делает задачу синтеза близкой к задаче регистрации радиолокационного сигнала. Предложим структуру аппаратно программного комплекса имитации радиолокационного сигнала МБРЛС АК "Шмель"(Рисунок 1). Рисунок 1. Структура программно-аппаратного комплекса синтеза. Восстановление узкополосного колебания из комплексной огибающей производится на плате аналогового вывода. Примером таких плат могут служить изделия фирмы Insys [3], Analog Devices [2] и др. Подключение платы обычно производится к какому-либо производительному интерфейсу, например PCI, PCI-Express и др. Для взаимодействия с ней со стороны пользовательского программного обеспечения поставляется драйвер. Поскольку рассмотрение внутренней структуры платы аналогового вывода не входит в задачи работы, будем считать, что ее пропускная способность достаточна для нашей системы, а для нивелирования пульсаций трафика на плате используется входной буфер. Интерес представляет программное обеспечение синтеза. Программное обеспечение взаимодействует с блоком азимутальной привязки (БАВП), в задачи которого входит выдача управляющих сигналов и текущего азимута в радиолокационную станцию, выдача синхронизации в плату аналогового вывода. Трудностью при построении данного комплекса является четкое согласование трех потоков: радиолокационного сигнала, синхронизации, азимутально-временной привязки. При условии, что рассогласование потоков не должно превышать 16 мкс, что реализовать функциями операционной системы невозможно, необходимо реализовывать синхронизацию и тактирование аппаратно. Плата аналогового ввода позволяет задать тактовую синхронизацию и внешний сигнал пуска, по которому начинается вывод радиолокационного сигнала. С учетом этого, можно предложить следующую последовательность действий при синтезе сигнала (Рисунок 2). Как и для подсистемы регистрации, для подсистемы синтеза может быть предложена структура программного обеспечения с двумя буферами. В то время, пока первый буфер заполняется из внешнего файла, из второго осуществляется чтение данных в плату аналогового вывода. Переключение буферов происходит в момент прохождения антенной "мертвой зоны". Фазы воспроизведения и молчания моделируются таймером операционной системы, так как данная операция не чувствительна к джиттеру. Синхронное воспроизведение потоков запускается следующим образом: 1) сигнал Пуск поступает из ПО в БАВП; 2) сигнал Пуск (ИНК) поступает из БАВП в плату аналогового вывода 3) - выдача сигнала из платы аналогового вывода, - выдача азимута из БАВП, - выдача синхронизации из БАВП. Тем не менее, остается задержка между подачей ИНК и началом выдачи аналогового сигнала (Рисунок 3). Так как задержка постоянна, проблема решается введением задержки в БАВП. Рисунок 2. Диаграмма взаимодействия процессов при синтезе р/л сигнала. [r] Ready М Pos: 0.000s SAVE/REC CHI SOOmV CH2 ^.OOV Current Folder is k\ M 10.0jus CH2 I 416V Рисунок 3. Задержка платы аналогового вывода. Выше была рассмотрена азимутально-временная привязка, реализованная программно на таймере. При имитации радиолокационного сигнала временные характеристики такого способа удовлетворительны. При регистрации система должна сама определить момент начала записи исходя из заданного азимутального сектора. Джиттер сигнала запуска необходимо свести к нескольким микросекундам, иначе возникнут потери информации. В данном случае программная реализация и средства операционной системы не достаточны, поэтому было предложено реализовать схему азимутально-временной привязки на ПЛИС. Функциональная схема устройства приведена на рисунке 4. DD1 Рисунок 4. Функциональная схема азимутально-временной привязки Схемы сравнения DD1 и DD2 сравнивают текущий азимут с установленными порогами. Сигнал "старт"записывается в триггер DD3 и если текущий азимут находится вне контролируемых пределов, на следующем такте триггером DD6 генерируется сигнал "Разрешение старта". Если азимут находится в контролируемых пределах и получен сигнал "Разрешение старта на следующем такте происходит генерация сигнала "запуск"триггером DD8, по которому начинается регистрация информации, а так же сбрасываются триггеры DD3 и DD6. Триггер DD8 сбрасывается, когда азимут выходит за границы, при этом устанавливается сигнал "Закончить обработку"на триггере DD10. Данная схема была описана на языке VHDL и проверена путем моделирования ModelSim XE III. Описание схемы азимутальной привязки на языке VHDL: library IEEE; use IEEE.STD_LOGIC_ll64.ALL; use IEEE.STD_LOGIC_ARITH.ALL; use IEEE.STD_LOGIC_UNSIGNED.ALL; entity comp_circ is Port ( CLK : in STD_LOGIC; RST : in STD_LOGIC; - reset START : in STD_LOGIC; - user start LAUNCH : out STD_LOGIC; - launch recording FINISH : out STD_LOGIC; - stop recording LOWER_LIMIT : in STD_LOGIC_VECTOR (11 downto 0); - lower limit UPPER_LIMIT : in STD_LOGIC_VECTOR (11 downto 0); - upper limit AZIMUTH : in STD_LOGIC_VECTOR (11 downto 0)); - curent azimuth end comp_circ; architecture Behavioral of comp_circ is signal IN_THE_LL : STD_LOGIC; - azimuth is in the lower limit signal IN_THE_UL : STD_LOGIC; - azimuth is in the upper limit signal IN_THE_RANGE : STD_LOGIC; - azimuth is in the range signal LAUNCH_REQ : STD_LOGIC; - trigger - launch request signal LAUNCH_PERM : STD_LOGIC; - launch permission signal FINISH_REQ : STD_LOGIC; - comes after LAUNCH begin process (CLK) begin if CLK = ’1’ and CLK’event then if RST = ’1’ then IN_THE_UL <= ’0’; IN_THE_LL <= ’0’; IN_THE_RANGE <= ’0’; LAUNCH_REQ <= ’0’; LAUNCH_PERM <= ’0’; LAUNCH <= ’0’; FINISH_REQ <= ’0’; FINISH <= ’1’; else if AZIMUTH(11 downto 0) > LOWER_LIMIT(11 downto 0) then IN_THE_LL <= ’1’; else IN_THE_LL <= ’0’; end if; if AZIMUTH(11 downto 0) < UPPER_LIMIT(11 downto 0) then IN_THE_UL <= ’1’; else IN_THE_UL <= ’0’; end if; if IN_THE_LL = ’1’ and IN_THE_UL = ’1’ then - azimuth is in the range IN_THE_RANGE <= ’1’; else IN_THE_RANGE <= ’0’; end if; if START = ’1’ then LAUNCH_REQ <= ’1’; end if; if LAUNCH_REQ = ’1’ and IN_THE_RANGE = ’0’ then - LAUNCH permitted because LAUNCH_REQ comes out of range LAUNCH_PERM <= ’1’; LAUNCH_REQ <= ’0’; end if; if LAUNCH_PERM = ’1’ and IN_THE_RANGE = ’1’ then LAUNCH <= ’1’; FINISH_REQ <= ’1’; FINISH <= ’0’; end if; if FINISH_REQ = ’1’ and IN_THE_UL = ’0’ then LAUNCH <= ’0’; FINISH <= ’1’; end if; end if; end if; end process; end Behavioral; Временные диаграммы работы схемы азимутальной привязки представлены на рисунках 6 и 7. End Time: 5000 ns JJlCLK 0 JflRST 0 П JJl START 0 n ± JXAZIMUTH[11 :□] 1... ( 12H000 X 1 2'hOCIE X 1 2'hOOF X1 2П01 0 X 1211011 X 12H012 X 1 2'h01 3 X 1 2'ilOH Xl 2H01 5X 1 2'h01 6 X 1 2'hOI 7 X' 2'hO ± pCL0WER_LIMIT[11:Cl] 1... (X 1 2'h01 □ * PCUPPER_LIMIT[11:0] 1... (X 1211015 JJ1 FINISH 0 JIlLHUNCH 0 Рисунок 6. Задание воздействий в Xilinx ICE fcompjbwtelk iUUUlMUllD /comp tbw/rst | iiuuuuuuuir ІШШИШ1Ш1! іииииииіллл ПІШДШШМІ шшишлши ішшшшшіи ШШІШШШШ ппшшшшпг ШШІШЛИІ шшишмш 1 /comp tbw/start J—I /comp tbw/launch 1 . /comp_tbw/finish 1 _| /comp tbw/lower limit ')(010 /comp tbw/upper limit '1(015 /comp tbw/azimuth 000 [ODE lOOF (010 1011 [012 [013 І014 І015 І016 Ї017 I I Рисунок 7. Результаты моделирования в М^е^ш ХЕ III Таким образом, в ходе данной работы разработано программное обеспечение синтеза радиолокационного сигнала, предложена реализация блока синхронизации регистратора радиолокационного сигнала на языке УИБЬ и получены временные диаграммы его работы. ]]></text>
</doc>

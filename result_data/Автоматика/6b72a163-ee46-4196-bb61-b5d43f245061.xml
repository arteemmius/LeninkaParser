<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/testy-psevdosluchaynyh-posledovatelnostey-i-realizuyuschee-ih-programmnoe-sredstvo]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Вильданов Руслан Равилевич]]></item>
    <item type="str"><![CDATA[Мещеряков Роман Валерьевич]]></item>
    <item type="str"><![CDATA[Бондарчук Сергей Сергеевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Тесты псевдослучайных последовательностей и реализующее их программное средство]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ТЕСТИРОВАНИЕ ПСЕВДОСЛУЧАЙНЫХ ПОСЛЕДОВАТЕЛЬНОСТЕЙ]]></item>
    <item type="str"><![CDATA[ПРОГРАММНОЕ СРЕДСТВО]]></item>
    <item type="str"><![CDATA[D. KNUTH]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Статья посвящена методикам тестирования псевдослучайных последовательностей. Коротко описаны стандарты FIPS 140-2, NIST STS 800-22, набор статистических тестов Diehard, а также предложено программное средство для анализа и оценки качества псевдослучайных последовательностей.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Статья посвящена методикам тестирования псевдослучайных последовательностей. Коротко описаны стандарты FIPS 140-2, NIST STS 800-22, набор статистических тестов Diehard, а также предложено программное средство для анализа и оценки качества псевдослучайных последовательностей. Ключевые слова: тестирование псевдослучайных последовательностей, программное средство, FIPS 140-2, NIST STS, Diehard, ENT, D. Knuth, Practical Next Bit Test. Псевдослучайная последовательность (ПСП) - последовательность чисел, которая была вычислена по некоторому определенному арифметическому правилу, но имеет все свойства случайной последовательности чисел в рамках решаемой задачи [1]. Генераторы ПСП являются важнейшими элементами любой системы защиты, надежность последней в значительной степени определяется именно свойствами используемых генераторов. Качественные ПСП, являясь по своей сути детерминированными, обладают тем не менее практически всеми свойствами реализаций истинно случайных процессов и успешно заменяют их, так как случайные последовательности чрезвычайно сложно формировать. Тестирование генераторов случайных и псевдослучайных чисел (ГСЧ и ГПСЧ), используемых в криптографических приложениях, является актуальной задачей как в практическом, так и в теоретическом плане. Несмотря на значительные наработки в данной области, разработчики тем не менее нуждаются в удобном инструментарии, способном предоставить приемлемую метрику, которая позволит достаточно ясно исследовать степень случайности последовательностей, порождаемых ГСЧ (ГПСЧ), кроме того, обеспечить разработчиков достаточным объемом информации для принятия решения относительно «качества» генератора. На сегодняшний момент разработано достаточно большое количество различных типов ГСЧ (ГПСЧ). Однако для демонстрации их статистических свойств использовались различные подходы к статистическому тестированию. Чаще всего набор и методику тестирования предлагал сам разработчик генератора. Таким образом, сложилась ситуация, которая характеризуется тем, что невозможно объективно сравнить различные генераторы с единых позиций. Выходом из этого положения является использование некоторого стандартного набора статистических тестов, объединенных единой методикой расчета необходимых показателей эффективности ГПСЧ и принятия решения о случайности формируемых последовательностей. Многообразие критериев оценки псевдослучайных последовательностей, используемых при шифровании, чрезвычайно велико. Каждый из подходов к анализу таких последовательностей можно отнести к одной из двух групп. Первая группа связана с поиском закономерностей, позволяющих воспроизвести шифрующую последовательность по относительно небольшому количеству материала. При этом основные требования сводятся к тому, чтобы в ПСП отсутствовали относительно простые межзнаковые зависимости. Вторая группа критериев связана с оценкой статистических свойств последовательности: имеется ли в исследуемой последовательности какой-либо частотный дисбаланс, позволяющий аналитику предположить значение следующего бита с вероятностью, большей 0,5. При этом свойства ПСП должны быть наиболее близки к свойствам истинно случайной последовательности, например в ПСП равномерно распределены не только отдельные знаки, но и m-граммы, т.е. набор m соседних знаков, m=1,2,... . Обе эти группы методов анализа последовательностей составляют системный подход к разработке поточных шифров и тестов, предназначенных для выявления различного рода дефектов в исследуемых ПСП [2]. Обзор существующих методик тестирования В настоящее время для тестирования ПСП разработано несколько программных продуктов, которые содержат комплексы тестов для проверки различных статистических свойств. Рассмотрим некоторые из них. В США был сделан первый шаг к стандартизации набора статистических тестов путем принятия в 1994 г. национального стандарта «Требования безопасности к криптографическим модулям» [2]. Однако требования и методика стандарта больше носят технологический характер. Они направлены на решение задачи статистического контроля используемых в криптографических модулях псевдослучайных последовательностей и в общем случае малопригодны к решению задачи исследования статистических свойств ГПСЧ. Тесты Diehard - это набор статистических тестов для измерения качества набора случайных чисел. Они были разработаны Джорджем Марсалья в течение нескольких лет и впервые опубликованы в 1995 г. на CD-ROM, посвященном случайным числам. Вместе они рассматриваются как один из наиболее строгих существующих наборов тестов [3]. В 1999 г. специалистами NIST (Национальный институт стандартов и технологий (НИСТ) США), в рамках проекта AES (Advanced Encryption Standard) был разработан набор статистических тестов «NIST STS» (NIST Statistical Test Suite) и предложена методика проведения статистического тестирования ГСЧ (ГПСЧ), ориентированных на использование в задачах криптографической защиты информации, которая, на взгляд многих специалистов в данной области, на настоящий момент наилучшим образом отвечает потребностям всех заинтересованных сторон. Пакет NIST STS включает в себя 15 статистических тестов, которые разработаны для проверки гипотезы о случайности двоичных последовательностей произвольной длины, порождаемых ГСЧ или ГПСЧ. Все тесты направлены на выявление различных дефектов случайности. Основным принципом тестирования является проверка нулевой гипотезы H0, заключающейся в том, что тестируемая последовательность является случайной. Альтернативной гипотезой На - является гипотеза о том, что тестируемая последовательность не случайна. По результатам применения каждого теста нулевая гипотеза либо принимается, либо отвергается. Решение о том, будет ли заданная последовательность нулей и единиц случайной или нет, принимается по совокупности результатов всех тестов [4]. Описание разработанного программного средства В связи с массовым распространением многоядерных процессоров появилась возможность параллельной обработки данных. Для программирования многопоточных приложений на многопроцессорных системах с общей памятью существуют несколько инструментов, сравнительная характеристика которых приведена в табл. 1. Таблица 1 -_^Инструмент Критерий -— WinAPI POSIX boost STL Qt OpenMP Intel® Threading Building Blocks Кроссплатформенность - - + + + + + Встроенность + + - + - + - Усложнение программирования + + + + + - - Бесплатность + + + + + + - Наиболее эффективным инструментом параллелизма среди перечисленных является открытый стандарт для распараллеливания программ OpenMP (Open Multi-Processing) [5]. В сравнении с Intel® Threading Building Blocks OpenMP является наиболее предпочтительным выбором с точки зрения сложности программирования, т.к. в используемых алгоритмах преобладают операции обработки массивов [6]. При использовании инструмента параллелизма OpenMP, оптимизации кода программы и флагов компиляции общее время, затрачиваемое на тестирование последовательностей, уменьшилось в 5 раз по сравнению с оригинальным программным средством для тестирования последовательностей. В табл. 2 приведена оценка времени, затрачиваемого на тестирование последовательности длиной 16 Мб оригинального и разработанного программных средств. В разработанном программном средстве консолидированы, оптимизированы и распараллелены тесты NIST STS, Diehard, тесты Д. Кнута [7], тесты ENT [8], практический тест на следующий бит [9] и графические тесты (выполненные с использованием HTML5). Исходный код программного средства написан на языке высокого уровня C++ и компилируется с использованием GCC на ОС семейства Windows, GNU Linux, и POSIX-системах без изменения. Таблица 2 Сравнительная оценка времени, затрачиваемого на тестирование последовательности____ Тест Время обработки псевдослучайной последовательности, с Уменьшение времени обработки последовательности, раз Программное средство NIST STS Frequency 0,21 0,54 2,51 Block Frequency 0,07 0,65 9,32 Runs 0,13 2,47 18,98 Longest Runs Of Ones 0,11 1,44 12,78 Rank 1,04 18,87 18,06 Discrete Fourier Transform 113,16 146,53 1,29 Non Overlapping Template Matchings 39,13 430,49 11,00 Overlapping Template Matchings 0,25 14,60 58,83 Linear Complexity 83,66 651,27 7,78 Serial 16,09 85,60 5,32 Approximate Entropy 13,60 36,15 2,66 Cumulative Sums 0,50 1,87 3,72 Random Excursions Variant 2,07 10,39 5,03 Random Excursions 1,15 2,41 2,09 Universal 15,51 16,27 1,05 Общее время 286,69 1419,55 4,95 Исходный код разработанного программного средства может использоваться как библиотека и встраиваться в криптографические модули для самотестирования [10]. Работа выполнена в рамках проекта 7.701.2011 (проект 1/12) при поддержке Министерства образования и науки Российской Федерации. ]]></text>
</doc>

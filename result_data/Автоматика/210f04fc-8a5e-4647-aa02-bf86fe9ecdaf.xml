<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/eksperimentalnye-issledovaniya-integrirovannogo-algoritma-komponovki]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Полупанова Елена Евгеньевна]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Экспериментальные исследования интегрированного алгоритма компоновки]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ИНТЕГРИРОВАННЫЙ АЛГОРИТМ]]></item>
    <item type="str"><![CDATA[ГЕНЕТИЧЕСКИЕ ОПЕРАТОРЫ]]></item>
    <item type="str"><![CDATA[ЛОКАЛЬНОЕ УЛУЧШЕНИЕ]]></item>
    <item type="str"><![CDATA[АДАПТАЦИЯ]]></item>
    <item type="str"><![CDATA[ЭВРИСТИКИ ОТБОРА]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Приводятся результаты экспериментальных исследований разработанного интегрированного алгоритма решения задачи компоновки элементов СБИС на основе гиперграфовой модели. Предложенный интегрированный алгоритм компоновки позволяет повысить качество получаемых решений благодаря своей продуманной архитектуре, использованию различных эвристик, введению адаптивных элементов и новому методу создания стартового множества решений.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Приводятся результаты экспериментальных исследований разработанного интегрированного алгоритма решения задачи компоновки элементов СБИС на основе гиперграфо-вой модели. Предложенный интегрированный алгоритм компоновки позволяет повысить качество получаемых решений благодаря своей продуманной архитектуре, использованию различных эвристик, введению адаптивных элементов и новому методу создания стартового множества решений. Интегрированный алгоритм; генетические операторы; локальное улучшение; адаптация; эвристики отбора. * Работа выполнена при поддержке: РФФИ (грант № 10-01-00115), г/б № 2.1.2.1652. 96 E.E. Polupanova EXPERIMENTAL RESEARCHES OF THE INTEGRATED ALGORITHM OF CONFIGURATION The results of experimental researches of the developed integrated algorithm for a problem of configuration VLSI elements based on hyper-graph models are resulted in this work. Integrated algorithm of configuration allows to raise quality of received decisions due to its architecture, implementation of various heuristics, adaptive elements and a new method of starting set creation. The integrated algorithm; genetic operators; local improvement; adaptation; selection heuristics. Введение. Важнейшим этапом в многоуровневом процессе проектирования СБИС является компоновка блоков (элементов в блоки) с учётом требуемых критериев и ограничений. Данная задача решается посредством разбиения схемы, с последующим группированием компонентов в блоки. В результате разбиения формируется множество блоков и межсоединений между блоками [1-4]. К настоящему времени разработано большое количество алгоритмов разбиения: последовательные, итерационные, случайного поиска, на основе методов эволюционного моделирования, которые позволяют получать хорошие результаты за приемлемое время в задачах большой размерности [2-4]. Однако в силу того, что задача компоновки (разбиения) относится к классу NP-полных, сохраняется актуальность разработки новых эффективных алгоритмов, а также модификация уже имеющихся. Большинство генетических алгоритмов (ГА) используют стандартную архитектуру генетического поиска [2,3], далеко не всегда приводящую к желаемым результатам. В работах [5-6] был разработан интегрированный алгоритм компоновки (ИА), использующий стратегию поиска оптимальных решений. В данной работе приводятся результаты сравнения ИА, использующего блок оценки предварительной сходимости и некоторые способы выхода алгоритма из локальных оп-тимумов [8,9], и простого генетического алгоритма (ПГА) [2,3]. Особенности архитектуры интегрированного алгоритма. Разработанный ИА отличается от известных аналогов [2,3] динамически изменяющимися в ходе работы алгоритма параметрами, а также нестандартной архитектурой эволюционно-генетического поиска. Предложенный в работах [5-8] новый подход к организации процесса эволюционно-генетического поиска и выполнения генетических операторов (ГО), реализует более целенаправленный поиск оптимального решения. В основе предложенной методики поиска заложен принцип многократного применения генетических операторов к выбранной паре родителей за счёт адаптивных параметров с целью получения потомков лучше своих родителей в смысле целевой функции (ЦФ). Работа предложенного интегрированного алгоритма компоновки начинается с формирования стартовой популяции решений в генетической его части. Для генерации стартового множества решений используется алгоритм колонии пчёл (АВС-алгоритм), основанный на поведении пчёл в живой природе [8,9]. Далее начинается процесс генетического поиска - применяются генетические операторы, причём, за кратность выполнения ГО отвечает адаптивный параметр N. Немаловажное значение также оказывает и способ отбора решений, поэтому предложено использовать три различные эвристики отбора: Э1, Э2 и Э3, каждая из которых выполняется в соответствии с определёнными условиями [5-7]. Для преодоления предварительной сходимости предлагается использовать процедуру генетического «всплеска» [5], основная идея которой заключается в коррекции части популяции путём генерации случайного набора хромосом, после чего популяция обновляется на основе элитной селекции, которая способствует максималь- но быстрой сходимости за счёт манипулирования только особями, обладающими лучшей приспособленностью. Поскольку в результате элитной селекции происходит вырождение популяции, т.е. существует потенциальная опасность преждевременной сходимости, то применяется альтернативный метод, способный предотвратить эту возможность. То есть, в случае, если ИА не достигает локального оптимума, в процессе выполнения ГА, запускается эволюционная часть интегрированного алгоритма. Основной процедурой эволюционного алгоритма (ЭА), выполняемой на этом шаге является мутация отдельных особей, что также позволяет разнообразить генофонд популяции новыми решениями, и, как следствие, повысить вероятность нахождение глобального оптимума. В качестве процедуры отбора решений в новую популяцию здесь применяется, так называемый, вариативный метод [5], который позволяет сохранять достаточное генетическое разнообразие в популяции, т.е. в первую очередь в новую популяцию попадают наиболее приспособленные особи, а также особи с отличными от оптимальных значениями целевых функций. Результаты экспериментальных исследований. Эффективность интегрированных алгоритмов определяется тщательной настройкой их параметров. При произвольном выборе параметров эффективность алгоритма может быть как очень высокой, так и очень низкой, а его надёжность может лежать в приделах от нуля до ста процентов для одной и той же задачи. Поэтому в результате тщательной настройки параметров данного алгоритма удаётся повысить его эффективность и снизить при этом время работы. На основе статистических исследований были выбраны такие значения параметров переменных ИА, которые приводят к наиболее оптимальному решению тестовых задач. Сначала тестирование проводилось при всех возможных настройках алгоритма, далее оценка эффективности проводилась при наихудших и наилучших настройках генетических операторов для того, чтобы установить диапазон влияния вносимых изменений на качество работы. Эти изменения могут и не улучшать результаты алгоритма при наилучших настройках, но могут улучшать их при наихудших настройках. Так как алгоритм является стохастическим, то для каждой настройки алгоритма эксперименты проводились по десять прогонов с ограничением по числу итераций, равным ста. В качестве параметра эффективности использовался процент нахождения оптимума целевой функции относительно ПГА. Тестирование алгоритмов проводилось для десяти случайно сгенерированных гиперграфов с равным количеством вершин и гиперрёбер от 50 до 500. Вес всех вершин принимался равным нулю, т.е. фактически не учитывался, а вес всех гиперрёбер - единице. При этом гиперграфы «разбивались» на две части с равным количеством вершин. Приведём зависимость значений целевых функций от числа итераций для ПГА и ИА, показанную в табл. 1. Анализируя табличные результаты тестирования (см. табл. 1), можно сделать вывод, что для различных гиперграфов, увеличение наилучшей ЦФ составляет в среднем 7 %, при этом предложенный ИА находит оптимальное решение за меньшее число итераций, т.е. эффективнее на 15,3 %. Приведём зависимость времени работы алгоритмов от числа вершин для ПГА и ИА, показанную в табл. 2. Итак, из табл. 2 видно, что ИА уступает в быстродействии ПГА. Из чего можно сделать вывод, что там, где задача может быть решена специальными методами, почти всегда такие методы будут эффективнее по времени. Главным же преимуществом ИА является то, что они могут применяться на сложных задачах, там, где не су- ществует никаких специальных методов. Даже там, где хорошо работают существующие методики, можно достигнуть значительных улучшений сочетая их с ИА. Таблица 1 Зависимость значения ЦФ алгоритмов от числа итераций Гиперграф G=(X, Е) ПГА ИА Эффективность ИА отн-но ПГА №ср,),% Эффективность ИА отн-но ПГА (ЦФо.),% Мощ- ность вершин (|Х|) Мощ- ность гипер- рёбер (|Е|) № ите- рации. (NiqJ 1-е количество гиперрёбер в подграфах (Цф=,0 № ите- рации. (NuJ 1-е количество рёбер в подграфах (ЦФсрЗ 50 50 23.02 25,1 52 25,3 17,8 0,2 100 100 48,1 40,3 29,1 42,8 19,0 2,5 150 150 37,4 50,2 35,8 54,5 1,6 4,3 200 200 75,3 48,7 62,4 58,9 12,9 10,2 250 250 77,8 36,4 57,6 38,4 20,2 2,0 300 300 83,5 80,7 68,7 96,6 14,8 15,9 350 350 54,9 55,6 42,3 58,2 12,6 2,6 400 400 84,3 41,2 72,5 48,7 11,8 7,5 450 450 85,2 72,9 58,7 84,1 26,5 11,2 500 500 89,7 78,7 74,2 92,3 15,5 13,6 Т аблица 2 Зависимость времени работы алгоритмов от числа вершин Гиперграф G=^, Е) ПГА ИА Разница по времени ИА относительно ПГА, Д(^.ср.), с Мощность вершин (|Х|) Мощность гиперрёбер (|Е|) Время работы, (1ср.), с Время работы, (t,,,.), с 50 50 2,03 14,1 12,07 100 100 9,7 45,4 35,7 150 150 21,4 121,8 100,4 200 200 36,9 214,5 177,6 250 250 55,6 312,8 257,2 300 300 82,3 432,9 350,6 350 350 107,8 741,3 633,5 400 400 144,5 945,7 801,2 450 450 186,3 1188,2 1001,9 500 500 227,6 1234,6 1007 Заключение. Предложенный интегрированный алгоритм сочетает в себе два вида поиска: быстрый эволюционный и более медленный, но эффективный генетический. Применение нестандартной архитектуры эволюционно-генетического поиска позволило повысить степень устойчивости алгоритма к попаданию в точки локальных экстремумов и способность улучшать качество решений от поколения к поколению за приемлемое время. Кроме того, ИА получает оптимальные результаты за меньшее число итераций за счёт направленности эволюционно-генетического поиска. Таким образом, использование предложенного ИА позволяет повысить эффективность решения задач конструкторского проектирования САПР СБИС. ]]></text>
</doc>

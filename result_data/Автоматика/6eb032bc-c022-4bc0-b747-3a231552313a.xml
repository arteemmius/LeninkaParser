<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/algoritm-optimizatsii-parametrov-kompyuternoy-seti-dlya-umensheniya-vremeni-resheniya-zadachi-na-osnove-multiagentnoy-sistemy]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Литвиненко В.А.]]></item>
    <item type="str"><![CDATA[Ховансков С.А.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Алгоритм оптимизации параметров компьютерной сети для уменьшения времени решения задачи на основе мультиагентной системы]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Существует ряд задач требующих огромных вычислительных затрат и имеющих ограничения по времени решения. Решения таких задач выполняют на специализированной вычислительной системе, состоящей из нескольких центров об- [1]. Существует класс редко повторяемых задач. Создавать под каждую из них новую вычислительную систему не имеет смысла. Проще такие задачи решать на . -пользование для решения задач обычной компьютерной сети, состоящей из нескольких машин обменивающихся между собой пакетами данных по любой сетевой технологии [2]. Решение может быть осуществлено путем распределения ме- * Работа выполнена при поддержке РФФИ (гранты № 07-01-00511, № 06-01-00272) и программ развития научного потенциала высшей школы 2006-2008 гг. (РНП.2.1.2.3193, РНП 2.1.2.2238). жду несколькими компьютерами слабо связанных по данным вычислительных мо. Для организации вычисления весь вычислительный процесс задачи делят на вычислительные модули и задача представляется в виде графа, где вычислительные модули - вершины графа, маршруты передачи данных - связи между вершинами. Граф компьютерной сети совмещают с графом задачи. Выбирают компью- ( ), , - . сети, включающей различные компьютеры, носит случайный характер. Задача может быть решена на такой вычислительной системе, но время ее решения очень сильно зависит от полученного варианта случайного совмещения вершин графов задачи и сети, выполненного без учета производительности вершин графа сети и вычислительной сложности вершин графа задачи. При такой организации вычисления возникает трудность, связанная с тем, что компьютеры используемые для решения задачи могут иметь производительности на порядок отличающиеся друг от друга, т.к. любая сеть представляет собой множество компьютеров с различным аппаратным обеспечением. Это может значи- [2]. Созданная система может выполнить задачу и за приемлемое время, если структура системы на этапе подготовки к решению заранее оптимизирована по производительности за счет распределения вычислительных модулей между компьютерами с учетом их аппаратных особенностей и вычислительного объема вершин графа выполняемой задачи. Для оптимизации используют выделенный компьютер, который в этом случае является администратором процесса оптимизации структуры системы и управляющим всей системой в процессе выполнения задачи. Такой вариант имеет существенный недостаток - управляющий узел должен значительное время занимать канал связи между компьютерами, увеличивая общее время решения задачи. Предлагается другой подход, основанный на использовании быстро развивающегося в последнее время принципа коллективного принятия решения муль-тиагентной системой. Под мультиагентной системой понимается множество независимых программных объектов - агентов, каждый из которых работает по одному и тому же алгоритму. Для ее функционирования достаточно обычной компьютерной сети. Каждый агент располагается в отдельном узле сети входящем в организуемую вычислительную систему. Результатом коллективного принятия решения является сокращение времени решения системой задачи. В функции агента входит: ♦ контроль выполнения сво его вычислительного модуля; ♦ выполнение обмена управляющей информацией - передачу данных другим агентам, имеющими с ним связи согласно связям графа задачи. Существуют алгоритмы с использованием мультиагентной системы, которые выполняют оптимизацию на этапе подготовки системы к решению задачи. Оптимизация структуры для уменьшения времени выполнения осуществляется путем перебора пар агентов с целью переназначений между ними выполняемых модулей. При этом ведется поиск наиболее оптимального назначения каждому компьютеру сети своего вычислительного блока решения задачи [3]. Недостатком является увеличение общего времени решения. Требуемый при этом временной ресурс решение задачи оптимизации может увеличить на столько, что оно значительно превысит допустимый. Есть и еще немаловажный недостаток - низкая степень живучести создаваемой вычислительной системы, поскольку при выходе из строя одного из центров обработки данных в ходе решение задачи приводит к остановке процесса решения. На основе принципа принятия коллективного решения мультиагентной системой предлагается алгоритм оптимизации распределения вычислительных модулей между компьютерами системы позволяющий сократить время обработки данных при их прохождении через вычислительную систему. Его особенностью явля-, -средственно во время процесса решении задачи. Структура графа сложной задачи представляет собой совокупность подмножеств связанных вершин. Эти подмножества образуют структуру в несколько . Самый верхний уровень - вершина графа, получающая входные данные. Подмножества образуют узел самого высокого уровня и узлы нижнего уровня, которым передаются данные. Другие подмножества образует каждая вершина нижнего уровня связанными с ней вершинами более нижнего уровня и т.д. Самым нижним уровнем является вершина, передающая выходные данные. Работа в сети предполагает использование разделяемой среды передачи данных. В ней каждый компьютер соединяется со всеми другими, поэтому граф передачи данных между компьютерами по графу задачи является условным. Эта среда используется для получения данных, передача результатов обработанных данных, обмена данными между агентами в процессе обработки данных. Обмен данными включает в себя не только передачу обрабатываемых дан, . ( ). порциями между агентами передается вся информация. Обработку одного пакета данных можно считать одним шагом процесса обработки данных всей сетью. За счет передачи данных пакетами при обработке данные передаются от входного компьютера к выходному в пульсирующем режиме. В освободившейся от обработанных данных агент передается новая порция данных, идет следующий . , -. На каждом шаге компьютер передающего агента посылает обработанные данные компьютеру агента находящегося на более высоком уровне и обменивается с ним служебной информацией. Потом получает от компьютера агента более нижнего уровня данные и обменивается с ним служебной информацией. Обмен служебной информацией производится между агентами расположенными только на . С точки зрения агента расположенного на компьютере параметром является время обработки данных за один шаг и время передачи обработанных данных дру. , сколько от применяемой сетевой технологии. Поэтому основным параметром является время обработки пакета данных на . -метров компьютера и свойств программного обеспечения, а также от характера . выполнения тестовой задачи, либо получают требуемый параметр приближенно, опираясь на информацию об аппаратной части компьютера. Первый метод реализуется для задач имеющих упрощенный граф решения. Второй метод дает усредненный результат, очень часто расходящийся с дей. Критерием для оптимального назначения вычислительных блоков графа задачи обработки данных является минимальное время обработки одной порции данных всей системой. При выполнении сложной задачи начало обработки данных в каждой вершине графа начинается только тогда, когда будет выполнена передача из всех связанных с ней агентов нижнего уровня обработанных данных. Если это один агент, то обработка начинается сразу после получения данных и обмена служебной информацией, если их несколько, то обработка нового пакета начинается после приема данных от всех связанных с ним агентов. Тогда время начала обработки данных на компьютерах агентов текущего уровня будет считаться время приема последнего требуемого пакета данных и соответственно это будет время окончания обработки данных текущего шага гп,г на предыдущем нижнем уровне п. Аналогично на других уровнях. На графе задачи можно отметить несколько путей передачи и обработки данных от входного компьютера до выходного. Из них можно выделить тот путь передачи данных от агента самого нижнего уровня к агенту самого высокого уровня определяет время обработки данных всей вычислительной системой. Такой путь называется критическим путем: Ткр = шах(Тъ72,...,Т,...,Тк), где к - количество путей между входным агентом авх и выходным агентом аеш;. В предполагаемом алгоритме оптимизируется подбор назначения графа задачи на граф сети. Эту задачу можно разбить на ряд задач минимизации времени обработки данных на каждом уровне графа задачи О . Все множество вершин графа задачи разбивается на непересекающиеся подграфы (^1, g2, gз,..., gj) путем их раскраски. Для раскраски графа используются функциональные признаки вычислительных блоков. Агенты каждого подграфа обменивается информацией с агентом следующего . -жать разное количество агентов. Подграфы самого нижнего и самого верхнего уровней выполняют функции соответственно входного и выходного вычислитель. , О . Для уменьшения времени оптимизации назначения вычислительных блоков графа задачи на компьютеры графа сети Р процесс оптимизации распределяется . подграфе путем сокращения критического времени выполнения вычислительных блоков. Процесс выполняется во время обмена информацией между шагами обра-. При этом время, затрачиваемое агентами подграфа на оптимизацию, не зависит от мощности подграфа, что позволяет отвести под процесс оптимизации во всех подграфах фиксированный промежуток времени. При следующем обмене информацией между агентами соседних подграфов выполняется оптимизация между соседними подграфами, аналогичная оптимизации выполняемой в подграфах. Эти процессы оптимизации между агентами в подграфе многократно чередуется с оптимизацией между агентами в соседних подграфах. Они повторяются, поскольку по алгоритму процесс должен выполняться для каждой передаче данных между агентами вычислительных блоков на фоне выполняемой задачи. Время, затрачиваемое на оптимизацию, сводится к минимуму. Для оптимизации при обмене информацией между агентами соседних подграфов выполняется передача данных об оценках производительности компьютеров соседних подграфов. В эту информацию включаются все собранные данные о компьютерах других подграфов, что позволяет ускорить и улучшить процесс оп-. будет иметь информацию о всех компьютерах вычислительной сети. Количество необходимых шагов определяется формулой 0*2 +1, где О - количество уровней иерархической структуры графа О . Это количество шагов достаточно для поиска оптимального варианта назначения графа задачи на граф сети и уменьшения времени критического пути. . 1. Прием информации от агентов уровня п — 1. 2. Прием служебной информации от агентов уровня п +1. 3. . 4. Т . 5. Все варианты обмена использованы? Если «Да», то перейти к п.7, в противном случае перейти к п.6. 6. Передача служебной информации агентам уровня п — 1. 7. . 8. Обработка данных закончена? Если «Да», то перейти к п.9, если «нет», то перейти к п.7 9. Передача всей информации агентам уровня 7 +1. 10. .1. Повторение этого алгоритма оптимизации соответствия вершин графа задачи О компьютерам сети под управлением мультиагентной системой позволяет выполнять оптимизацию при любом первоначальном назначении графа О на сеть Р . . выполняется во время решения самой задачи, используя для этого реальные дан. Обмен информацией об оценках производительности компьютеров продолжается на всем протяжении решения основной задачи. Это позволяет повысить живучесть вычислительной системы, поскольку при выходе из строя компьютеров оптимизированной вычислительной системы, освободившиеся вычислительные блоки будут распределены между работоспособными компьютерами, а разработанный алгоритм оптимизации оптимизирует вычислительную систему с новой конфигурацией ]]></text>
</doc>

<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/razmeschenie-elementov-eva-s-primeneniem-veschestvennogo-kodirovaniya]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Лисовцова Анастасия Евгеньевна]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Размещение элементов ЭВА с применением вещественного кодирования]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ИМИТАЦИОННЫЙ АЛГОРИТМ]]></item>
    <item type="str"><![CDATA[ВЕЩЕСТВЕННОЕ КОДИРОВАНИЕ]]></item>
    <item type="str"><![CDATA[ОПЕРАТОР КРОССИНГОВЕРА НА ОСНОВЕ МЕТОДОВ ЛОКАЛЬНОГО ПОИСКА]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Одним из важных аспектов при проектировании и построении алгоритмов глобального поиска оптимальных решений является разработка эффективного способа кодирования, позволяющего сохранять разнообразие и гибко учитывать особенности распределения множества текущих решений в пространстве поиска. В статье предлагается такой подход к кодированию решений и построению генетических операторов на основе использования вещественного кодирования и методов локального поиска.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Одним из важных аспектов при проектировании и построении алгоритмов глобального поиска оптимальных решений является разработка эффективного способа кодирования, позволяющего сохранять разнообразие и гибко учитывать особенности распределения множества текущих решений в пространстве поиска. В статье предлагается такой подход к кодированию решений и построению генетических операторов на основе использования вещественного кодирования и методов локального поиска. Имитационный алгоритм; вещественное кодирование; оператор кроссинговера на основе методов локального поиска. A.E. Lisovcova PLACEMENT CELL EVA USING REAL CODING An important aspect of the memetic algorithm proposed is that it adaptively assigns different local search probabilities to individuals. It was observed that the algorithm adjusts the global local search balance according to the particularities of each problem instance. Memetic algorithms; real-coding; crossover hill climbing. Исходной информацией при решении задач размещения являются: данные о конфигурации и размерах коммутационного пространства, определяемые требованиями установки и крепления блоков; количество и геометрические размеры конструктивных элементов, подлежащих размещению; схема соединений, а также ряд ограничений на взаимное расположение отдельных элементов, учитывающих особенности разрабатываемой конструкции. Задача сводится к поиску для каждого размещаемого элемента таких позиций, при которых оптимизируется выбранный показатель качества и обеспечивается наиболее благоприятные условия для последующего монтажа. В зависимости от конструкции коммутационной платы и способов выполнения соединений расстояние между позициями установки элементов подсчитывается следующим образом: Задается множество конструктивных элементов К={гьг2,...,т} и множество связей между этими элементами У={уьу2,...,ур}, а также множество установочных мест (позиций) на коммутационной плате Т={1ь1:2,...Дк}. Найти такое отображение множества Я на множестве Т, которое обеспечивает экстремум целевой функции где Ojj - коэффициент взвешенной связности. При решении задачи размещения стараются оптимизировать результат. Во многих задачах оптимизации все чаще приходится встречаться с таким понятие как - неопределенность в отношении, какого - либо параметра, но не откладывать, же решение только из-за того, что данные задачи не определены. Для решения данной проблемы было разработано множество решений с помощью генетических алгоритмов - нечеткие генетические алгоритмы. Важной особенностью имитационных генетических алгоритмов является возможность гибкой настройки и динамического изменения управляющих параметров алгоритма. К таким параметрам можно, прежде всего, отнести значения вероятностей и критерии останова алгоритма. Это позволяет поддерживать динамический баланс в процессе поиска оптимальных решений и производить коррекцию значений вероятности с учетом особенностей решения каждого конкретного алгоритма. Наиболее известными алгоритмами такого рода являются алгоритмы, использующие вещественное кодирование решений и градиентные методы локального поиска. Также в таких алгоритмах в качестве инструмента выхода из локальных оптимумов используют генетические операторы и, прежде всего, оператор кроссинговера (Real-Coded memetic algorithms with crossover hill-climbing -RCMAs). Такое сочетание позволяет значительно повысить эффективность решения сложных задач оптимизации и проектирования. Можно привести примеры различных генетических операторов, используемых для повышения эффективности локального поиска при решении задач проектирования. Например, оператор неоднородной мутации, под воздействием которого решения в процессе выполнения алгоритма видоизменяются таким образом, dl =(Ъ + <Уг -yj)\ n n что на начальной стадии алгоритм осуществляет однородный поиск, а затем пытается улучшить найденные локально оптимальные решения. В простейшем случае ЯСМА используют методы локального поиска, прежде всего градиентные методы, которые позволяют легко находит локальные оптимумы. При построении генетического алгоритма методы локального поиска обычно применяются к популяции решений, полученной после выполнения операторов рекомбинации и мутации [1]. Оператор кроссинговера является основным механизмом поиска и создания новых решений в генетических алгоритмах. Применение вещественного кодирования решений при оптимизации и проектировании, позволяет строить множество различных специальных операторов поиска, использующих вероятностные критерии оценки разнообразия популяции решений и «близости» различных решений по отношению друг к другу, основанных на некоторой мере расстояния между родителями [2]. В качестве критериев «близости» решений могут быть использованы, например, расстояние Хэмминга или код Грея. Если родители расположены «близко» друг к другу - произведенное потомство, как правило, плотно распределено вокруг родителей, и наоборот. Поэтому, операторы кроссинговера необходимо подбирать в зависимости от разнообразия популяции, используя информацию об имеющихся решениях. Обычно, операторы кроссинговера применяются к парам хромосом-родителей, в результате чего получается пара решений-потомков, состоящих из частей родительских хромосом. Однако в последнее время предложено много различных модификаций операторов кроссинговера, использующих для рекомбинации три четыре и более хромосом-родителей. При этом число потомков также может быть неограниченным. В этом случае, используемая стратегия выбора решений для генетических операторов во многом определяет какие из них сохранятся и перейдут в новую популяцию. Одной их наиболее распространенных является элитная стратегия, которая отбирает лучшие решения на основе значений их целевой функции. Вещественное кодирование представляет собой аналог природного подхода для решения задач параметрической оптимизации с аналоговыми переменными, заданными в непрерывных областях допустимых значений. Хромосома представляет собой вектор чисел с плавающей запятой, размер которых является постоянным, так же как длина вектора, который и является решением. Генетический алгоритм, использующий решения на основе вещественного представления чисел, называется генетическим алгоритмом с вещественным кодированием [3]. Вещественное кодирование имитационного алгоритма с кроссинговером в основе Ь8 алгоритмов. Кроссинговер оператор рекомбинации, который применяется с некоторой вероятностью для комбинирования генов двух родительских подхромосом и создания новых дочерних подхромосом, таким образом, чтобы в подхромосоме не было дублирования. При этом свои действия он направляет в область поиска изначально выбранных родителей. Поэтому оператор кроссинговера может рассматриваться как оператор стратегии глобального поиска. Предлагается оператор кроссинговера, который является модификацией родительски-центрированного оператора кроссинговера (БЬХ или РВХ), предложенного Шелманом и Сшифером. Суть заключается в следующем. Пусть X = (XI..., хп) и У = (уь-.уп) (хьу! С [а15Ь;] с Й, 1=1...п) являются двумя хромосомами с вещественным кодированием, выбранные на основе некой страте- гии для выполнения оператора кроссинговера. В результате получаем потомков: Z1 = (211... 2^) или Z2 = (212... 2п2), где - произвольным образом вы- бранное число на интервале [111, и11], причем, /11 = тах{а1,х1 - 1*а} и и11 = ш1и{Ь1,х1 + I* а}, а 212 выбирается на интервале [112, и12] и /21 = шах{а1,у1 - 1*а} и и21 = ш1п{Ь1,у1 + I* а }, где I = [Х1 - У1]. Можно выделить следующие основные свойства такого оператора: ♦ Позволяет с большой вероятностью создать потомство, расположенное на области допустимых решений задачи достаточно близко к родителям. Проведенные исследования показали, что такой оператор представляет эффективный способ решения проблемы оптимизации вещественного параметра. ♦ Степень разнообразия популяции решений после применения оператора, можно легко изменять. ♦ Оператор позволяет количественно оценить разнообразие популяции и степень «близости» вновь полученных решений к родительским. Таким образом, использование данного оператора в RCGAs, дает возможность динамически, в процессе поиска оценивать возможности адаптации решений-потомков. Как известно, при использовании алгоритмов локального поиска (ЬБ), решение начинается с некой начальной точки. А затем на каждом шаге алгоритма согласно какому-либо правилу (например, на основе использования градиента) определяется направление дальнейшего движения. Оператор кроссинговера на основе глобального поиска (ХНС), многократно применяется к выбранной паре родительских решений, до тех пор, пока не будет получено заданное число п,^ потомков. После этого лучший из потомков заменяет худшего родителя, если это не приводит к ухудшению целевой функции. Процесс повторяется в течении п итераций, после чего в популяцию возвращают двух исключенных текущих родителей. Очевидно, что при выполнении такого оператора необходимо заранее задать значения пС££ и п1Ь и выбрать начальную пару родителей, (р1, р2). Предложенный оператор может быть использован при выполнении ЯСОА, поскольку для его реализации достаточно популяции минимального размера, то есть не менее двух хромосом. При этом за счет изменения правил отбора можно модифицировать данный оператор и преобразовать его в муль-тихромосомный. По результатам сравнения можно изменять текущую пару родителей в процессе выполнения оператора. При использовании решений с вещественным кодированием оценка качества решений производится на основе вероятности распределения популяции решений. Это позволяет регулировать процессы схождения и разнообразия решений в популяции. Большинство известных методов непрерывного локального поиска, таких как Солис и алгоритм Ветса и (1+1) - стратегия развития, используют явные параметры контроля (например, размер шага поиска). Кроме того, при этом могут использоваться механизмы, обеспечивающие изменение размера шага поиска, в зависимости от успешности предыдущих шагов. Это позволяет реализовать динамические принципы управления процессом поиска. Для решения задач оптимизации в непрерывных пространствах поиска очень важно обеспечить высокую точность результатов. Для решения этой задачи используют вещественное кодирование, которое соответствует месту решения в пространстве поиска. Это позволяет обеспечить плотность и глубину поиска до окончания работы алгоритма. Как правило, алгоритмы на основе вещественного кодирования используют локальные процедуры поиска оптимальных решений, такие как различные модификации метода градиента, которые могут найти только местные оптимумы. Использование при этом методов генетического поиска и генетических операторов дает возможность преодолеть этот недостаток. При этом достаточно просто обеспечить возможность адаптации и динамической настройки управляющих параметров алгоритма поиска. Вещественное кодирование решений позволяет также осуществлять самоадаптацию решений в соответствии со значениями вероятности распределения родителей без какого-либо вмешательства извне. В настоящее время предложен ряд операторов кроссинговера моделирующих адаптивное поведение, которое можем наблюдать при применении эволюционных стратегий и эволюционного программирования. Определяющим фактором для эволюции при этом является оценка удаленности между родителями в пространстве поиска. При моделировании процесса эволюции могут быть использованы различные модели эволюции: эволюция Ламарка, эволюция Дарвина и др. При использовании эволюции Ламарка приобретенные в ходе эволюции полезные свойства решений фиксируются в следующих поколениях. При использовании эволюции Дарвина решение о выживании текущих решений принимается на основе их целевой функции (принцип «выживания сильнейших»). Применяется также ряд гибридных методик и технологий организации процесса поиска, сочетающих достоинства локальных методов поиска и методов генетического поиска. К ним методикам относятся процедура минимального разрыва поколений (Minimal generation gap - MGG) и обобщения поколений (G3 - Generalized generation gap). Кратко идею процедуры обобщения поколений можно описать так: 1. Из популяции P(t) выбирается лучший родитель и другой (ц-1) родитель выбирается произвольно. 2. Создание потомства с использованием мультиродительского оператора кроссинговера. 3. Произвольный выбор двух элементов из популяции P(t). 4. Создание новой подпопуляции из выбранных двух элементов и полученных потомков, выбор двух лучших решений и замена элементов [4]. При этом, предлагается использовать следующую структурную схему, в которой взаимодействуют между собой созданная база знаний, введенные нечеткие данные и механизмы преобразования нечетких данных (рис. 1). Предполагается, что данная схема организации процесса поиска оптимальных решений при проектировании позволит повысить эффективность и качество получаемых решений при размещении элементов ЭВА. so База знаний База правил База данных Ввод нечетких данных Система Преобразование интерфейса нечетких данных Система контроля Рис. 1. Схема взаимодействия системы и вводимых данных ]]></text>
</doc>

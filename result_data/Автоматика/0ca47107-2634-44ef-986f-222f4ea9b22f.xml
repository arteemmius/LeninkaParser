<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/mnogoagentnaya-sistema-planirovaniya-i-sostavleniya-raspisaniy-razrabotka-raspredelennoy-bazy-znaniy]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Городецкий В.И.]]></item>
    <item type="str"><![CDATA[Карсаев О.В.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Многоагентная система планирования и составления расписаний: разработка распределенной базы знаний]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[Подход к разработке систем планирования и составления расписаний с использованием многоагентной технологии рассматривается специалистами в настоящее время как один из наиболее перспективных. В данной статье предлагается технология разработки такой системы с акцентом на разработку распределенной базы знаний, компонентами которой являются базы знаний интеллектуальных агентов. Знания агентов разделяются на формальные и эвристические. Формальные знания отвечают тем знаниям, которые задают ограничения задачи и другие компоненты задачи нормативного характера. Эвристические знания частично отражают субъективный опыт экспертов, а частично являются результатом анализа и обобщения их положительного и отрицательного опыта, получаемого на основе обучения системы по прецедентам. Формализация эвристических знаний накладывает дополнительные ограничения на возможные протоколы взаимодействия агентов, в основе которых рассматривается модель управляемого "аукциона". Основной проблемой разработки систем распределенного планирования является создание распределенной базы знаний и модели взаимодействия агентов, поддерживающей распределенное использование знаний в процессе работы системы. В статье рассматривается разработанная технология создания многоагентных систем планирования и составления расписаний, которая базируется на разработанном инструментальном средстве для поддержки процессов создания многоагентных систем. Это инструментальное средство позволяет значительно упростить и ускорить разработку конкретных приложений. Разработанная технология опробована путем создания прототипа многоагентной системы планирования и составления расписаний. Инструментальное средство тестируется на нескольких классах приложений, среди которых многоагентная система извлечения знаний из данных и многоагентная система защиты компьютерных сетей.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[. - ний с использованием многоагентной технологии рассматривается специалистами в настоящее время как один из наиболее перспективных. В данной статье предлагается технология разработки такой системы с акцентом на разработку распределенной базы знаний, компонентами которой являются базы знаний интеллектуальных агентов. Знания агентов разделяются на формальные и эвристические. Формальные знания отвечают тем знаниям, которые задают ограничения задачи и другие компоненты задачи нормативного характера. Эвристические знания частично отражают субъективный опыт экспертов, а частично являются результатом анализа и обобщения их положительного и отрицательного опыта, получаемого на основе обучения системы по прецедентам. Формализация эвристических знаний наклады- 1 Работа выполнена при поддержке РФФИ, грант №99-01-00733 вает дополнительные ограничения на возможные протоколы взаимодействия агентов, в основе которых рассматривается модель управляемого "аукциона". Основной проблемой разработки систем распределенного планирования является создание распределенной базы знаний и модели взаимодействия агентов, поддерживающей распределенное использование знаний в процессе работы системы. В статье рассматривается разработанная технология создания многоагентных систем планирования и составления расписаний, которая базируется на разработанном инструментальном средстве для поддержки процессов создания много. -стить и ускорить разработку конкретных приложений. Разработанная технология опробована путем создания прототипа многоагентной системы планирования и . , данных и многоагентная система защиты компьютерных сетей. 1. Введение. Значительное число практически важных прикладных задач сводится к комбинаторной постановке. Прежде всего, к ним относятся задачи, формальная постановка которых сводится к модели планирования и составления расписаний в условиях ограниченных ресурсов и ограничений реального времени. Такой модели соответствует широкий круг достаточно “традиционных” приложений, таких как планирование производства на уровне цеха, планирование обслуживания самолетов и пассажиров в аэропорту, планирование и оперативное управление обслуживанием судов в морском порту, планирование и составление расписаний включений бортовой аппаратуры космических аппаратов, решающих задачи наблюдения земной поверхности, и многие другие. В последнее время в связи с новыми тенденциями в области использования сетевых и информационных технологий в сфере бизнеса появились задачи, которые содержательно несходны с пере, . , , широкий круг задач под общим названием “задачи электронной коммерции”. Другими примерами являются задачи планирования поведения и управления торгами на рынке ценных бумаг, управление процессом создания так называемых “виртуальных предприятий”, управление бизнес-процессами широкого класса ряд других. 2. Постановка задачи, примеры. В настоящей статье рассматривается технология многоагентных систем, основанных на знаниях, и ее применение для распределенного решения различных прикладных задач планирования и составления . рассматривается как наиболее перспективная [1,4,6]. Причины этого достаточно . планирования и составления расписаний. Эффективно справиться с комбинаторной сложностью таких задач возможно только при использовании декомпозиции, распределенной технологии решения и при привлечении знаний. Такие возможности предоставляются сейчас только технологией многоагентных систем. В качестве приложений рассматривается класс задач планирования и составления расписаний выполнения взаимосвязанных работ в условиях ограничений , -тенциальных исполнителей работ. Предполагается, что каждая работа в свою очередь может состоять из множества операций и выполняться по различным сцена- риям с привлечением различных ресурсов. Содержательно задача формулируется как распределение множества контрактов ("портфеля контрактов") на выполнение работ между потенциальными исполнителями, которые называются далее "кон". . Планирование работ по обслуживанию судов в морском порту. В задаче предполагается, что порт имеет (заключает) контракты на обслуживание приходящих в него судов. В контрактах оговорены условия обслуживания судов: интервалы времени и сроки окончания обслуживания, общая стоимость ра, прочие условия. Исходные данные задачи - это портфель контрактов на некоторый календарный период планирования и состояние ресурсов порта в этот период. Суть решения задачи планирования сводится к выбору "контракторов" (причалов, компаний, структурных подразделений порта и т.п.) для выполнения работ по обслуживанию в заданные интервалы календарного времени. Выбор осуществляется в зависимости от ограничений, обусловленных условиями контрактов, характери, ( , , складирование груза и т.п.), возможностями контракторов выполнить необходимый объем работ и прочими обстоятельствами. Планирование наблюдений земной поверхности группой спутников. В этой задаче предполагается, что за определенный период времени необходимо выполнить наблюдения заданных районов земной поверхности. Задачи наблюдений могут сопровождаться такими ограничениями, как интервал времени, когда наблюдение должно быть произведено, вид и качество необходимой инфор-, , информации и др. В этом случае суть задачи планирования сводится к выбору , -стных задач наблюдения. Выбор при этом может зависеть от ограничений, обусловленных траекториями спутников, видом имеющейся на них аппаратуры, ограничениями на порядок ее использования и другими обстоятельствами. , -растеризуется прежде всего тем, что каждый агент принимает решения в условиях . достигается за счет переговоров. Переговоры ведутся по заранее определенным , . , . -дения переговоров исследовался рядом авторов [4, 6, 8, 9, 10, 12, 13]. Эти исследо-, -фективным средством при координации коллективного поведения агентов, и может использоваться при управлении процессом распределенного решения множеством агентов одной общей сложной задачи. Наиболее близкой моделью по отношению к той, что рассматривается в данной работе, является модель, предложенная в работе [8] Т. Сандхольмом. В модели Т. Сандхольма агентам-контракторам разрешено выполнять по несколько работ, которые агент в состоянии выполнять последовательно, а механизм управления аукционом базируется на минимизации агентами-контракторами своих расходов на выполнение работ (на решение задач). Однако содержательная модель, рассматриваемая в настоящей работе, отличается от модели Т. Сандхольма и других предложений по использованию рыночных механизмов для координации поведения агентов в нескольких отношениях. , задаче, в которой сложность обусловлена, прежде всего, наличием ограничений реального времени и ряда других ограничений. По этой причине в ней существенно возрастает роль интеллектуальных компонент, в частности, знаний и механиз- . работе постановке характеризуется многими показателями, что усложняет решение задачи упорядочения предложений агентов-контракторов и выбор победителя аук- . , управления, выполняемого мета-агентом, и роль этого управления достаточно значительна. Процесс распределения контрактов между потенциальными исполнителями рассматривается как процесс торгов, который описывается моделью многоагентной системы и реализуется как аукцион. Предметом торгов является множество контрактов-заявок на обслуживание (выполнение работ). Участниками торгов являются множество потенциальных исполнителей, каждому из которых ставится в - ( ). , , свою часть решения, а все решения вместе составляют искомый план. Владелец портфеля контрактов (аукционер) представляется в этом аукционе мета-агентом, который управляет аукционом с помощью имеющихся в его распоряжении механизмов координации решений, принимаемых АК. Аукцион в модели распределения портфеля контрактов может рассматриваться с двух сторон. С одной стороны, агенты могут на самом деле представлять , - , . (self-interested). С другой стороны, если решается задача планирования деятельности предприятия, то аукцион, разыгрываемый между его отдельными подразделе, , решений, полученных распределенным образом, для решения задачи централизо-. -тальные варианты выбора степени централизации - децентрализации процесса планирования деятельности. В данной работе делается акцент на решение задач второго типа, т.е. на распределенное решение задачи централизованного планирования. В этом контексте процедура аукциона рассматривается как генератор множества допустимых решений. Процесс решения задачи состоит в многократном повторении аукциона, адаптации его от итерации к итерации с целью получения лучших решений и выборе из множества сгенерированных допустимых решений наилучшего в заданном смысле. Эта содержательная модель поясняет используемую далее модель функционирования многоагентной системы планирования и составления расписаний. Излагаемый далее материал кратко представляет разработанную технологию создания модели и программной реализации многоагентных систем описанного выше класса. Эта технология поддерживается инструментальным средством, разработанным для этих целей. 3. Онтология ключевых понятий и уровни знаний в модели задачи планирования. Традиционный подход к проектированию программных систем в общем случае использует трехуровневую модель: структура данных - "бизнес-правила'' - интерфейс пользователя. Однако для рассматриваемого класса приложений и выбранной технологии разработки более целесообразно использование четырехуровневой модели задачи планирования (рис.1). Интерфейс пользователя Эвристические знания Формальные знания Онтология понятий Рис.1. Четырехуровневая модель задачи В этой модели первый уровень соответствует не "структуре данных", как это , , . Онтология понятий создает необходимый базис для формирования знаний из элементарных лексем и отношений, составляющих высказывания. Известно, что онтология понятий естественным образом определяет структуру соответствующей базы данных [2,5]. В используемом подходе это обстоятельство позволяет реализовать формальный алгоритм генерации базы данных на основе онтологии понятий. Именно поэтому на первом уровне целесообразно рассматривать модель онтологии понятий вместо структуры данных. - , , уровнями моделей формальных и эвристических знаний. Разделение знаний на два уровня отражает характерное для задачи планирования использование "объективных" и "субъективных" знаний. К "объективным знаниям" при таком делении относятся те, что соответствуют "нормативной", "регламентирующей" и прочей технической документации. В частности, ограничения на использование ресурсов являются характерным примером фрагмента объективных знаний. Фрагменты объективных знаний составляют знания, называемые формальными. Субъективные (эв) , , , . Разделение фрагментов знаний на два уровня естественно при проектировании систем планирования с использованием многоагентной модели. При этом формальные знания в большей мере определяют функциональные возможности агентов и базовые черты схемы их взаимодействия при решении прикладных за. поведения агентов и схем их взаимодействия. Для трех рассмотренных уровней модели задачи планирования, несмотря на их специфику в конкретном приложении, имеются общие черты, свойственные многим классам прикладных задач, в частности, для них являются общими ключевые (б^овые) понятия и постановки задач. На рис.2 приведен пример онтологии , . прикладной задачи может потребоваться введения новых понятий и уточнения тех классов понятий, которые уже имеются в онтологии, показанной на рис.2. "Уточнение классов понятий"- это, в первую очередь, определение их семантики в терминах атрибутов (свойств) классов объектов и их спецификации. Рис.2. Базовая онтология для задачи планирования Для формальных знаний ключевыми являются задачи формирования классов сценариев выполнения подзадач, определения ограничений на планы работ, обу, , , отдельных подзадач и функций, логически связанных с классами сценариев их выполнения и ограничениями. В частности, совокупность подобных задач и функций должна обеспечивать поиск допустимых планов. Эвристические знания имеют целью улучшить качество решения подзадач и задачи в целом, например, для избежания тупиковых вариантов поиска допустимых планов. В рассматриваемой модели эвристическим знаниям, например, соответствует та их часть, которая служит для управления аукционом, обеспечивающим координацию решений отдельных агентов [3,7,12]. Поясним кратко структуру онтологии, некоторые из понятий, составляющих онтологию, и связи между ними. Базовыми понятиями онтологии являются классы задач планирования, классы заданий, операции и ресурсы. Класс задачи (приложения) определяет конкретный сценарий или класс сценариев их выполнения. Последние должны описываться предметниками. Сценарии выполнения задач описываются в терминах отдельных классов заданий и порядка их исполнения. Классам , , . других заданий, более детальных, и в терминах операций. Таким образом, операциям и заданиям соответствуют различные уровни детальности описания сценари-. , , им сценариев исполнения. Основу описания таких сценариев составляют специфи-, , реализации. Над множеством ресурсов определяется система ограничений, задающая правила их использования. Класс исполнители используется для спецификации субъектов (и объектов) системы, выполняющих задания и операции. В соответствии с этим описание субъектов-исполнителей предполагает определение отношений между ними и операциями и ресурсами. Это отношение имеет семантику "исполнитель X обладает ресурсом R". В соответствии с этим каждому субъекту-исполнителю ставится в соответствие план использования ресурсов. Отношение - -ность выполнения субъектами-исполнителями соответствующих операций. Подобное отношение может вводиться также и для субъектов-исполнителей и классов , ресурсами. Забегая вперед, заметим, что наличие или отсутствие связи между - распределения знаний между классами агентов системы планирования. 4. Базовая архитектура многоагентной системы планирования и составления расписаний. Специфика классов агентов многоагентной системы (MAC) планирования и генерируемых на их основе программных агентов, кроме используемого фрагмента онтологии понятий предметной области, состоит также в использовании конкретных фрагментов знаний, относящихся ко второму и третьему уровням модели задачи планирования (рис.1). На рис.3 показан пример варианта () формирования распределенной базы знаний. Данный прототип, в основном, использует формальные знания. Именно поэтому он называется "б^овым". В сущно-, -дачи, если формальные знания обладают необходимой полнотой, а уровень сложности задачи планирования не очень большой. Экспериментальные оценки качества решения конкретных задач могут служить основой для вывода о необходимости использования эвристических знаний, которые привели бы к улучшению качества получаемых решений. Мета-агент системы планирования Модель управления Поддержка поведением *4 протоколов взаимодеиствия 1 г I Сценарии поведения агента * Общее управление процессом планирования » Управление аукционом • Управление формированием сценария выполнения задачи »Проведение «торгов» I Уточнение требований выполнения заданий ш. Базы знаний »Каталог классов задач ■ Сценарии выполнения класса задач А Библиотеки классов .Агент-контрактор системы планирования Модель управления Поддержка поведением М протоколов взаимодеиствия 1 Г I Сценарии поведения агента • Поиск вариантов (интервалов времени) выполнения задания * Модификация плана использования ресурсов •Утверждение плана ГГ Базы знаний • Модель ресурсов • Каталог классов заданий • Система ограничений • Сценарий выполнения класса заданий X • Сценарий выполнения операции класса У... Библиотеки классов Рис.3. Схема распределения формальных знаний в МАС планирования В разрабатываемом прототипе МАС планирования используются два класса агентов - мета-агент (МА), функции и поведение которого соответствуют задачам уровня «подраделений планирования», и агенты-контракторы (АК), функции и поведение которых соответствуют уровню конкретных субъектов (подразде-), . иных архитектур МАС можно найти в работах [3, 7]. Заметим, что разрабатываемый прототип соответствует первичной стадии итеративного процесса разработки приложения. На последующих стадиях как архитектура МАС в целом, так и содержание распределенной базы знаний могут итеративно развиваться. Разработка базового и последующих прототипов МАС поддерживается разработанной инст-, . В соответствии с принятой архитектурой для агента каждого класса (рис.3) разрабатываются пять взаимосвязанных между собой компонент. Компонента "Сценарии поведения агента" содержит совокупность всех сценариев поведения конкретного класса агентов. Процесс функционирования агента представляется в виде последовательности исполняемых им сценариев поведения. Порядок их исполнения определяется входными сообщениями и компонентой "Модели управления поведением". Сценарии поведения агента могут исполняться с привлечением компонент "Базы знаний" и "Библиотеки классов". Выбор необходимого сценария поведения агента на основании правил из "Модели управления поведением" зависит от текущего состояния буфера актуальных событий у агента, в котором могут находиться: ♦ сообщения, полученные от других агентов; ♦ события, сгенерированные самим агентом в предыдущие моменты времени; ♦ события окружающего мира; ♦ ко манды, сгенерированные пользователем системы. Кроме того, обработка текущего состояния при необходимости может включать в себя анализ предыстории поведения агента. За реализацию схем взаимодействия агента с прочими агентами системы отвечает компонента (5) "П^держка протоколов взаимодействия". Эта компонента, в частности, содержит (а) частично означенные шаблоны исходящих сообщений, окончательное означивание которых происходит позже в зависимости от текущих оперативных данных и принимаемых на их основе решений, и (б) сценарии диалогов обмена сообщений с другими аген-. Сценарий функционирования базового прототипа MAC планирования в общем виде таков. В процессе планирования MAC использует несколько сессий аукционов, в каждой из которых находится одно из допустимых решений. В результате находится несколько планов, из которых выбирается наилучший. Процессу планирования предшествует этап, на котором МА решает следующие задачи: ♦ извещает всех АК о начале процесса планирования и периоде планирования; ♦ классифицирует задачи планирован ия и выбирает соответствующие им сце- ; ♦ для выбранного списка сценариев ис полнения задач формирует полный перечень заданий Jobs. Эти задания далее распределяются для исполнения между АК в каждом аукционе. При решении этих задач (рис.3) задействуются сценарии поведения МА "общее управление процессом планирования" и та компонента "Базы знаний", которая называется «Каталог классов задач». На этом же этапе МА задает количество до, . Схема функционирования МА и АК в каждом аукционе2 такова. Пусть множество Jobs содержит список из N заданий. Тогда каждый аукцион состоит из последовательно выполняемых шагов, называемых "торгами", в каждом из которых МА распределяет одно задание из множества Jobs. Общее управление поведением МА в процессе аукциона выполняет сценарий поведения "Управление аукционом". Этот сценарий обеспечивает принятие таких решений: ♦ выбор последовательности вынесения заданий на "торги"; ♦ уточнение допустимого интервала в ремени исполнения очередного задания. Эта необходимость, как правило, возникает при торгах за второй и последующие задания в каждом аукционе; ♦ инициац ия сценария, управляющего "торгами"; ♦ . Схема взаимодействия МА и АК в ходе торгов такова (рис.4). МА сообщает всем АК выбранное задание. Получив это сообщение, каждый из АК пытается най" " . " - 2 Здесь и далее под аукционом понимается процедура, в которой распределяется весь пакет заданий, формирующих план. Шаг аукциона - это результат торгов за конкретное неделимое задание. антов выполнения задания" и, если необходимо, другие компоненты. Выбрав решение, АК сообщают их МА. Получив перечень предложений от АК, МА выбирает "победителя торгов". Это делается на основании некоторого критерия и своей Базы знаний (обычно, на основе ее эвристической компоненты). Выбрав победителя торгов, МА сообщает о принятом решении. АК, получив назначение на выполне-, -лицу использования ресурсов. Рис. 4. Схема диалога агентов в ходе торгов По окончании выбранного количества аукционов МА принимает окончательное решение. Допускается, что данный выбор осуществляется пользователем. Выбранный вариант плана сообщается всем АК, которые в соответствии с этим удаляют из своих баз данных другие (адьтернативные) решения. Описанный пример многоагентной технологии планирования приведен для пояснения принципа построения общей схемы архитектуры. На практике реализация технологии определяется конкретным приложением и может быть значительно . Описанный процесс разработки МАС планирования и ее распределенной базы знаний поддерживается разработанной инструментальной системой, описываемой кратко в следующем подразделе. 4. Инструментальное средство для разработки многоагентных систем планирования, основанных на знаниях. Технология р азработки МАС, основанной на знаниях, включает в себя несколько этапов, на каждом из которых выполняется генерация отдельных ее компонент, формирование архитектуры, настройка параметров, ввод знаний и данных, формирование "общего контекста" и т.д. По , -пам (рис.5). На первом из них выполняется генерация и настройка Ядра системы, которое играет роль модели разрабатываемой МАС. Ядро системы описывается на , -ботки МАС (ИСРМАС). Оно выполняет функции, подобные функциям реестра OS Windows. В частности, оно используется как эталонная модель МАС, если необхо- димо ее восстановление по каким-то причинам, или модификация. На втором этапе Ядро системы используется для генерации агентов МАС. Основной компонентой ИСРМАС является подсистема разработки модели распределенной базы знаний, центральной компоненты Ядра системы. Одна из важнейших функций модели распределенной базы знаний МАС, которая хранится в ядре системы, состоит в поддержании целостности знаний и данных. Яцро системы Типовой класс агента;! Типовой класс агента Б Типовой класс агентаJV _ _ _ ' - - - " - - - - - V - - - - - - - - - - - - - - - - - - - - - - - ’ Рис.5. Ядро системы. Инструментальная система для разработки MAC. Агент - , - понент, объединенных в рамках ИСРМАС. Кроме указанных компонент, в состав инструментальной системы входит инвариантная базовая система Generic agent ("Типовой агент мета-класс"). Она состоит из эталонной базы данных и библиотеки инвариантных функций. База данных используется для формирования распределенной базы знаний, а библиотека инвариантных функций позволяет реализовать , . Generic agent - , он представляет собой базовый класс, на основе которого далее формируются , . Специализация классов агентов сводится к конкретизации содержания (загрузке) Generic agent , , знаниями. Получаемые таким образом сущности называются "Типовыми классами агентов", далее для краткости называемые "Классами агентов". Классы агентов используются для генерации программных компонент, которые принято называть "программными агентами". При этом один класс агентов может быть использован для генерации нескольких программных агентов. Например, на рисунке 5 "классу агентов А" соответствует м ножество агентов: {A1, A2, A3}, а "тассу агентов" В -множество агентов {B1, B2}. Классы агентов являются базовыми понятиями компонент ядра системы, в то время как программные агенты являются элементами , ( ) ядра прикладной MAC. Первый этап является существенно более трудоемким и ответственным. По, . ♦ Клонирование Типовых классов агентов (именно они являются прототипами "будущих" программных" агентов) в соответствии с принятой архитектурой , -ния для конкретного приложения. В частности, для базового прототипа, описанного в предыдущем подразделе, формируются два класса агентов: класс мета-^ента системы планирования (МА) и класс агентов-контракторов (АК). ♦ Формирование общей онтоло гии понятий предметной области, описывающей модель конкретно решаемой задачи. В частности, на этом шаге выполняется развитие и уточнение базовой онтологии понятий, описанной в предыдущем . ♦ Определение фрагментов общей онтологии понятий, определяющих знания каждого из классов агентов, определенных на первом шаге. При этом одно и то же понятие из общей онтологии понятий может быть необходимо для формирования знаний разных классов агентов и тогда оно включается в несколько фрагментов онтологии. Основанием для соотнесения понятия классу агентов служит его роль в MAC. Каждое понятие задает структура хранения его конкретных экземпляров в базе данных класса агентов. При этом определяется спецификация функции интерпретации понятий в той же самой базе . ♦ Формирование баз знаний классов агентов, каждая из которых предполагает описание (1) совокупности сценариев поведения класса агентов, (2) общей модели управления поведением, (3) протоколов обработки получаемых сооб- (4) . ♦ Формирование отдельных фрагментов знаний в виде библиотеки программно реализуемых классов и процедур. Описанная выше последовательность шагов составляет содержание первого этапа разработки прикладной системы планирования. По существу, по окончании первого этапа должны быть сформированы основные компоненты модели приложения в терминах языка ИСРМАС. Эта модель и называется Ядром системы. Ее наиболее сложной и важной компонентой является распределенная база данных с привязкой ее компонент по классам программных агентов. На втором этапе на основании модели приложения - Ядра системы клонируются программные агенты, которые уже непосредственно играют роль компо-. , агента состоит в том, что производится копирование следующих компонент последнего в определенный директорий на указанном рабочем месте сети: ♦ Generic agent. ♦ Сформированной в Ядре приложения базы знаний выбранного класса аген- . ♦ Библиотеки программно реализован ных знаний для данного класса агентов, если таковая существует. Сгенерированные таким образом агенты образуют MAC планирования. 6. Заключение. В данной статье рассмотрена технология разработки многоагентных систем планирования и составления расписаний, основанных на знаниях. Для ее поддержки разработано специальное инструментальное средство, которое позволяет значительно упростить и ускорить процесс разработки таких систем. В первую очередь оно ориентировано на разработку систем распределенного планирования и составления расписаний. Одна их целей создания такого инструментального средства состоит в вовлечении в процесс разработки экспертов предметной области на понятном им языке. Процесс проектирования начинается с разработки онтологии понятий конкретной предметной области. Инструментальное средство уже содержит некоторые наиболее общие заготовки, в частности, по проблемной области, связанной с планированием и составлением расписаний. Например, оно содержит некоторые ключевые понятия онтологии, инвариантные для широкого класса систем планирования. Онтология понятий в свою очередь используется для разработки распределенной системы знаний. В состав компонент инструментального средства включена схема для представления распределенных знаний. Использование этого сред, , баз знаний при ее создании и модификации с целью развития. Разработанный прототип инструментального средства рассматривается как , . опробована путем создания прототипа многоагентной системы планирования и . нескольких других классах приложений, среди которых многоагентная система извлечения знаний из данных и многоагентная система защиты компьютерных се. Дальнейшее развитие рассмотренного подхода предполагает обогащение множества возможных схем представления распределенных знаний и накопление опыта по разработке онтологий как в области задач планирования и составления , . ]]></text>
</doc>

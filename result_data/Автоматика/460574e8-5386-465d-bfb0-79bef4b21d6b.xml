<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/sovremennye-promyshlennye-kontrollery-i-ih-programmirovanie-na-yazyke-funktsionalnyh-blokovyh-diagramm-fbd]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Лещёв Владимир Сергеевич]]></item>
    <item type="str"><![CDATA[Шилин Александр Анатольевич]]></item>
    <item type="str"><![CDATA[Светлаков Анатолий Антонович]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Современные промышленные контроллеры и их программирование на языке функциональных блоковых диаграмм FBD]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассматриваются примеры программирования на технологическом языке функциональных блоковых диаграмм (FBD) недорогих промышленных контроллеров. Разработаны алгоритмы автоматизации бытовых систем в частном жилом секторе.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Рассматриваются примеры программирования на технологическом языке функциональных блоковых диаграмм (FBD) недорогих промышленных контроллеров. Разработаны алгоритмы автоматизации бытовых систем в частном жилом секторе. Введение Современные системы автоматического регулирования создаются на базе программируемых микроконтроллеров, которые имеют широкие операционные возможности. Для таких контроллеров создано программное обеспечение, позволяющее инженерам-технологам разрабатывать и усовершенствовать алгоритмы управления на базе различных технологических языков. Наиболее понятным и популярным языком программирования является язык функциональных блоковых диаграмм FBD (Function Block Diagram) [1]. На соответствующем программном обеспечении (ПО) этот язык позволяет программировать различные алгоритмы управления на базе библиотеки функциональных блоков. Визуально такие программы имеют вид блок-схемы элементов (функциональных блоков, соединённых линиями связи), которая собирается в графическом редакторе на ПК. В результате такого программирования пользователь имеет возможность конфигурировать контроллер для выполнения различных задач автоматического регулирования. Контроллер в комплекте с блоком индикации и набором устройств ввода/вывода представляют полный пакет автоматизации технологического процесса. Созданные на базе программируемых логических контроллеров (ПЛК) системы автоматического регулирования повсеместно применяются в промышленности и сельском хозяйстве, но редко используются в частном жилом секторе, например, для автоматизации систем отопления и горячего водоснабжения. На первый взгляд, причина исключительно в высокой цене на весь пакет автоматизации. Но если внимательно изучить рынок производителей и разработчиков автоматизированных систем управления, то становится ясно, что ещё одно причиной, как это ни парадоксально звучит, является широкий спектр возможностей автоматики. Предлагаемое множество решений рассеивает внимание потребителя и не позволяет экономически выгодно и правильно подойти к решению, по сути, простой задачи. В различных печатных каталогах и Интернете можно найти несколько десятков российских производителей, предлагающих множество наименований своей продукции. Чаще всего предлагаются контроллеры, выполняющие узкоспециализированные задачи, то есть пользователь не имеет возможности программировать собственные алгоритмы управления. А что, если необходимо изменить алгоритм? Добавить, например, датчик аварии или таймер переключения двигателей. Не забывайте и о стоимости новой разработки, контроллера, расширительных блоков и другого дополнительного оборудования. Цена вопроса составит не менее 100 тыс. руб. В данном случае наиболее оправдано для потребителя будет приобретение программируемого контроллера и ПО, то есть программы редактирования алгоритма управления на функциональных блоках. На рынке ПЛК наиболее известны контроллеры типа МС8, ПЛК 150 и МСХ 4-1. В данной статье рассматривается ещё один контроллер отечественного производства типа ВЭСТ и программный комплекс АКИАР, который позволяет создавать, изменять и усовершенствовать алгоритмы управления, а так же является экономически выгодным решением простейших задач автоматизации процессов теплопот-ребления в частном жилом секторе. Пример решения задачи автоматизации Рассмотрим решение задачи автоматизации на конкретном примере. В данном случае это будет система отопления частного жилого дома. Отопление и горячая вода в доме поддерживаются за счёт газового бытового отопительного котла. Для управления газовой горелкой такие котлы, как правило, имеют собственную автоматику. Задачей нашей автоматики является создание комфортной температуры в помещениях отапливаемого дома за счёт автоматического поддержания заданной температуры теплоносителя в трубопроводе. Обычно регулирование расхода теплоносителя на выходе отопительного котла осуществляется трёх-позидионным регулирующим клапаном. Клапан в комплекте с электрическим приводом стоит достаточно дорого. Предлагается использовать дешевый двухпозиционный запорный клапан, подобный тому, что используется в стиральных машинах. Схема включения регулирующего комплекса и технологического оборудования представлена на рис. 1. Составим алгоритм управления такой системой на функциональных блоках в графическом редакторе программного комплекса АКИАР (рис. 2). Измеренная температура обратной воды «Темп.обр» сравнивается с заданным значением «Зад.Тоб» с учётом зоны гистерезиса «Гистерез» (заданное значение 5 °С). Если Темп.обр > (Зад.Тоб + Гистерез), то клапан выключается. Если Темп.обр < Зад.Тоб, то клапан включается, осуществляется подача теплоносителя. Температура обратной воды измеряется с заданным временем инерционного запаздывания «Вр.демп» (заданное значение 2000 с). [Управление двухпозиционным клапаном Рис. 2. Блок-схема управления клапаном Погодное регулирование Создан регулятор, который поддерживает температуру теплоносителя в обратном трубопроводе в соответствии с заданным значением. Однако этого недостаточно для качественного поддержания комфортной температуры в помещении. Необходимо учитывать температуру воздуха на улице. Зависимость заданной температуры обратной воды от температуры внешнего воздуха «Тем.вн» представлена в виде температурного графика (рис. 3) и формируется по формуле (1): Зад.Тоб = (20 - Тем.вн) Компенс. + Темп.20С (1) Формируем данную зависимость на функциональных блоках (рис. 4). Полученное по графику значение «Зад.Тоб» является заданным для измеренной температуры «Темп.обр» (см. рис. 2). Рис. 3. Температурный график График зависимости темп.обр от внеш.температуры Рис. 4. Блок-схема формирования заданной температуры обратной воды по температурному графику Часовая компенсация Погодное автоматическое регулирование позволяет потребителю существенно экономить как на потреблении тепла системой, так и на потреблении газа котлом. Теперь системой отопления потребляется столько тепла, сколько необходимо для создания комфортной температуры в помещении, и жильцам нет необходимости вручную открывать/закрывать батареи, форточки, окна. Для большей экономии тепла можно далее модернизировать алгоритм, введя значение компенсации заданной температуры по времени суток. Например, зачем отапливать дом днём, когда жильцы на работе? С помощью алгоритма компенсации можно ежедневно понижать температуру теплоносителя в дневные часы на заданное значение, например 10 °С. На рис. 5 представлен алгоритм часовой компенсации, реализованный на функциональных блоках. Часовая компенсация Рис. 5. Блок-схема часовой компенсации Компенсирующее воздействие осуществляется в промежутке времени между заданным временем начала «Нач.комп» и временем конца «Кон.комп» компенсации. Значение компенсации «Знач.ком» суммируется с заданным значением температуры обратной воды, полученной по температурному графику (см. рис. 4 и 5). Если собрать все разработанные выше схемы в одну, то получается программа автоматического поддержания температуры обратной воды в системе отопления, разработанная на языке ИЗБ. При необходимости созданный алгоритм управления можно имитировать в режиме реального времени с помощью программы моделирования программного комплекса АКИАР, то есть получить визуальное представление о поведение объекта управления в виде графиков и исключить ошибки, возможно допущенные при программировании. Далее программа компилируется и экспортируется в виде сценария непосредственно в микропроцессор регулятора. Все операции производятся на ПК. Структурная схема АКИАР представлена на рис. 6. Стоит отметить, что представленные схемы и методы их разработки наглядно показывают, что пользователь может программировать регулятор в соответствии со своими идеями и требованиями. Графический редактор Программа моделирования Scriptprocessor г-1 -ь. Регулятор Л- ВЭСТ Рис. 6. Структурная схема АКИАР Новые возможности Рассмотрим технические возможности регулятора типа ВЭСТ-01М-ХХ.Х по количеству входов и выходов. Эта модификация регулятора имеет 6 цифровых выходов (реле типа «сухой контакт») и 8 аналоговых входов [2]. На рис. 7 представлена монтажная схема подключений измерительных датчиков температуры и клапана для регулятора типа ВЭСТ-01М-ХХ.Х. 20 22 23 2i 25 26 21 2в 29 30 31 32 33 34 35 36 Автоматический регулятор "ВЭСТ-01М-ХХ.Х" <s. а> £ 5 a a a a a a "3 Я! s ОС n •ъ n t) ■о * £ 0N0\ <£ 4 QS <•> о S 5 CD CQ »1 C3 3 <o 1 § 5 03 S. H § 1 2 3 i 5 6 7 8 9 10 11 12 13 и IS 16 17 18 Фаза -о -2208 Ноль Рис. 7. Схема подключений регулятора ВЭСТ-01М-ХХ.Х: ¿1 — датчик температуры внешнего воздуха (ТСП); <2 — датчик температуры приточного воздуха (ТСП); М1 — клапан Для автоматизации данной системы отопления были использованы только два входа Analog input (Ai.O и Ai.l) и один выход Digital out (Do.O). Соответственно пользователь имеет возможность задействовать неиспользованные входы и выходы под другие бытовые системы, например для поддержания температуры воздуха в сауне с помощью электронагревателя. Предположим, что имеется сауна, внутри которой необходимо нагревать воздух до заданной температуры. Регулирование осуществляется двумя электронагревательными элементами (ТЭН) разной мощности по четырёхступенчатой схеме: I ступень — выключены оба ТЭНа; II ступень - включен первый ТЭН малой мощности; III ступень - включен второй ТЭН большой мощности; IV ступень - включены оба ТЭНа, то есть достигается наибольшая мощность нагрева. Составим алгоритма управления таким электронагревателем (рис. 8). 'Управление электронагревателей Рис. 8. Блок-схема управления электронагревателем Алгоритм работает следующим образом. Заданная температура воздуха «Зад.Твз» сравнивается с измеренной температурой «Тем.возд». Ошибка накапливается на блоке интегрирования «Integr». Если накопленная ошибка переходит характерные точки (постоянные «20», «40», «60»), то включается соответствующая ступень нагрева. Если значение ошибки меньше 20, то оба ТЭНа выключены; от 20 до 40 — включен первый ТЭН, от 40 до 60 — включен второй ТЭН, больше 60 - включены оба ТЭНа. Так же на схеме представлены два блока «Arch», которые предназначены для архивации значений переменных соответственно температуры воздуха и ошибки «Ошибка». Всего блоков архивации может быть не более шести на одной схеме. Данные записываются в энергонезависимую память регулятора. Таким образом, задействованы ещё один вход (Ai.2) и два выхода (Do.l), (Do.2). В итоге на одной блок-схеме созданы два алгоритма систем автоматического регулирования температуры отопления и воздуха в сауне. Оставшиеся свободные входы/выходы можно использовать для автоматизации, например, теплицы. Необходимо поддерживать заданную температуру воздуха внутри теплицы, управлять электронагревателем и вентилятором, включать полив в заданное время суток. С учётом рассмотренных выше схем пользователю не составит труда самостоятельно разработать алгоритм управления. Заключение В заключение отметим, цель данной статьи показать, что отечественный производитель предлагает на современном рынке автоматизации недорогие контроллеры, программируемые на технологических языках, в частности языке функциональных блоковых диаграмм. Главное достоинство этого языка в том, что он понятен и предназначен, прежде всего, для инженеров-технологов, а не программистов. Программирование на языке FBD рассмотрено на базе графического редактора программного комплекса АКИАР и автоматического регулятора типа ВЭСТ. Отметим, что логический интерфейс данного регулятора поддерживает стандартный протокол ModBus [3], поэтому регулятор можно использовать совместно с известными SCADA-системами. ]]></text>
</doc>

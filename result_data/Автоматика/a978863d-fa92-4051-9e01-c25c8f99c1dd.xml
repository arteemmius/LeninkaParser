<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/razrabotka-servernyh-elementov-upravleniya-web-servisov-pds-rasshireniy-i-web-prilozheniy-dlya-rasshireniya-vozmozhnostey-microsoft]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Хаджинов А.А.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Разработка серверных элементов управления, Web-сервисов, PDS-расширений и Web-приложений для расширения возможностей Microsoft Project Server 2003]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Современное сложное производство, решение ряда коммерческих задач, разработка информационных систем, экономические исследования, открытие новых филиалов не возможно представить без четкого планирования. На каждом этапе руководители, ответственные исполнители, менеджеры подразделений должны иметь возможность доступа к информации о динамике развития процессов и сведениям о текущем состоянии дел. Именно поэтому менеджмент проектов и постоянный контроль хода выполнения отдельных частей проекта являются одними из актуальнейших задач управления. Постоянный рост требований к гибкости и максимуму функциональных возможностей информационных систем управления проектами приводит к повышению спроса на эти продукты в данном секторе рынка программного обеспечения и, следовательно, побуждает разработчиков к новым идеям и рождает новые предложения. Известные решения по ведению проектов, такие как Automation Center, Business Engine , OpenPlan, PlanView, , Niku, Artemis, Spider Project, Microsoft Project характеризуются мощными механизмами управления проектными данными, гибкими функциями расчетов, удобными интерфейсами управления. Однако наряду с многочисленными достоинствами известных систем в каждой из них имеются различного рода ограничения по функциональным возможностям. На сегодняшний день наиболее распространенными, простыми в обращении и удобными в работе решениями для управления проектами являются предложения компании Microsoft в виде сервера проектных данных Project Server 2003, программного приложения Project Professional 2003 и Web-системы Project Web Access [1]. Встроенные в Microsoft Project Server 2003 сервисы доступа к данным проектов (Project Data Service, PDS) являются достаточно гибкими для решения общих задач планирования. В тоже время для различных специфических процессов и задач (возможностей планирования с многоуровневой иерархической структурой, функций делегирования и назначения, предоставления сложных выборок проектных данных, предоставления компонент разработки собственных приложений для управления проектами) зачастую возникают необходимости расширения возможностей имеющихся в PDS возможностей. В рассматриваемой работе исследуются разносторонние подходы и решения для расширения возможностей сервера проектных данных Microsoft Project Server 2003, повышающих эффективность и производительность совместной работы пользователей, программистов и руководителей проектных команд за счет использования разработанных программных дополнений в виде традиционных (классических) PDS-расширений, Web-сервисов доступа к данным, серверных элементов управления и Web-приложений. Традиционные (классические) PDS-расширения представляют собой специализированные программные модули, встраиваемые в расширяемую архитектуру Microsoft Project Server 2003. PDS-расширения позволяют программно реализовать новые функциональные возможности, не предусмотренные в сервере проектных данных. В Microsoft Project Server 2003 может быть интегрировано до 200 PDS-расширений. Механизм работы PDS-расширений следующий. Если при обработке запроса выясняется, что в PDS нет соответствующей функции выбора проектных данных, сервер обращается к первому расширению. Если первое расширение поддерживает запрашиваемый функционал - выполняется текущий запрос и результат возвращается сначала PDS, а затем на сторону клиента; в противном случае выполняется вызов следующего расширения. В случае, когда ни одно из расширений не поддерживает требуемые функции выборки проектных данных, в PDS возвращается сообщение о невозможности обработки запроса и клиенту генерируется сообщение об ошибке. Web-сервисы являются на сегодняшний день одним из наиболее распространенных способов взаимодействия гетерогенных систем [4]. Применение Web-сервисов для передачи проектных данных РББ-расширениям, серверным элементам управления и Web-приложениям обусловлено универсальностью используемых сервисами протоколов и стандартов. Разработанные Web-сервисы доступа к проектным данным на стороне сервера выполняют Web-методы, анализирующие и выбирающие данные о состояниях проектов по определенным (достаточно сложным) сценариям. Полученные из таблиц Microsoft SQL Server 2000 данные о проектах сериализуются в XML-поток и передаются на сторону клиента [2]. На стороне клиента данные могут использоваться без десериализации. Данные о состоянии выполнения проектов могут быть загружены в серверные элементы управления, использоваться для формирования результатов работы PDS-расширений, отображаться в Web-приложениях. Схема работы Web-сервисов доступа к проектным данным Серверные элементы управления, реализующие в своей основе функциональные возможности для отображения проектных данных в виде диаграмм хода выполнения проекта (диаграмм Ганта), используют интерфейсы взаимодействия с новой платформой Microsoft .NET Framework. Создаваемые элементы управления являются интегрируемыми в панель компонент Microsoft Visual Studio .NET, поддерживают необходимый набор свойств и методов для управления визуализацией, используют для отображения данных о проектах различные типы источников (XML, Binary-потоки). Возможности серверных элементов управления позволяют генерировать на стороне клиента необходимые для удобной работы JavaScript-сценарии, сохранять собственные сведения о состоянии визуального отображения, учитывать особенности хранения проектных данных в виде XML-островов (XML-Island). Использование серверных элементов управления существенно упрощает процесс разработки Web-приложений, снижает затраты команд разработчиков, повышает их производительность, позволяет специалистам по информационным технологиям сосредоточиться на решении собственных задач и устраняет необходимость вдаваться в особенности проектирования компонент и механизмов передачи данных между клиентской и серверной стороной. Разработка серверного элемента управления в Visual Studio .NET 2003 Web-интерфейсы позволяют выполнять децентрализованное и удаленное взаимодействие между подразделениями предприятий, филиалы которых территориально расположены вдали друг от друга. В Microsoft Project Server 2003 имеется соответствующий Web-интерфейс для решения задач удаленного взаимодействия с сервером проектных данных - Microsoft Project Web Access, но зачастую возникают ситуации, когда механизмов Web Access бывает недостаточно для обеспечения всех необходимых функциональных возможностей совместной удаленной работы сотрудников и руководителей. Создание Web-приложений, дополняющих интерфейс Web Access, позволяет преодолеть возникающие ограничения [3]. Web-приложения управления проектными данными могут работать как независимо от Web Access с помощью механизма Web-форм [5], так и дополнять его функциональные возможности. TProjectGrid I Data ± Validation TProjectGrid + Navigation .MET Component + Login + WebParts + HTML - General ^ Pointer Пример интеграции разработанного серверного элемента управления (TProjectGrid) в Visual Web Developer 2005 Express Edition Постоянно растущие требования к возможностям систем управления проектов и эволюция прикладных приложений развивают интерес специалистов по информационным технологиям и руководителей проектных команд к этой предметной области и выявляют новые мотивы для создания более совершенных программных расширений, поиска новых возможностей и идей для достижения поставленных целей и получения новых результатов [6]. ]]></text>
</doc>

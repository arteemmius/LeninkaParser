<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/klasternaya-obrabotka-produktsionnyh-pravil-v-baze-znaniy-intellektualnyh-sapr]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Родзина Ольга Николаевна]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Кластерная обработка продукционных правил в базе знаний интеллектуальных САПР]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ПАРАЛЛЕЛЬНЫЕ ВЫЧИСЛЕНИЯ]]></item>
    <item type="str"><![CDATA[КЛАСТЕР]]></item>
    <item type="str"><![CDATA[СЕТЬ ПЕТРИ]]></item>
    <item type="str"><![CDATA[ПРОДУКЦИОННЫЕ ПРАВИЛА]]></item>
    <item type="str"><![CDATA[БАЗА ЗНАНИЙ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[В статье рассматриваются вопросы организация параллелизма на уровне продукционных правил представления знаний в интеллектуальных САПР. Формулируются утверждения, необходимые для получения списка параллельно выполняемых правил. Оценивается выигрыш во времени при параллельной работе эвристических алгоритмов поиска. Эксперименты проводились с использованием кластера HP BladeSystem c-класса.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[В статье рассматриваются вопросы организация параллелизма на уровне продукционных правил представления знаний в интеллектуальных САПР. Формулируются утвер-, . выигрыш во времени при параллельной работе эвристических алгоритмов поиска. Эксперименты проводились с использованием кластера HP BladeSystem c-macca. Параллельные вычисления; кластер; сеть Петри; продукционные правила; база знаний. O.N. Rodzina CLUSTER PRODUCTION HANDLING OF KNOWLEDGE OF INTELLIGENT CAD The article deals with the organization of parallelism at the level of production of knowledge representation in intelligent CAD systems. Formulated approval necessary to obtain a list of * Работа выполнена при поддержке: РФФИ (грант № 08-01-00473), г/б № 1.04.01, г/б № 2.1.2.1652.. parallel executed rules. Estimated gains over time in parallel heuristic search algorithm. Experiments were carried out using a cluster of HP BladeSystem c-Class. Parallel computation; cluster; Petri net; production rules; knowledge base. Введение. Создание многоядерныx структур процессоров, недорогих кластерных решений на основе стандартных компонентов, массовое использование распределенных вычислений отражают тенденцию к параллелизму в различных . , допускающие возможность распараллеливания по нескольким процессорным элементам или компьютерам [1]. В интеллектуальных САПР для решения задач синтеза и оптимизации проектных решений применяются алгоритмы и методы, которые, обладая хорошей , , . -лораспространенных спецпроцессоров ограничивает круг пользователей, поэтому широкое применение находят параллельные вычисления на кластерных конфигу-. , и обработку проектных решений, по-видимому, альтернативы использованию параллельных вычислений не существует. Исследуем подробнее возможности организации параллельных вычислений и параллельной обработки проектных решений на основе кластерных конфигураций для широко применяемых в интеллектуальных САПР баз знаний, построенных по типу продукционных правил. Исследование проводилось с использованием кластера HP BladeSystem c-класса, приобретенного в ТТИ ЮФУ в рамках программы развития университета. Общая характеристика кластера. Кластерные решения являются одной из движущих сил высокопроизводительных распределенных вычислений благодаря своей гибкости и высокой производительности. В частности, HP BladeSystem c-класса относится к системам, обладающим большими вычислительными возможностями, и включает множество специально разработанных технологий: обеспечение многократной масштабируемости и возможность быстрой адаптации инфраструктуры под изменяющиеся запросы приложений, адекватная производитель, , . -является плотность компоновки серверной инфраструктуры, не влияющая на про. Что такое блейд-сервер? Блейд-сервер представляет собой компактную сер, . -цессорами, памятью и сетевыми интерфейсами. Шасси позволяет серверам использовать общие сетевые подключения, систему охлаждения и источники питания. В , - HP и не требуют значительных затрат времени на конфигурирование и выполнение различных рутинных задач, стоящих перед системным администратором. Архитек- - , , , . В серверную полку блейд-системы можно установить до 8 блейд-серверов полной высоты с четырьмя жесткими дисками SFF SAS/SATA с возможностью горячей 12 . двух процессоров Intel Xeon или до четырех процессоров AMD Opteron или до двух процессоров Intel Itanium 2. Плотная упаковка блейд-серверов позволяет сократить объемы, занимаемые вычислительной системой, для поддержания стабильной работы применяется эффективная система питания и охлаждения. Для подключения к блейд-системе сети хранения данных или локальной сети на серверной полки имеются отсеки для установки различных опций коммутации с SAN и сетевой коммутации. Модули коммутации устанавливаются в отсеки попарно для повышения отказоустойчивости, то есть каждый коммутационный контроллер сервера одновременно соединен с двумя соседними модулями. Дополнительные сетевые контроллеры поддерживают кроме множества сетевых стандартов и протоколов (IEEE 802.1p, 802.1Q, 802.3, 802.3ad, and 802.3x), также различные механизмы для снижения нагрузки на центральный процессор при передаче и обработки данных. SAN -контроллеры мезонинного типа (Emulex LPe 1105-HP 4Gb FC HBA, QLogic QMH2462 4Gb FC HBA) обеспечивают работу по протоколу Fiber Channel 4 / , - пологии SAN-сети и работу с системами хранения различных производителей. Комплексная система управления включает в себя HP System Insight Manager (SIM), ProLiant Essentials , конфигурацию и интегрируют удаленное управление, управление энергопотреблением, мониторинг и управление виртуальными машинами, быстрое разворачивание операционных систем, а также их обновление и контроль безопасности. Пропускная способность канала между PCI Expansion Blade и блейд<ервером равна x4. В случае грамотного развертывания кластеры на базе блейд-серверов могут быть значительно более гибкими и управляемыми, нежели суперкомпьютеры. С прикладной точки зрения высокопроизводительные блейд-серверы могут исполь-, -ния проектных решений, представления и обработки правил проектирования и т.д. Выигрыш во времени, получаемый при использовании распараллеливания работы эвристических алгоритмов поиска. Обозначим через S(P) относительный выигрыш по времени, получаемый при различных вариантах распараллеливания работы эвристических алгоритмов поиска проектных решений в интел; N(P) , P течение одного цикла работы алгоритма. Величину S(P) можно оценивать по-р^ному. Например, как отношение величины N(1)/1 (среднее число узлов, сгенерированных на однопроцессорной машине ) N(P)/P ( , P ): S(P) = [N(1)/1] / [N(P)/P] = P*N(1)/N(P) = Sb (1) (1) - . CG(P) . S(P) = Cg(1)/Cg(P) = N(1)/Cg(P). (2) Пусть tG - время простоя на однопроцессорной машине, требуемое в течение , TL(P) - , - сирования загрузки на P процессорах. Тогда S(P) = [Cg(1) tG]/[CG(P) ■ (tG + Tl(P)/Cg(P))]. (3) 4, 8 16 , что относительный выигрыш во времени лежать в диапазоне от 2/3 до 3/4, причем максимальный выигрыш достигается при использовании алгоритма поиска в глу- бину и процедуры «жадного» перераспределения при динамической балансировке загрузки процессоров. Организация параллелизма на уровне представления знаний о проект. представления знаний [2]. Удобной структурной моделью для описания асинхронных параллельных недетерминированных процессов и систем продукционного типа является сеть Петри, которая содержит два типа вершин (позиции и переходы, изображаемые кружками и полочками соответственно), соединяемых дугами. Статически модель сети задается двудольным орграфом; ее исходное состояние - начальной маркировкой , -, -ровки к другой посредством срабатываний переходов. Каждый антецедент и последовательность высказываний можно представить позициями и переходами. Как организовать параллелизм при продукционном представлении знаний? В продукционном программировании система включает множество правил, рабочую память и интерпретатор правил. Правила, содержащие антецедент и консек-вент, выполняются последовательно. Понятно, что эффективность работы системы может быть улучшена при параллельной обработке правил. Однако не все правила можно обрабатывать параллельно. Например, два правила, в которых элементы антецедента одного совпадают с элементами консеквента другого, не могут вы. - , . Пусть Ы и Ш соответственно антецедент и консеквент некоторого правила вывода РШ. Если они имеют общие элементы К1, то К = Ы п Ш. (4) Тогда справедливы следующие утверждения. Утверждение 1. Если консеквент правила РЯ1 имеет с правилом РЯ2 общие , Я1 п (Я2 \ К2) Ф 0, (5) то правило РЯ1 является зависимым по выходу от правила РИ2. Утверждение 2. Если антецедент правила РЯ1 имеет с правилом РЯ2 общие , Ы п (Ь2 \ К2) Ф 0, (6) то правило РЯ1 является зависящим по входу от правила РИ2. Утверждение 3. Если для двух правил РЯ1 и РИ2 К1 п К2 Ф 0, (7) то правила являются взаимосвязанными. Утверждение 4. Если антецедент правила РЯ1 имеет с правилом РЯ2 общие , Ь1 п (Я2 \ К2) Ф 0, (8) то правило РЯ1 является зависящим по входу-выходу от правила РЯ2. Утверждение 5. Если консеквент правила РЯ1 имеет с правилом РЯ2 общие , Я1 п (Ь2 \ К2) Ф 0, (9) P = PR1 - PR2. Утверждение 6. Правило PR1 совместимо с правилом PR2, если оно не зависит от него ни по входу, ни по выходу-входу. Утверждение 7. Два правила PR1 и PR2 можно выполнять параллельно, если они являются совместимыми. С учетом этих утверждений нетрудно получить списки параллельно выполняемых правил продукционной системы, составив матрицу параллелизма: P = I I pij II nxn , где pij = 0, если правило PRi совместимо с правилом PRj; ptj = 1 в противном случае. Эта матрица обладает следующим свойством: если ptj = pjt = 0, то правила PRi и PRj являются взаимно совместимыми. Используя это свойство матрицы нетрудно определить максимальный набор совместимых правил. Пусть, например, продукционная система включает 6 правил, а матрица параллелизма для них имеет следующий вид: ^1 0 1 0 0 0' 0 110 10 1110 10 0 0 0 1 1 0 0 11111 0 0 0 0 0 1 Тогда списки совместимых правил имеют вид: S1 = {PR3, PR4, PR6}, S2 = {PR1, PR2, PR4, PR6}, S3 = {PR1, PR5}. Совместимые правила можно параллельно обрабатывать на различных про. Заключение. Параллельная обработка представленных в базе знаний интеллектуальной САПР продукционных правил, описывающих проектные решения, -это эффективный способ решения трудных задач автоматизации проектирования. Рассмотренные в статье вопросы организации параллелизма на уровне представления знаний о проектных решениях и предлагаемые решения позволяют предположить, что возможен выигрыш во времени, получаемый при использовании распараллеливания работы эвристических правил и алгоритмов проектирования, выпол-. Перспективным направлением дальнейших работ в данной области исследования является разработка технологии проектирования высокопроизводительных , -странение в качестве средств внутренней интеллектуализации САПР. ]]></text>
</doc>

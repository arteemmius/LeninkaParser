<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/algoritm-trassirovki-v-kommutatsionnom-bloke]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Кныш Д.С.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Алгоритм трассировки в коммутационном блоке]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[АЛГОРИТМ]]></item>
    <item type="str"><![CDATA[ТРАССИРОВКА]]></item>
    <item type="str"><![CDATA[ПАРАЗИТНАЯ ЕМКОСТЬ]]></item>
    <item type="str"><![CDATA[ТОПОЛОГИЯ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Разработан алгоритм трассировки цепей различной ширины в коммутационном блоке, который применяется для создания начальной популяции в генетическом алгоритме. Алгоритм позволяет создавать разнообразные решения для конкретной топологии коммутационного блока. Алгоритм позволяет выдерживать заданный интервал между цепями, что обеспечивает возможность задания таких параметров как паразитная емкость и перекрестные наводки на этапе трассировки, а так же учитывает ширину цепей. Алгоритм представляет собой бессеточный, поэтапномодернизирующий топологии цепей метод двухслойной, зарезервированной трассировки.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Постановка задачи трассировки цепей коммутационного блока в СБИС. В классической постановке коммутационный блок представляет собой область, ограниченную с четырех сторон линейками контактов (терминалов) различных цепей. Задача трассировки в блоке состоит в проведении участков трасс одноименных цепей при заданных конструкторских и технологических ограничениях. Основными ограничениями являются ширина проводников, минимально допустимый интервал между цепями и фиксированный размер коммутационного блока. Терми- * Работа выполнена при поддержке РФФИ (грант № 07-01-00174). налы в коммутационном блоке при двухслойной трассировки могут располагаться следующим образом [3]: ♦ терминалы досту пны в обоих слоях; ♦ терминалы верхней и нижней лине ек контактов доступны на одном слое, а терминалы правой и левой линеек контактов доступны на втором слое. Разработанный алгоритм применяется для решения каналов СБИС со следующими критериями: количество выводов для одной цепи - от 2 до n (где n - ), пользователем для каждой цепи отдельно, выводы цепей расположены на границах блока, сквозные переходные отверстия, двухслойная модель трассировки. Модель трассировки может быть основана на назначении вертикальных и горизонтальных фрагментов в различные слои. Такие модели применимы только для . - , . тип фрагмента предназначен для определенного слоя, такая модель называется . . В двухслойной трассировке, если в первом слое располагаются вертикальные фрагменты, а во втором горизонтальные, то такая модель называется VH моделью (Vertical-Horizontal model). Задача трассировки цепей коммутационного блока состоит в проведении электрических соединений между заданными терминалами сети внутри области , , соединений и интервал между ними. Для оценки качества результатов трассировки используются три критерия оптимизации: ♦ Межслойная емкость. Между проводниками печатной платы, находящимися на разных слоях, возникает емкостная связь, когда они пересекаются. Проводники, находящиеся друг над другом на смежных слоях, создают длинный пленочный конденсатор. Поэтому важно уменьшить паразитную емкость: F1 = Y.C, • (1) i=1 В формуле (1) F1 определяет суммарную паразитную емкость проводников . Ci - , , - (2), n - : C = 0,0085* Er * — , (2) d где Er - диэлектрическая постоянная, А - площадь перекрытия, d - расстояние . ♦ Число межслойных иереходов.Введение межслойного перехода между двумя слоями приводит к увеличению времени процесса и ухудшению . , можно меньшего количества переходов из слоя в слой: NumVia F2 = Yj Viai . (3) i=1 (3) F2 - реходов. Viai - обозначает i-межслойный переход, i=[1, NumVia]. ♦ Суммарная длина межсоединений. Наименьшая длина цепи обеспечивает наименьшую задержку распространения сигнала. При этом необходимо учитывать ширину цепей, так как прохождение одной и той же цепи в различном месте может иметь различную суммарную длину: NumNet F3 = ^ LenghtNetj, (4) 1=1 где Б3 равен сумме длин проводников всех цепей в канале (4); Ье^ИШе^ - определяет длину проводников цепи 1, где 1 меняется в периоде от 1 до количества цепей Мит№1 Описание алгоритма трассировки. Для создания начал ьной популяции используется разработанный алгоритм, в основе которого лежит принцип поэтапной модификации и размещения цепей [2, 4]. Первоначально для каждой цепи формируется начальная трассировочная структура на основе следующего алгоритма: 1. Т, = {^ t2,..., }. 2. узлов У1 = {у1,у2,...,у .}, которые являются точками пересечения продолжений координат х и у терминалов. 3. . 4. Выбирается из множества дополнительных узлов У] наименее удаленный от всех терминалов узел у, заносится этот узел в список основных узлов Уосн . 5. Случайным образом выбирается терминал tj из множества Т1, и соединяется с узлом у}- прямым или Ь-образным участком цепи. 6. Исключается терминал tj из списка не рассмотренных Ti = Т1 \ t.. 7. Случайным образом выбирается терминал t', формируем временный список опорных узлов У (точки пересечения продолжений координат ху терминала с уже существующими трассами) и добавляем в него узлы из Ужн . 8. Выбирается из У ближайший узел ук и соединяется с терминалом прямым или Ь-образным участком цепи, добавляются новые опорные узлы в Уосн . 9. Если рассмотрены все терминалы, то переход к п. 10, в противном случае - . 7. 10. Если рассмотрены все цепи то переход к п. 11, в противном случае - . 3. 11. . Для цепи №1 результат работы алгоритма показан на рис. 1. Если цепь содержит терминалы расположенные только на противоположных , -го/горизонтального столба Штейнера [5]. После создания трассировочной структуры каждой цепи приступаем к этапу ее размещения в коммутационном блоке с соблюдением ограничений. Одним из ограничений является необходимость выдержать заданный интервал между цепя- . (Vertical-Horizontal - ). . 2. Рис. 1. Окончательно решение для цепи №1 Модификация цепі' =1— _____iZZ Размещение цепі' CZD Рис. 2. Структурная схема алгоритма размещения цепей Модификация цепи продолжается до тех пор, пока цепь нельзя будет разместить на коммутационном блоке. Модификация осуществляется следующим образом: 1. , . 2. . 3. . После перемещения участка трассы могут возникать различные ситуации (циклы, накладывание цепей, появление «потерянных» участков) [2], которые надо учитывать. Преимущество этого метода в том, что перемещается не весь участок , . - мутационного блока, если для перемещаемого участка трассы невозможно найти . Результаты исследования работы алгоритма. Для анализа качества реше- , генетического алгоритма на 30 итерации. Как видно из табл. 1 решения полученные алгоритмом довольно разнообразны. Но качество решений на 18-25% хуже, чем у генетического алгоритма (табл. 2). Целевая функция (ЦФ) рассчитывается как аддитивная свертка трех критериев, и измеряется в условных единицах. Г рафик зависимости средней ЦФ от числа выводов в коммутационном блоке для работы алгоритма представлен на рис. 3. Для сравнения на нем отображена степенная функция и средняя ЦФ для решений созданных генетическим алгоритмом. Анализируя затраченное время на генерацию решений (рис. 4), получим, что временная сложность алгоритма пропорциональна 0(М2). 1 Зависимость ЦФ решений, полученных разработанным алгоритмом, от числа выводов в коммутационном блоке Серия опытов Число выводов в коммутационном блоке 16 20 24 28 32 ЦФ Время, с ЦФ Время, с ЦФ Время, с ЦФ Время, с ЦФ Время, с 1 18,76 0,19 30,92 0,63 29,45 0,56 43,9 1,12 53,55 0,39 2 19,09 0,27 24,9 0,36 30,23 0,55 71,45 3,01 56,34 0,64 3 15,13 0,16 36,32 0,79 30,45 0,50 38,13 1,31 49,37 0,50 4 16,08 0,24 40,95 0,95 31,28 0,63 83,14 3,90 72,19 1,09 5 17,18 0,25 26,46 0,55 34,58 0,55 45,84 1,72 54,43 0,67 с 2 <ъ е | 1 15,13 0,16 24,9 0,36 29,45 0,56 38,13 1,31 49,37 0,50 2 Время работы разработанного алгоритма Число выводов ЦФ (разработанный алгоритм) ЦФ(ГА) Улучшение ЦФ, % Время раб. (разработанный алгоритм), с 16 15,13 12,15 19,7 0,16 20 24,9 20,39 18,11 0,36 24 29,45 23,09 21,6 0,56 28 38,13 31,09 18,5 1,31 32 49,37 37,07 25 0,50 тайного и генетического алгоритмов Чтисло выводов | Алгоритм ген. Нач. реш. Степенная функция | Рис. 4. Зависимость времени работы разработанного алгоритма от числа выводов Заключение. Данный алгоритм за счет большого числа вариантов трансформации исходной топологии цепей, дает возможность генерировать разнообразные решения, что делает его очень удобным для использования в качестве алгоритма генерации начального решения в генетических алгоритмах. Временная сложность алгоритма составляет O(n2). Из преимуществ алгоритма можно выделить следующие: ♦ учет ши рины цепей; ♦ соблюдение заданного интервала между цепями; ♦ возможность решен ия задачи трассировки, как в коммутационном блоке, так и в канале; ♦ . При определенных модификациях данный алгоритм может учитывать различные физические эффекты, что при современных темпах развития технологий позволит сократить время проектирования электронных изделий и повысить их . ]]></text>
</doc>

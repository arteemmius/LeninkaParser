<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/ispolzovanie-gipermetoda-razrabotki-metodov-sozdaniya-prototipov-na-primere-postroeniya-strukturno-nezavisimyh-baz-dannyh]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Рогозов Юрий Иванович]]></item>
    <item type="str"><![CDATA[Свиридов Александр Славьевич]]></item>
    <item type="str"><![CDATA[Липко Юлия Юрьевна]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Использование гиперметода разработки методов создания прототипов на примере построения структурно-независимых баз данных]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ЖИЗНЕННЫЙ ЦИКЛ]]></item>
    <item type="str"><![CDATA[ЭТАПЫ ЖИЗНЕННОГО ЦИКЛА]]></item>
    <item type="str"><![CDATA[БАЗА ДАННЫХ]]></item>
    <item type="str"><![CDATA[СТРУКТУРА ДАННЫХ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Представлен пример использования гиперметода для разработки метода создания структурно-независимой базы данных. Показан процесс синтеза метода с учетом общей мотивации проекта, рассмотрено разбиение общей мотивации на составляющие, которое определяют мотивацию метода по созданию БД. Показан процесс синтеза метода, который при реализации даст возможность получить БД со статической структурой.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Представлен пример использования гиперметода для разработки метода создания структурно-независимой базы данных. Показан прогресс синтеза метода с учетом общей мотивации проекта, рассмотрено разбиение общей мотивации на составляющие, которое определяют мотивацию метода по созданию БД. Показан прогресс синтеза метода, который при реализации даст возможность получить БД со статической структурой. Жизненный цикл; этапы жизненного цикла; база данных; структура данных. Yu.I. Rogozov, A.C. Sviridov, Yu.Yu. Lipko DEVELOPMENT OF METHOD OF USE HYPERMETHOD PROTOTYPING FOR CONSTRUCTING STRUCTURAL-INDEPENDENT DATABASE The example of the use HyperMethod to develop methods of creating a structurally independent of the database are presented. The process of synthesis method with the overall motivation of the project are shown, a partition of the overall motivation for the components that determine the motivation of the method to create a database considered. Synthesis of method, which, in the implementation, will provide an opportunity to get a database with a static structure showed. Lifecycle; lifecycle phases; database; data structures. . указывает на то, что универсального метода не существует [1]. Каждый удачный метод разработки прототипа объекта можно применять для конкретного проекта и использование для других проектов в большинстве случаев не целесообразно [1]. Если существуют удачные проекты в целом или отдельные их этапы в частности, то методы их выполнения, очевидно, являются реализацией более глобального метода (гиперметода), позволяющей генерировать эти методы. Рассматриваемый гиперметод [2] позволяет генерировать методы формирования структуры жизненного цикла (ЖЦ) под конкретный проект, а также методы реализации отдельных этапов. При формировании методов учитывается общая , . -ся на принципе детализации, который применяется для детализации мотивации, требований и содержательного образа на фазы, этапы и детали, а также используется при последовательной детализации содержания каждого этапа разработки. Г иперметод. Кратко опишем идею гиперметода: вначале определяется мотивация решения определенной проблемы. Затем определяются требования к объекту и его образ, который позволит реализовать эту мотивацию. Мотивация, требования и образ детализируются на две составляющие. Первая часть, касающаяся процесса успешного создания прототипа объекта (науку об управлении проектами, жизненным циклом и т.п.), и вторая - содержательной реализации прототипа объ-( ) ( ). Гиперметод позволяет разработать методы двух типов [2]. Первый разрабатывает методы построения ЖЦ процесса создания прототипа конкретного объекта; второй разрабатывает методы реализации этапов ЖЦ. Причем для каждого объекта, в зависимости от мотивации, будут разрабатываться свои конкретные методы, а не использоваться известные удачные проектные решения. Такой персональный подход позволит любой проект создания прототипа объекта считать удачным, а методы, применяемые для его реализации, полностью адаптированными к данному проекту. Реализация первой составляющей гиперметода выполняется в несколько шагов, соответствующих логике построения любой модели ЖЦ [3]: ♦ Разбиение всего жизненного цикла проекта на детальные элементы (фазы, ), -ли проекта и мотивации участников. Создается идеальный описательный образ и определяется мотивация проекта, которая характеризуется набо-. анализа требований и целевого образа. Формируется мотивация каждой группы участников построения этого образа. Мотивация каждой группы участников определяет фазу ЖЦ, причем, мотивация разных фаз может совершенно не совпадать. Мотивация каждой фазы характеризуется пара, . ♦ Каждая фаза детал изируется на этапы. Мотивация этапа характеризирует-ся определенным параметром Р; (описывающим конкретное требование). Количество параметров этапов должно в полном объеме характеризовать требованиям фазы: Мф; = Б(Р1, Р2, ...), где Р; - параметр, характеризующий мотивацию i. Детализация мотивации фазы выполняется до тех пор, пока не будет получен такой набор мотиваций этапов, который будет покрывать мотивацию фазы (рис. 1). ФІ 1.1 1.2 ФІІ 2.1 Мф12 2.2 МФ1 = ^ МФИ , ¿=1 1.3 .. 1Ь= (1) 1.4 1.5 + Мф 2.3 2.4 2.5 Мф Рис. 1. Детализация мотивации фазы Формирование ЖЦ создания прототипа объекта. Для этого мотивации этапов каждой фазы располагаются в определенной последовательности. Последовательность определяется параметрами, характеризующими общую мотивацию и требованиями создания прототипа системы. Необходимо выбирать те параметры этапов каждой фазы, которые совпадают с параметрами общей мотивации и требований создания прототипа. Последовательность соединения этапов определяется формальным описанием общей мотивации создания прототипа объекта, включающего в себя пара- ( . 2). Рис. 2. Пример последовательности соединения этапов ♦ Интеграция элементов последовательности фаз (этапов) между собой на основе формальных или неформальных правил и процедур. Из предполагаемого метода следует, что для каждого конкретного случая мы будем получать персональный ЖЦ создания прототипа объекта. Вторая составляющая гиперметода определяет метод выполнения каждого ( ) , , - чается в применении принципов детализации, формализации и интеграции к выделенным фазам ЖЦ: ♦ Детализация этапа выполняе тся на основе мотивации этапа, которая характеризуется определенными параметрами: ♦ Мэ; = Б(ЭЬ Э2, ... Э;). ( . 4). мотивация деталей этапа ЖЦ характеризуется определенным параметром (Д;). Необходимо детализировать мотивацию этапа ЖЦ до таких деталей. Пока совокупность мотиваций деталей Б(Дь Д2, ... ДО не будет адекватна мотивациям этапов: Б(Эь Э2, ... Э;) = ВД, Д2, ... Д). ♦ ( ;) . может потребовать дополнительной детализации каждой мотивации детали до получения параметров мотиваций связей (О) деталей и параметров связи (СО мотиваций этапов всего ЖЦ (рис. 3). 2.1.1 2.1.2 2.1.3 Рис. 3. Детализация мотивации этапа ЖЦ до мотиваций деталей ♦ Реализация мо тиваций деталей, этапов и прототипа объекта. Каждый параметр мотиваций деталей представляется в виде набора реальных компонентов (шаблонов, паттернов), из которых по формальным и неформальным правилам собирается (интегрируется) прототип объекта. Возможны три варианта построения прототипа объекта: ♦ с помощью участников - специалистов по реализации соответствующих этапов; ♦ автоматизировано; ♦ ( ). В первом случае интеграция мотивации деталей и этапов выполняется с помощью участников создания прототипа объекта. Во втором случае - с помощью известных или вновь разрабатываемых САБЕ-средств. В третьем случае мы должны формализовать интеграцию деталей и этапов ЖЦ. Пример использования гиперметода для синтеза метода построения . -го из этапов фазы проектирования - проектирования структуры базы данных. Вначале производится детализация этапа на более мелкие детали - шаги, результатом выполнения которых является БД, готовая для заполнения пользова-: 1. , . 2. -. 3. , . 4. Разработать подсхему для хранения значений атрибутов. 5. Реализовать физическую структуру БД. Реализация изложенной выше последовательности шагов зависит от применяемой при разработке БД технологии. Выбор технологии определяется мотивацией. , -ной ИС с возможностью многократного внесения в систему изменений самим пользователем по своему усмотрению, а число задействованных специалистов в области программной инженерии и баз данных необходимо свести к минимуму, а . разработка производится в условиях частичной или полной неопределенности относительно требований к системе. , , -ется на этапе проектирования БД в мотивацию «создание метода построения БД с простой физической структурой, не требующей изменения при изменении структуры хранимых данных». Мотивация этапа разбивается на набор требований: ♦ использование реляционных структур данных; ♦ простота структуры на физическом уровне; ♦ статичность структуры физического уровня; ♦ гибкость логической структуры (возможность изменения структуры хранимых данных). Рассмотрим реализацию «деталей» (шагов 1-5) этапа проектирования структуры БД с учетом изложенной мотивации и требований: 1. , . Выделяется набор метаданных: имена сущностей и атрибутов, связи сущ- , - , , -ние, признак логического удаления, порядок пользовательской сортировки, иерархии структур сущностей и атрибутов. 2. -. Для хранения метаданных используем фиксированный набор связанных ре, . : ♦ справочник описаний - содержит иерархию элементов, описывающих все - , ; ♦ справочник атрибутов сущностей - определяет атрибутный состав каждой ; ♦ справочник экземпляров сущностей (уникальный экземпляра, 1(1 сущно- , ) - « ». 3. , . Набор типов данных включает в себя стандартные для реляционных БД типы (строки, числа, даты, большие двоичные файлы), а также тип данных «сущность» -ссылка на сущность, используемый в качестве метаданных. 4. . Подсхема реализуется в виде конечного набора однотипных, не связанных между собой реляционных таблиц для хранения значений атрибутов. Количество таблиц соответствует количеству используемых типов данных. Выделение отдельных таблиц на каждый тип необходимо для повышения производительности за счет упразднения процедур преобразования типов. Хранить значения целесообраз-« - - », -на записи в таблицах метаданных. Подсхема данных включает в себя следующие таблицы: «строковые данные», « », « », « », « ». 5. . Определяются и специфицируются связи между таблицами из подсхемы метаданных и подсхемы данных. Связи между таблицами подсхемы метаданных и данных организуются по ключевым значениям уникальных 1(± Происходит реализация полученной структуры в рамках конкретной реляционной СУБД. Рассмотренный пример использования гиперметода привел к реализации метода построения структуры БД, называемой «Структурно-независимая база дан- ных» - SIDB[4], которая позволяет хранить данные с изменяющейся структурой, без изменения физической структуры. Заключение. Применение гиперметода позволяет формальным образом сформировать «удачный» вариант жизненного цикла для конкретного проекта, учитывающий мотивацию и требования заказчика и всех заинтересованных групп. Рассмотренный пример демонстрирует использование гиперметода для создания метода реализации одного из этапов, с учетом общей мотивации проекта и конкретного этапа. ]]></text>
</doc>

<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/programmno-instrumentalnyy-modul-otsenki-kachestva-videoizobrazheniya]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Григорьев Иван Васильевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Программно-инструментальный модуль оценки качества видеоизображения]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассматриваются вопросы выбора программной среды для проведения вычислительных экспериментов по оценке эффективности алгоритмов пространственно-временного кодирования макроблоков. Приведено описание разработанного автором инструментального модуля, который позволяет вести оценку качества видеоизображения по нескольким критериям и обладает рядом достоинств. Даны полезные рекомендации к методологии создания программно-инструментальных средств оценки качества цифровых изображений.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[7 УДК 621.397.6:004.94 И.В. Григорьев Программно-инструментальный модуль оценки качества видеоизображения Рассматриваются вопросы выбора программной среды для проведения вычислительных экспериментов по оценке эффективности алгоритмов пространственно-временного кодирования макроблоков. Приведено описание разработанного автором инструментального модуля, который позволяет вести оценку качества видеоизображения по нескольким критериям и обладает рядом достоинств. Даны полезные рекомендации к методологии создания программно-инструментальных средств оценки качества цифровых изображений. Сжатие динамических цифровых изображений с использованием новых систем, таких как, например, МРЕв-4 РагИО/АУС, становится всё более эффективным, но длительным с точки зрения вычислительных затрат, так как усложнение алгоритмов сжатия повышает требования к производительности процессоров. Распространение цифровых систем передачи видеосигнала с возрастающими потребностями в передаче все большего количества информации при ограниченной полосе пропускания ставит дополнительные требования в плане эффективного использования вычислительных ресурсов — в большинстве практических задач необходимо сжатие данных в режиме реального времени. Применение эвристических алгоритмов и методик, избегающих перебора всех способов кодирования макроблоков, позволяет решить эту задачу [1]. Анализ достижений в данной области выявил необходимость выбора программно-инструментальной среды для проведения вычислительных экспериментов, так как проверка эффективности разрабатываемых алгоритмов пространственно-временного кодирования макроблоков, а также решение задач по настройке и оптимизации параметров кодека требуют проводить: - оценку визуального качества получаемого видеоизображения; - измерение битовой скорости потока, достигаемой после сжатия; - оценку вычислительной сложности алгоритмов и их производительности. Предлагается предъявлять к подобной программной среде следующий набор требований: - модульность архитектуры; - гибкость среды, позволяющая добавлять в неё новые компоненты; - открытость системы, в частности, открытый исходный код и интерфейс для внедрения в алгоритмы; - наличие графического интерфейса; - возможность сохранения и загрузки условий эксперимента в файл (реестр); - возможность просмотра результатов эксперимента в графическом виде и сохранение результатов в файле. Проведенный анализ существующих программ оценки качества не выявил систем, полностью удовлетворяющих перечисленным условиям [2, 3]. В частности, существующие программные среды оценки качества изображения являются полностью закрытым программным обеспечением, предоставляя разработчику только интерфейс для встраивания необходимых компонентов, а это, в свою очередь, ставит некоторое ограничение на планирование и проведение эксперимента. Немаловажное значение имеют вопросы соблюдения интеллектуальных прав собственности и лицензирования. Поиск и разработка новых объективных метрик оценки качества видеоизображения пока не привели к созданию единой методологии, удовлетворяющей всем требованиям. Наиболее часто используемый на практике среднеквадратичный критерий не даёт объективных оценок, так как человеческий глаз в процессе восприятия обрабатывает изображение по интегральным признакам, а не усредняя его поэлементно [4]. Это определяет актуальность разработки инструментального модуля, рассматриваемого в данной работе. Инструментарий позволяет вести оценку качества по нескольким критериям и обладает рядом достоинств. Программная среда (рис. 1) реализована в виде приложения с графическим пользовательским интерфейсом и (^М-модуля (с111), с отдельно оформленными метриками в виде плагинов (сШ). Такой подход позволяет использовать модуль непосредственно в самом компрессоре, а также реализовывать и добавлять новые метрики без изменений и программных модернизаций модуля. Метрики □ □□□□ ф ф ф m ф QM-модуль Входные данные Оценка качества Входные данные Оценка качества Компрессор Рис. 1. Схема программно-инструментальной среды Приложение позволяет пользователю указать местонахождение оригинальной и сравниваемой видеопоследовательностей, параметры изображения: формат (YV12, YV12R, YUY2, UYVY, RGB24, RGB32, RGB555, RGB565), размеры (длину, ширину) и частоту кадров при визуализации. После выбора оценочной метрики приложение запускает модуль, передавая все входные данные и считывая оригинальную и сравниваемую видеопоследовательности кадр за кадром. Полученные от модуля результаты работы метрики сохраняются приложением в файл в формате, выбранном пользователем (*.txt, *.csv). Приложение предоставляет возможность просмотра (обычный, покадровый, покомпонентный) исходной и сравниваемой видеопоследовательностей при помощи специально разработанных для этих целей YUVsource и videoRenderer фильтров. Входные данные QM-модуля представляют собой: - сведения о параметрах изображения; - оригинальное и сравниваемое изображения в виде несжатой последовательности YUV; - название оценочной метрики (MSE, MSAD, DELTA, PSNR, SSIM). Разработанный программный модуль проводит оценку качества изображений по нескольким метрикам, что позволяет расширить область его практического применения для определенной предметной области либо выбирать параметры оценки качества под конкретную задачу. На данном этапе развития инструментария реализованы следующие метрики: - MSE — среднеквадратичная разность значений цветовых компонент в соответствующих точках сравниваемых изображений: h w 2 X X(хц -Ун) d(x,y) = ———-, wh где х — оригинальный сигнал; у — сравниваемый сигнал; w — длина изображения; h — ширина изображения; - MSAD — усреднённая разность по модулю значений цветовых компонент в соответствующих точках сравниваемых изображений: h w X X \хij ~ Ущ d(x,y) = 1-1 м -; w ■ h - Delta — усреднённая разность значений цветовых компонент в соответствующих точках сравниваемых изображений: h w X Ъ(хч-у-ч) d(x,y) = '~Х /~1 -; w ■ п И.В. Григорьев. Программно-инструментальный модуль оценки качества видеоизображения 9 - PSNR — мера отношения сигнала к шуму; метрика, аналогичная среднеквадратичному отклонению, но более удобная за счёт логарифмического масштаба длины: а( \ m i 2552 w h d {х, у) = 10 • log10 -j—ц--; I Мхц-Уц) ¡=i ¡=i - SSIM Index [5] — основывается на замере трёх компонент (сходности по яркости, контрасту и структурного сходства) и объединения их значений в итоговый результат: d(x,y) = —-f--, Oii + iiJ+qxsl+sJ+Cj) где цх, — средние арифметические оригинального и сравниваемого сигналов соответственно; Ь2Х, Ъ2у — дисперсии оригинального и сравниваемого сигналов соответственно; 2 л w 5*У = £ X (хц (уц ~ )> q = (K^2), C2 = (K2L2), где Kt = 0,01, K2 = 0,03 , L = 255. В таблице показаны выходные результаты работы заданной метрики. Результаты работы PSNR-метрики Номер кадра Y PSNR и PSNR V PSNR 1 32,01 40,97 44,49 ... ... ... ... 613 28,12 38,37 40,65 614 27,43 38,10 40,36 615 27,43 38,10 40,36 Итоговая 30,11 38,52 40,11 Приведенные данные позволяют планировать эксперимент и подтверждают достоверность данных. Взаимодействие программной среды и её компонентов должно быть одинаковым вне зависимости от реализации и назначения самих компонентов, поэтому был разработан специальный интерфейс, отделяющий и скрывающий реализацию каждого компонента. Интерфейс вносит однозначность в передачу данных между компонентами, управление их работой, настройку внутренних параметров, сохранение информации о параметрах в целях повторения эксперимента, получение статистики о работе компонента. Подобный подход к построению архитектуры даёт системе большую гибкость, расширяемость и универсальность — реализация алгоритма компонента практически ничем не ограничена. Рассмотренный программно-инструментальный модуль реализован на языке программирования С++ с помощью пакета Microsoft Visual Studio 2005 для работы под управлением операционной системы семейства Microsoft Windows. Для работы с данными мультимедиа (просмотр-проигрывание) была взята технология Microsoft DirectShow [6], получившая широкое распространение благодаря гибкой модульной архитектуре, открытому интерфейсу и стимулированию разработок сторонних разработчиков. Разработанное автором программное обеспечение может использоваться в научных, учебных и инновационных целях при разработке и исследовании алгоритмов сжатия видеоданных. ]]></text>
</doc>

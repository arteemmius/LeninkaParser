<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/modul-vizualizatsii-sistemy-strukturnogo-modelirovaniya]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Переверзев В.А.]]></item>
    <item type="str"><![CDATA[Резников В.Б.]]></item>
    <item type="str"><![CDATA[Ляшкова С.И.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Модуль визуализации системы структурного моделирования]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[В настоящее время можно говорить о переходе моделирования из чисто научной сферы в прикладную. Кроме решения традиционных задач - моделирования физических процессов - решаются задачи проектирования инженерных сооружений, автомобилей, судов и летальных аппаратов, электронных и полупроводниковых устройств. Это стало возможным благодаря расширению самого понятия моделирования. Теперь можно говорить не только о математическом решении систем уравнений (математическое моделирование), но и о симбиозе его с моделированием геометрических форм (геометрическим моделированием), составляющих основу современного визуального моделирования, основным инструментом которого является высокопроизводительная вычислительная техника. В общем случае применение компьютеров при постановке вычислительного эксперимента имеет ряд преимуществ перед натурным макетным моделированием: • возможность легкого изменения параметров компонент систем; • многократный расчет различных режимов работы, в том числе и таких, как разрушение части системы; • постоянное слежение за ходом процесса и возможность предварительной оценки решения до завершения этапа моделирования; • компьютерная симуляция также позволяет провести более детальное и всестороннее исследование без необходимости построения реальной системы. Существует большое количество подходов к представлению моделируемых объектов в компьютерных системах моделирования [1]. Одним из наиболее перспективных методов является подход, основанный на известных методах структурного программирования [2, 3, 4, 5]. Особенностями данного подхода являются представление моделируемых систем в виде структуры параллельно функционирующих объектов, взаимодействие которых осуществляется посредством обмена данными и информационными сигналами. Структурный подход позволяет естественным образом интегрировать средства визуализации в процесс моделирования, поскольку при разделении моделируемых систем на отдельные объекты описание каждого объекта отождествляется с его визуальным представлением [5]. При этом разработка модуля визуализации является необходимым условием создания полноценной системы визуального моделирования, поскольку при моделировании важно не только быстро получить адекватные данные, но и отобразить их в удобной для восприятия форме. Ранее исследователь получал результаты моделирования в виде последовательности чисел - значений переменных состояния системы в заданный момент времени -мгновенный снимок состояния системы. При этом, соответственно, отсутствовала возможность оценки характера развития поведения системы в динамике. Данного недостатка лишен способ представления результатов моделирования в виде графиков. Графики позволяют отобразить не только характер изменения переменных состояния системы от времени (временные зависимости), но и показать зависимость изменения одной переменной от других (фазовые зависимости). Причем последние используются для проведения анализа устойчивости систем [6, 7]. С ростом производительности вычислительных средств моделирования исследователь получил возможность моделировать всё более сложные системы, состоящие из большого количества объектов. Это привело к значительному росту объема информации, выдаваемой системой моделирования. Поэтому при всех достоинствах графиков этот традиционный способ уже не отвечает требованиям визуального моделирования, основным принципом которого является наглядность и адекватность представления результатов симуляции поведения физических систем [8]. Предполагается, что исследователь набирает моделируемую физическую систему в визуальной системе моделирования в максимально приближенной к реальности форме. Затем в процессе моделирования он имеет возможность качественно оценить состояние всей системы в целом. Кроме того, имеется возможность реализовать воздействие на виртуальную моделируемую систему, как на реальную, посредством интерактивного интерфейса [9, 10]. Таким образом, возникает задача разработки и реализации модуля (подсистема) визуализации для системы структурного моделирования. Данный модуль основан на описанных выше принципах. Первоочередными задачами, решаемыми разрабатываемой системой визуализации, являются: построение графиков изменения переменных состояния моделей (одиночных и совмещённых), построение фазовых портретов систем (трехмерных и четырёхмерных). Подход визуального моделирования будет реализован в компоненте анимации, который позволит наглядно отобразить процесс моделирования. Кроме того, данный компонент реализует интерактивность (одно из важных свойств визуального моделирования). Подразумевается, что пользователь имеет возможность задавать начальные значения переменных интегрирования путем визуальной модификации положения различных частей системы (например, отклонять при помощи указателя курсора положение подвески маятника). Рассмотрим особенности представления моделей, которые включают достаточно много сложных объектов. Обычно системы визуализации включают наборы примитивов, предоставляя возможность самостоятельно конструировать на их основе более сложные объекты. Для построения таких моделей в современных трехмерных редакторах используется иерархический подход. В его основе лежит принцип того, что все модели строятся из набора примитивов (символов). В набор примитивов входят не только графические объекты, но и шрифты, условные графические обозначения и уже созданные заготовки моделей. Как известно, все преобразования в трехмерном пространстве над такими геометрическими моделями можно свести к суперпозиции операций сдвига (Т), поворота (Д) и масштабирования (8). Тогда любую модель можно представить в виде списка (таблицы), где для каждого примитива указаны эти три параметра преобразования. При заполнении таблицы предполагается, что каждый примитив имеет уникальный идентификатор. Такая технология описания модели имеет один недостаток - она не несет информацию о взаимных связях между объектами, что является приоритетным при построении динамических объектов и анимации. Поэтому для учета топологических связей и взаимосвязей между частями модели, отношения между частями модели, отношения между символами в модели удобно представлять в виде дерева (древовидного графа), т. е. в виде связного ориентированного графа, не имеющего циклов. Помимо этого, если в модели используются повторяющиеся символы, то ее можно представить и в виде ориентированного ациклического графа. Оба варианта - и деревья, и ациклические ориентированные графы - представляют собой иерархические методы описания взаимосвязей, которые существуют между компонентами физической модели [11]. Рассмотрим принципы представления модели в системе визуализации на примере обратного маятника, используя топологическую модель в совокупности с инверсной кинематикой (рис. 1). На рис. 2 показана модель маятника, состоящая из 2-х основных частей - подвески (1) и плеча (2) маятника. Визуальная модель маятника образуется на основе двух элементарных моделей плеча и подвески. Данные модели имеют точки фиксации (3). Каждая модель обладает 6 степенями свободы относительно соответствующей точки фиксации - смещение и повороты относительно осей Х,УД. Каждая степень свободы может быть зафиксирована или к ней может подключаться поток данных - результатов моделирования. Т аким образом, реализуется динамика изменения визуальной сцены. На приведенном рисунке показана визуальная модель исходной задачи. Система моделирования, осуществляющая расчет математической модели маятника выдает два потока данных - смещение плеча и отклонение подвески. Данные потоки подключаются к соответствующим степеням свободы примитивов - смещению по оси Х для подвески и повороту относительно оси Z для плеча. Остальные степени свободы фиксируются. В процессе моделирования каждое новое взаиморасположение примитивов рассчитывается согласно приходящим данным. Топологическая иерархия С Среда <|---С Маятник ) (|----С Подвеска ) <|------( Плечо ) Рис. 1 Кинематическая иерархия ( Среда ) ( Подвеска ) С Плечо ) Необходимо отметить, что в процессе расчета визуальной сцены используются не только изменения значений степеней свободы, но и иерархия отношения моделей согласно правилу инверсной кинематики. Данное правило гласит, что изменение степени свободы какого-либо объекта (потомка) не влияет на положение вышестоящего по иерархии объекта (предка), как показано на рис. 2. Рис. 2 Рассмотрим организацию компонента. Подсистема визуализации является обособленным компонентом системы структурного моделирования, поэтому обмен данными осуществляется посредством специализированных модулей обмена. Выбор данного способа предполагает в общем случае распределенную реализацию системы моделирования. В этом случае возможно расположение высокопроизводительного структурного вычислителя на удаленном сервере. Исследователи подключатся к общему вычислителю посредством клиентских терминалов. Данные терминалы включают в себя и модуль визуализации. Предусмотрено три способа взаимодействия клиентской и серверной частей: 1) отсроченный обмен; 2) локальный обмен; 3) удаленный обмен. Отсроченный обмен удобен для многократного просмотра результатов моделирования. В данном случае реализуется пакетный режим работы системы. Исследователь программирует систему (формирует структурную схему модели) и затем посылает её серверу. Сервер обрабатывает схему и выполняет симуляцию. Результаты моделирования сохраняются в дисковый файл и пересылаются клиенту. При этом исследователь может многократно загружать полученный файл в систему визуализации и проигрывать моделируемую ситуацию. Данный способ пригоден для моделирования сложных схем, расчет и анализ которых может занять длительное время - более нескольких часов или даже суток. Локальный обмен удобен для интерактивного моделирования и соответственно симуляции небольших схем.. При этом и серверная и клиентская части располагаются на одном и том же персональном компьютере. Обмен реализуется через общую память, что позволяет системе быстро реагировать на изменение пользователем визуальной сцены. Удаленный обмен используется при распределенном моделировании, когда реализуется выделенный сервер структурных вычислений и несколько одновременно работающих с ним клиентов. В данном случае взаимодействие соответствующих частей системы реализуется посредством сетевого интерфейса. Данный вариант является объединением первого и второго способов обмена, в зависимости от сложности моделируемой системы и количества одновременно работающих пользователей. Представим на рис.3 структуру визуализирующего комплекса [12]. Он состоит из следующих частей: система структурного моделирования (включающая в себя интерфейс программирования, библиотеку структурных моделей и вычислительную среду), модули обмена (устанавливаются на клиентской и серверной машинах), модуль сопряжения (реализует совмещение потоков данных с командами подсистемы визуализации), редактор графических моделей и сама подсистема визуализации (реализующая отображение графических представлений структурных моделей). Рис. 3 Схема работы системы такова. Исследователь формирует структурную схему моделируемой системы и соответствующую данной схеме визуальную сцену. Для построения визуальной сцены используются модели, формируемые в редакторе графических моделей. Далее в модуле сопряжения устанавливается соответствие между потоками данных (временными зависимостями переменных состояний системы) и параметрами визуальной сцены. Полученная сцена загружается в модуль визуализации, где исследователь устанавливает начальные значения переменным состояния, изменяя положение элементов относительно выбранного базиса. При этом исходные данные передаются в систему моделирования. После запуска процесса моделирования системой формируются потоки данных, которые передаются в подсистему визуализации посредством модулей обмена, и согласно принятым данным модуль визуализации автоматически формирует визуальную сцену. В заключение необходимо отметить, что рассматриваемый подход позволяет поднять системы моделирования на более высокий качественный уровень по сравнению с традиционными системами. Развитие данного подхода предполагает разработку максимально реалистичных виртуальных исследовательских лабораторий, что соответствует современным перспективным направлениям интеграции вычислительной техники не только в научную сферу, но и в повседневную жизнь [13]. ]]></text>
</doc>

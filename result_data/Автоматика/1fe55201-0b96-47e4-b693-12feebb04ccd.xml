<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/sistemnyy-podhod-k-postroeniyu-informatsionnyh-sistem-na-osnove-zhiznennogo-tsikla]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Рогозов Юрий Иванович]]></item>
    <item type="str"><![CDATA[Свиридов Александр Славьевич]]></item>
    <item type="str"><![CDATA[Горбань Наталья Сергеевна]]></item>
    <item type="str"><![CDATA[Дубровский Александр Александрович]]></item>
    <item type="str"><![CDATA[Жибулис Юрий Алексеевич]]></item>
    <item type="str"><![CDATA[Почечуев Никита Владимирович]]></item>
    <item type="str"><![CDATA[Микита Роман Михайлович]]></item>
    <item type="str"><![CDATA[Друппов Сергей Александрович]]></item>
    <item type="str"><![CDATA[Шевченко Оксана Владимировна]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Системный подход к построению информационных систем на основе жизненного цикла]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ИНФОРМАЦИОННАЯ СИСТЕМА]]></item>
    <item type="str"><![CDATA[МОДЕЛЬ ЖИЗНЕННОГО ЦИКЛА]]></item>
    <item type="str"><![CDATA[ПРОЕКТИРОВАНИЕ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Предлагается интегрированный подход к созданию информационных систем на основе на модели Zachman. Подход реализуется базе на единой информационной среды, при этом предложенная модель жизненного цикла является «формой», по которой на каждом уровне представления (этапе) из информационной среды может быть получено необходимое архитектурное представление.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Предлагается интегрированный подход к созданию информационных систем на основе на модели Zachman. Подход реализуется базе на единой , является «формой», по которой на каждом уровне представления (этапе) из информационной среды может быть получено необходимое архитектурное . Информационная система; модель жизненного цикла; проектирование. U.I. Rogozov, A.S. Sviridov, N.S. Gorban, A.A. Dubrovskiy, U.A. Jibulis, N.V. Pochechuev, R.M. Mikita, S.A. Druppov, O.V. Shevchenko THE SYSTEM APPROACH TO CONSTRUCTIONOF INFORMATION SYSTEMS ON THE BASIS OF LIFE CYCLE Integrated approach to creation of information systems on a basis on model Zachmanis offered. The approachis realised to base on the uniform information environments, thus offered model of life cycle is "form" on which at each level of representation (stage) from the information environment necessary architectural model can be received. Information system; life cycle model; designing. Введение Архитектура информационной системы (ИС) определяется не только особенностями предметной области, но и в значительной мере - структурой жизненного цикла (ЖЦ) ИС, а точнее, моделью жизненного цикла ИС, используемой при разработке и сопровождении. Ранее была предложена модель ER++ основанная на расширенной модели Zachman [1]. Также было выдвинуто предположение, что в случае использования на протяжении ЖЦ модели ER++ это даст возможность провести интеграцию этапов, создать основу для построения современных CASE-средств. Рассмотрим существующие модели ЖЦ и предложенную модель с точки , . является формирование концепции процесса интеграции всех этапов жизненного цикла. Используемая модель ЖЦ определяет состав и последовательность осу, , -ненного цикла информационной системы, а также взаимосвязи между этими процессами, действиями и задачами [2]. Кроме того, принятая при разработке модель определяет структуру ИС и инструментальные САБЕ-средства используемые на протяжении жизненного цикла ИС. Анализ известных моделей жизненного цикла При использовании каскадной модели (70-90 гг.) работы по созданию ИС выполнялись в виде последовательности этапов [1], причем каждый последующий этап выполняется только после полного завершения работ на предыдущем. Другой особенностью каскадной модели является то, что каждый последующий , , . Рассмотрим последствия использования такой «классической» модели: 1. . - -рованности этапов интеграция отдельных стадий жизненного цикла выполняется с помощью комплектов документации, которые передаются от разработчика к разработчику, а исполнитель очередного этапа играет роль преобразователя задокументированных результатов одного этапа (предыдущего) в результат текущего этапа. Проектировщик получает результаты обследования и анализа в виде технического задания на разработку, производит проектирование и оформляет технический проект ИС. При этом преобразовании теряется полнота представления о ИС. 2. , . создании системы по такой модели главной задачей является полу, -стиками. Задача получить систему, которая может легко адаптироваться к изменяющимся условиям, не ставится. Внесение изменений осложнено структурой ЖЦ, требует трудозатрат и времени, соизмеримых с длительностью самого проекта по созданию ИС. 3. Применяемые CASE-epeдeтвa автономны. Этапы ЖЦ выполняются изолированно друг от друга и, чаще всего разными группами разработчиков. Как следствие, средства, применяемые ими, не интегрированы и лишь решают задачи присущие каждому этапу. При увеличении масштабов проектов по построению ИС, увеличении их сложности и сокращении сроков разработки стали очевидны недостатки каскадной модели [3]. В результате появились новые модели ЖЦ, которые учитывали указанные проблемы, в частности - спиральная модель и основанные на ней методо. Спиральная модель [3], в отличие от каскадной, предполагает итерационный процесс разработки информационной системы. При этом возрастает значение начальных этапов ЖЦ, таких как анализ и проектирование. На этих этапах проверяется и обосновывается реализуемость технических решений путем создания прототипов. Каждая итерация представляет собой законченный цикл разработки, приводящий к выпуску внутренней или внешней версии изделия. Использование спиральной модели наложило отпечаток на структуру ИС и используемых при их создании CASE-средств: 1. Интеграция эт апов разработки. Этапы, тесно связанные с процессом создания ИС, выполняются более интегрировано: моделирова- , . -но на создании и использовании комплекса моделей (модель объекта, модель ИС, модель реализации), которые формируются совместно разными группами разработчиков. Этапы, не входящие напрямую в ( , ), модели не отражаются. 2. Компонентная структура ИС, ориентированная на возможность внесения изменений в структуру ИС на этапах разработки. При создании системы по такой модели главной задачей является получить , -, . счет итерационного цикла разработки, при изменении требований к , -ми по сравнению с каскадной моделью. Потребность в модификации ИС на этапе эксплуатации, как правило, вызывает необходимость начала нового цикла. 3. Применяемые CASE-средетва интегрируются на этапах, относящихся к фазе разработки - моделирования объекта и построения проекта ИС. Появляется концепция MDA (Model Driven Architecture) - архитектура, управляемая моделью. Интегрированные CASE-средства реализуют 10-15 типов моделей, связанных общим репозиторием. К , -, , и переход от этапа к этапу. Интегрированная модель жизненного цикла, основанная на модели Zachman Эта модель создает контекст для описания различных представлений архитектуры разрабатываемой системы. Представления соответствуют тому, как видят систему ее заказчик, проектировщик и разработчик и т.д, в разрезе вы. -либо участника проекта по созданию системы. Аспекты представлены в схеме колонками. Архитектурное представление - это ячейка таблицы, соответствующая пересечению выбранного столбца и выбранной строки. Взгляд какого-либо лица - это совокупность ячеек в пределах одной строки (точки зре-), , -. -ниям каждой из точек зрения. Каждая точка зрения в такой интерпретации соответствует этапу жизненного цикла ИС, что позволяет сформировать на ее основе модель жизненного . архитектурными представлениями ИС на каждом этапе или аспектами. Решением проблемы построения модели жизненного цикла интегрирующей его этапы и рассматриваемые аспекты, на наш взгляд, является единая ин-, « » . Под информационной средой мы понимаем совокупность взаимосвязанных данных, моделей и методов, используемых на всех этапах ЖЦ. Такая среда начинает заполняться, начиная с ранних этапов (данными, методами обследования ), ( , ). средой, базируясь на методах анализа, проектирования разработки и т.п., работают инструментальные САБЕ-средства, выполняя задачи, присущие каждому ( . 1). ; АНАЛИТИКИ, РАЗРАБОТЧИКИ, ПОЛЬЗОВАТЕЛИ "ли лп"';л1г" ■ CASE I CASE Этап Этап Г CASE Этап Информационная среда (данные, модели, методы) МОДЕЛЬ ДАННЫХ СО СТАТИЧЕСКОЙ СТРУКТУРОЙ СУБД Рис. 1. Концепция интегрирующей информационной среды ЖЦ Для организации предлагаемой информационной среды необходимо решить проблему разнородности данных и методов работы с ними на разных . данных со статической структурой. Особенностью такой модели является то, что за счет отказа от классической модели «сущность-связь» при внесении в модель новых информационных сущностей и атрибутов модель данных не изменяется, т.е. не затрагивается физическое представление структуры данных . -ной СУБД это означает, что при любом изменении модели на логическом уровне, структура таблиц и связей между ними не изменится. Кроме того, такая модель может быть реализована на СУБД с любой моделью представления ( , , ). Использование статической структуры данных дает возможность организовать единую информационную среду, начиная со стадии обследования и заканчивая этапом эксплуатации ИС. « », по которой на каждом уровне представления (этапе) из информационной среды может быть получено необходимое архитектурное представление. Кратко можно описать жизненный цикл в виде следующих стадий: ♦ сбор информации об объекте с использованием специализированной методики обследования [4], заполнение информационной среды первичными данными (внесение собранной информации в статиче- ), параметров; ♦ (ER++) модели объекта «как есть», оптимизация [5] к модели «как », -тодологий для обсуждения и внесения изменений экспертами; ♦ формирование модели ИС как совокупности функциональных модулей и структуры прикладных данных. И то и другое может быть получено формальным образом из данных, содержащихся в информационной среде и представленных на предыдущей стадии. За счет полученной функциональной модели объекта (с исключением неав- ) -ния функций системы на программные модули. Для разработки структуры прикладных данных используется та же модель данных со ; ♦ создание ИС. Согласно созданному проекту ИС выполняется реализация программных модулей, которая включает в себя конструирование интерфейсных форм, установку связей форм и данных, построе- . этот процесс может быть формализован, а построение запросов может выполняться автоматически. Для формализации предполагается использовать специализированный язык, позволяющий из модели ИС получить описание процесса конструирования, выполняя которое конструктор (человек или инструментальное средство) будет реализовывать элементы ИС на основе предопределенного набора функ, ; ♦ конфигури рование ИС. Производится выделение автоматизирован- ( ), -, . -граммный модуль может входить в один или несколько АРМ. Производится настройка системы доступа к АРМ пользователей системы к ее функциональным элементам и данным на основе модели объекта, полученной на этапе моделирования; ♦ первичное информационное заполнение. Внесение в систему данных, необходимых для функционирования системы - справочников, классификаторов. Заполнение производится с помощью программ, - дии обследования данных. ♦ эксплуатация и сопровождение системы. Отслеживание изменений в бизнес-процессах, внесение новых и изменившихся элементов информационную среду (см. первую стадию). Интегрированная адаптация структуры ИС, вызванная изменившейся информацион-. Заключение Предложенная в работе интегрированная модель жизненного цикла, на основе структуры данных со статической структурой, позволяет автоматизировать выполнение работ отдельных этапов, а главное - обеспечить автоматизированный переход от этапа к этапу. Реализация предложенной методики в виде инструментального средства позволит решить задачу сокращения сроков разработки и безболезненной адаптации ИС к изменяющимся условиям внеш. ]]></text>
</doc>

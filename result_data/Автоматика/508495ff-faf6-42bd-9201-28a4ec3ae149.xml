<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/fraktalnye-razvivayuschiesya-arhitektury]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Семенов Александр Сергеевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Фрактальные развивающиеся архитектуры]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[АРХИТЕКТУРА]]></item>
    <item type="str"><![CDATA[ФРАКТАЛЬНЫЙ ГРАФ]]></item>
    <item type="str"><![CDATA[ФРАКТАЛЬНАЯ АЛГЕБРА]]></item>
    <item type="str"><![CDATA[РАЗВИВАЮЩАЯСЯ СИСТЕМА]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[Рассматривается модель архитектуры сложных развивающихся систем на основе фрактальных графов, обладающих свойством самоподобия и описываемых посредством алгебраической системы «фрактоид». Указаны возможные области применения фрактальных архитектур.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Семенов А. С. (Московский авиационный институт, Москва) Рассматривается модель архитектуры сложных развивающихся систем на основе фрактальных графов, обладающих свойством самоподобия и описываемых посредством алгебраической системы «фрактоид». Указаны возможные области применения фрактальных архитектур. Ключевые слова: архитектура, фрактальный граф, фрактальная алгебра, развивающаяся система. 1. Введение Архитектура - это высокоуровневая абстракция фундаментальной организации системы, воплощенная в ее компонентах, их отношениях друг к другу и окружению, в принципах управления ее проектированием и эволюцией, достаточно детализированная для поддержки анализа, синтеза и достаточно простая для понимания [13]. При описании архитектур информационных систем используются модели, которые фиксируют структуру системы в виде графа [10]. Конкретная архитектура определяет решение задач, которые трактуются как динамические явления, возникающие при 1 Автор выражает благодарность проф. С. А. Юдицкому за помощь в переработке статьи. 2 Александр Сергеевич Семенов, кандидат физико-математических наук, доцент (Semenov_Alex@yahoo.com). движении по графу информационного и/или управляющего потока. При этом возможные пути потока определяются последовательностью ребер графа, а правила изменения путей на графе зависят от специфики моделируемой системы. Развитие подразумевает динамику архитектуры, ее адаптацию и эволюцию, увеличение сложности системы. Под поведением развивающейся динамической системы [4] принято понимать происходящий в этой системе процесс, развернутый во времени (непрерывном или дискретном), включающий: - мониторинг выполнения процесса с точки зрения установленных для него критериев; - идентификацию отклонения показателей от критериальных значений; - формирование управляющих воздействий на систему, направленных на устранение (минимизацию) отклонений. Инструментарий развития базируется на математическом аппарате: при непрерывном времени на теории дифференциальных уравнений, при дискретном - на графодинамическом моделировании [1]. Описание, анализ и синтез развивающейся системы на основе известных математических моделей представляется достаточно сложным и может потребовать перебора и последующей оптимизации всех возможных конфигураций графа, что является ^Р-трудной задачей. В статье исследуются развивающиеся динамические процессы, моделируемые в рамках заданного класса так называемых «фрактальных» (самоподобных) графов [5, 6], которые в ходе развития во времени изменяют значения параметров, но сохраняют тип структуры (класс) инвариантным. Это позволяет избежать перебора всех возможных конфигураций. Фрактальные графы определяются как объединение графа и фрактала, с присущими свойствами фракталов: самоподобием, дробной размерностью, масштабной инвариантностью [7, 8]. Фрактальные графы строятся иерархически: вершина графа вышестоящего уровня раскрывается в виде графа, подобного вышестоящему [5, 6]. Примером типовых фрактальных графовых структур являются гиперкуб, решетка, дерево, линейный граф и, возможно, другие графы [2]. В статье рассмотрен набор элементарных операций над графами: копирование графа; введение ребра, связывающего выделенную пару вершин (соединение); подразбиение ребра с введением дополнительной вершины. Применение этих операций в разных последовательностях порождает фрактальные графы перечисленных выше классов. Целью научного подхода предлагаемого в работе, является описание, синтез и анализ развивающихся архитектур за счет применения фрактальных графов. В работе рассматриваются следующие задачи: - определение фрактальных графов и архитектур на основе алгебраической структуры «фрактоид» [11], позволяющей построить различные классы графов (типа гиперкуба, решетки, дерева, линейного графа и т.д.) и управлять их структурой; - разработка метода синтеза развивающихся архитектур при помощи предлагаемого набора, элементарных операций над фрактальными графами, использования свойства самоподобия и определения условий выполнения операций (правил фрактоид-ных преобразований). 2. Фрактальные графы Дадим аксиоматическое определение фрактальных графов. Для этого введем набор элементарных операций, составляющих основу фрактальной алгебры. 1. Копирование (обозначается «=») выполняется над исходным графом (образцом или прототипом) g = (V, E), где V -множество вершин графа, E - множество ребер. Результатом операции является копия графа g. исходный граф £о gl=go а. операция копирования исходные графы go и g1 g = go + gl Ь. операция соединения исходный граф go g = go ^ е с. операция подразбиения Рис. 1. Элементарные операции фрактальной алгебры Копирование проиллюстрируем на рис. 1а. Исходный граф g0, копирование порождает граф g1 = g0, изображенный тонкими линиями. 2. Соединение - бинарная операция (обозначается «+»), которая выполняется над выделенными изоморфными вершинами графа-образца и графа-копии. Результатом является граф g, в котором изоморфные вершины связаны ребром. Соединение проиллюстрируем на рис. 1Ь., где g0, g1 - образец и копия; v1 и V2 - изоморфные вершины. Результат соединения выделенной пары изоморфных вершин - граф g = g0 + g1. 3. Подразбиение (обозначается ^) выполняется над ребром е є E графа g и состоит в удалении ребра е, введении дополнительной вершины v є V и введении в E двух ребер е' и е", соединяющих v с вершинами, инцидентными е. Подразбиение проиллюстрируем на рис. 1с. Исходный граф g0. Результатом подразбиения является граф g = g0 ^ е, полученный из g0. Графы g0 и g являются гомеоморфными [9]. Определение 1. Будем называть фрактальной алгеброй 5 = ^ | =, +, над графом g, где «=», «+», «^» - соответственно операции копирования, соединения, подразбиения. Определение 2. Фрактоидом будем называть алгебраическую систему Тп ^0, P, О), где g0 - исходный граф; Р - набор правил порождения фрактальных графов путем последовательного применения операций фрактальной алгебры 5; О - упорядоченное множество фрактальных графов данного класса (дерево, решетка, куб и т. д.), порожденных из g0 с помощью правил Р; Т: О ^ О - фрактоидное отображение на множестве О определяемое правилами рі є Р, і = 1, ..., к; п = 0, 1, ..., N - шаг, на котором выполнено отображение Т (размерность фрактоида). Применяя разные правила порождения Р к исходному графу g0, заданному одной вершиной, получим последовательность стандартных фрактальных графов, принадлежащих следующим классам. 1. Классу линейных графов (класс обозначим через £, а графы g є £ через £п, п = 0, 1, 2, ...) путем последовательного применения правил р1: £\ = £п, р2: £п+1 = £п + £’п. Операция соединения «+» выполняется только для одной пары изоморфных вершин графов £п и см. рис. 2.а. 2. Классу решеток (обозначим М), путем последовательного применения правил р1. М\ = М, р2. Мп+1 = М + Мп. Операция соединения выполняется только для двух пар изоморфных вершин графов Мп и М’п, см. рис. 26.; 3. Классу гиперкубов (обозначим () путем последовательного применения правил рь (£п = (^, р2. = ( + (£п. Операция соединения выполняется для всех изоморфных вершин графов ( и (’п, см. рис. 2с.; 4. Классу деревьев (обозначим Т), путем последовательного применения правил р1. Т,п = Тп, р2.Т’п+1 = тп + Т’п, р3. тп+1 = Т’п+1 е, см. рис. 2а?. Операция соединения выполняется только для корневых вершин деревьев Тп и сГп, а операция подразбиения - для ребра, соединяющего эти корневые вершины. Вершина, введенная при подразбиении, соответствует корню дерева Тп+1. Предлагаемый в работе подход ориентирован на системы, архитектуры которых моделируются фрактальными графами, а развитие - фрактоидными преобразованиями (рис. 2.). Развитие рассматривается на определенном временном горизонте. Последний состоит из периодов стабильности, на которых система развивается без серьезных качественных изменений, т. е. имеет место только количественный рост ее параметров. Это дает основание моделировать периоды стабильности фрактоидами на базе фиксированных классов фрактальных графов. Периоды стабильности разделены «точками бифуркаций» [9], в которых происходит скачкообразный переход в другой класс. р р □ р р р □—□ £ о —— £ і —— £ 2 а. линейные графы Р Р---------Р ° ?.......? МЇ й о.......а ¿і— о —— і —— £М 2 —— з Ь. графы-решетка _ __ Р------Р Р Р---Р Р р п---а ¿/— Од —— О, —— О2 - с. гиперкубы Оз Ре-Р Т ,=Тд+Т о □ □ \-Ті=Т1 ±.е _ .] То — Ті Т 2=Т1+ Т ..Т22=Т2т£ . . Т2 й. деревья Рис. 2. Примеры фрактоидного отображения Тп на множестве О, п = 0, 1, 2, ... Элементы фрактального графа, которые вводятся для операций соединения и подразбиения при преобразованиях, реализующих отображение Тп, выделены пунктиром £ — з Є Управление развитием предусматривает: 1. Идентификацию конечной точки для n-го периода стабильности; 2. Выбор класса фрактальных графов для (n + 1)-го периода стабильности (возможно конструирование нового класса, не упомянутого в данной статье). 3. Фрактальные архитектуры развивающихся систем Применение фрактоидной модели развития актуально, в частности, в следующих областях: распределенные вычислительные сети, системное и прикладное программное обеспечение. Архитектуры распределенных вычислительных сетей (крупномасштабные сети с сервисами, архитектуры вычислений в облаках (Cloud computing), разворачиваемые сети датчиков, сетевые кластеры и так далее) представляют собой развивающиеся системы типа фрактоидов. Вершинам фрактальных графов ставятся в соответствие процессоры и/или память. Ребра представляются коммуникационными средствами. При этом используются следующие свойства фрактоидов: масштабируемость, например, добавление в вычислительную сеть еще одного процессора; посылки сообщения между парами связанных вершин фрактоида - маршрутизация в гиперкубе или решетке. В области системного программирования фрактоидами описываются распределенные операционные системы (ОС). Вершинам графа ставятся в соответствие одинаковые ядра ОС (размещаемые на вычислительных машинах), ребра связывают ядра, так что ядра знают о существовании друг друга. Архитектура гиперкуба позволяет реализовать такой механизм. При добавлении еще одного ядра в систему достаточно увеличить размерность гиперкуба и пометить используемые вершины. В области прикладного программного обеспечения. организация предприятий, динамически организуемые распределенные вычисления для решения сложных задач, социальные сети. Автоматизированные информационные системы для поддержки деятельности организаций разрабатываются и внедряются с ориентацией на функциональную организацию, представляющую, как правило, жесткую архитектуру, характеризующуюся многочисленными иерархическими взаимосвязями между компонентами приложения. Автоматизация деятельности позволяет улучшить организационную структуру и выполнение бизнес-процессов. Однако новая адаптация при изменившихся внешних условиях или усовершенствование процессов в расчете на перспективу становится чрезмерно длительными, поэтому перед реализацией автоматизированной системы, как правило, проводятся анализ и оптимизация бизнес-процессов и структур. Но такой подход делает возможным эффективное использование системы лишь на относительно короткий период, так как структура оптимизируется только на момент реализации. В связи с меняющимися внешними и внутренними факторами достаточно трудно поддерживать необходимую в данных условиях адаптацию процессов и структур, автоматизацию планирования и управления организацией. Возможный подход к организации управления основан на принципах «фрактальной фабрики» [3, 12]. Компьютерное фрактальное предприятие представляет собой сложную распре -деленную систему управления, в которой существует большое число локальных подсистем. Для такого предприятия характерно применение распределенных вычислительных сетей и операционных систем, т. е. фрактальных архитектур. Рассмотрим, как возникают фрактальные структуры в бизнес-процессах. Бизнес-процесс системы вне зависимости от отрасли, объема и целей, развивается по следующему сценарию. Шаг 1. Возникает новая идея специализации бизнеса - новый продукт, услуга или расширение уже существующего производства. Шаг 2. Инновационное обеспечение - поиск денежных средств необходимых для становления бизнеса и инвестиций в новую идею. Шаг 3. Производство - после создания материальнотехнической базы, закупки сырья (товаров) и т. д. начинается этап производства (или организации сбытовой цепочки, если деятельность является торговой) либо расширение предприятия и производство нового продукта и/или услуги. Шаг 4. Выход на рынок - начинается сбыт продукции и ее маркетинговое продвижение либо сбыт продукции (услуги) в большем объеме. Шаг 5. Повторение шагов, начиная с шага 1. Задав некоторые исходные данные и правила преобразования состояния бизнеса в пределах одной итерации, можно прогнозировать будущее состояние. Это похоже на динамический процесс, в результате которого возникают фрактальные графы. Динамика процесса может показать перспективность бизнеса и правильность принимаемых управленческих решений. Отсутствие эффекта деградации будет свидетельствовать о низком риске «распада» модели и означать, что в реальном бизнесе идет поиск новых концепций, новых точек приложения усилий и новых идей. Анализ в таких моделях не требует глубоких исследований исторической ретроспективы, нужны лишь знания последних шагов и их последствий. Сопоставление состояния модели с предыдущей динамикой позволяет достаточно точно получить критические точки для анализа и понять, в какой момент интенсивно растут риски. В результате можно предугадать момент, когда следует принимать решения и какие меры необходимо предпринять для предотвращения негативных последствий. Использование такой модели развития бизнес-процесса связано с изменением его архитектуры и регулярной оценки стоимости бизнеса в терминах пригодности. Для анализа и оптимизации деятельности организаций может быть использовано имитационное моделирование, поддержанное подходящими программными средствами. Моделированию подлежат субъекты финансовой деятельности и их элементы, финансовые потоки и т. п. 4. Заключение Предложен подход, ориентированный на системы, архитектуры которых моделируются фрактальными графами, а развитие - фрактоидными преобразованиями. В рамках подхода определены элементарные операции над графами, составляющие основу фрактальной алгебры. Рассмотрено построение различных классов фрактальных графов (типа линейного графа, решетки, гиперкуба, дерева). Для этих классов определены модели процессов стабильного развития. Развитие рассматривается на определенном временном горизонте. Последний состоит из периодов стабильности, на которых система функционирует без серьезных качественных изменений, т. е. имеет место только количественный рост ее параметров. Это дает основание моделировать периоды стабильности фрактоидами на базе фиксированных классов фрактальных графов. Периоды стабильности разделены «точками бифуркаций», в которых происходит скачкообразный переход в другой класс. Управление развитием предусматривает. 1. Идентификацию конечной точки для п-го периода стабильности; 2. Выбор класса фрактальных графов для (п + 1)- го периода стабильности (возможно конструирование нового класса, не упомянутого в данной статье). ]]></text>
</doc>

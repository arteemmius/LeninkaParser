<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/metod-udaleniya-nevidimyh-poverhnostey-s-dinamicheski-izmenyaemym-urovnem-detalizatsii-stseny]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Надолинский Н.А.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Метод удаления невидимых поверхностей с динамически изменяемым уровнем детализации сцены]]></title>
  <keywords auto="true" type="list" verify="true"/>
  <annotation auto="true" type="str" verify="true"><![CDATA[]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Существует множество способов визуализации местности в компьютерных программах. В основном все методы направлены на снижение числа выводимых полигонов при умеренном снижении качества, в частности, техника гео-мипмаппинга [1] получила наиболее широкое распространение среди движков иг, физических свойств окружения и уменьшение затрат на количество вычислений. Существующие техники оптимизации рельефа местности, такие как упорядоченная и неупорядоченная [2] оптимизация полигональной сетки рельефа позволяют достичь наиболее качественных результатов, однако неупорядоченная оптимизация довольно сложна в исполнении и затраты на обработку СРи наиболее высокие, по сравнению с упорядоченной оптимизацией. Описываемая техника относится к . Одно из преимуществ представленного способа оптимизации полигональной , , -ции. Данный подход дает возможность чрезвычайно быстро прорисовывать геометрические данные с использованием современных вРИ. 1. Представление рельефа местности Наиболее рациональным представлением рельефа местности является карта высот. Зачастую используется 8-битовая карта высот (рис. 1), однако если местность предполагает быть достаточно детализированной, с большим разбросом значений высот, то рационально использование 16-битовыхых карт. Рис.1. Карта рельефа Следует отметить множество способов получения карт высот, это: ♦ вручную созданные карты (непосредственным редактированием высот); ♦ фрактальная ге нерация рельефа; ♦ сканированные карты космических тел (Марс, Земля, Луна), полученные NASA. Самыми доступными являются высотные карты Марса. На сегодняшний день достаточно качественной детализацией карт размером 100x100 км при довольно высоких дальностях прорисовки (от 10км и более) можно считать детализацию 10 метров. Данное ограничение связано с конечным размером карты. Так, 8-битовая карта 100x100 км с детализацией 10 м будет занимать не менее 100 Мб (реадьный размер может быть выше 400 Мб). В случае, если кар- 10x10 ( наземных игр), детализация может быть повышена до 5-3 метров. Поскольку 100 Мб - довольно большой размер, загрузка в память всей карты , , время перемещения по карте не представляла бы проблем. К примеру, сектор 10x10 1 . - . , 100 , -грамма должна иметь более 1 карты, поэтому необходимо сжатие карт высот по методу DCT (Discrete Cosine Transformation) - дискретно-косинусового преобразования либо вейвлет-преобразования с последующим сжатием методом Huffman. В случае если карта 8-битовая и не высокочастотная, довольно эффективным будет метод упаковки RLE. Возможен и другой вариант: хранить карты как изображение формата JPEG (или другого) и при загрузке пользоваться стандартными библиотеками распаковки данного формата. 2. Г еометрическое представление В геометрическом смысле рельеф может быть представлен трехсторонними полигонами, соединяющими точки, являющиеся уровнями высот карты рельефа (рис. 2). В данном случае представлен фрагмент размером 32 полигона с 25 вер. . n = 2m, где m е [1, то), число вершин блока k = 2Ш +1. Данные блоки необходимо отрисовывать с отдельной текстурой и осуществлять при рендеринге отбрасывание не входящих в объем видимости полигонов. Обычно для таких целей достаточно техники Quadtrees. В качестве ограничиваю, 8x8 ( ). образом, карта размером 256x256 точек и блоков 8x8 будет состоять из следующих уровней: 1 (32x32) => 4 дочерние ветви 16x16 и т.д.; у каждой ветви по 4 дочерних, разрешение дочерней ветви вдвое ниже по сравнению с родительским уровнем. , , данном случае - сферах. 3. Применение геомипмаппинга оптимизации Если сравнивать двухмерный мипмапинг в отображаемом пространстве и гео-мипмаппинг в объектном пространстве, то оптимизация рельефа связана с понижением разрешения сетки блока с 8x8 (к примеру) на 4x4, затем 2x2 и 1x1 путем удаления промежуточных узлов (рис. 3). Здесь белыми точками показаны удаленные, черными - формирующие новый блок 2x2. Рис.3. Детализация с 4x4 до 2x2 3.1. Детализация, основанная на дальности Уровень детализации блоков MipMap можно выбирать исходя из удаленности . -сти LMin и LMax. Обычно LMin = 0, в то время как LMax[i] может выставляться как уровень детализации ЬМж = р □MaxDistance, где 0 < р < 1. MaxDistance - максимальная дальность прорисовки может быть равна дальности тумана при тумане, основанном на расстоянии. Итак, уровень детализации рассчитывается следующим образом: MipMap = (Ь - ЬМт) □ к, где к =--------------------. (LMax - ЬМт) Подобный способ выбора детализации не всегда соответствует оптимальному распределению полигонов рельефа: даже плоская поверхность на некотором расстоянии будет полностью или частично детализирована. В то время как для такой поверхности достаточно 2 полигонов (1 уровень детализации). Более точную картину дает выбор детализации, основанный на кривизне по. 3.2. Детализация, основанная на кривизне поверхности Суть данного метода заключается в определении относительной погрешности EL в пикселях, для уровня L детализации блока и сравнением с критерием отбора на растеризацию MaxError. Критерий отбора MaxError есть допустимая погрешность в пикселах. Нормальное значение критерия лежит в пределах от 3 до 10 пикселов и может выставляться пользователем в настройках. Чем больше MaxError, тем быстрее прорисовка, но погрешность аппроксимации возрастает - более заметны скачки в переходе между уровнями оптимизаций. Для определения EL, где L - уровень детализации Ь є[1;1 + іо§2МахКе8] (1) (1) MaxRes - максимальное разрешение блока (доя MaxRes=8, 1<^<=4, соответственно, при L=4 разрешение блока = MaxRes = 8, при L=1 разрешение блока =1). Еь=- АЬ п=Ь —— |Ь|х і^р/2) -хЬ*Міп((1-(ах с)),1) (2) (2) ё(п) = АБ-(п+1). | ? д АБ • (п + 1) 0; п = АЬ п < АЬ (3) (3) где AL - число уровней, АЬ = 1 + J0g2MaxR.es, вектор a - вертикальный вектор (0; 1; 0), вектор Ь - вектор от центра блока до наблюдателя (камеры), вектор c -нормализованный вектор Ь, ф - угол обзора камеры по вертикали, h - размер буфера рендеринга по вертикали в пикселах. Суть скалярного произведения (ахЬ) заключается в том, что наблюдатель не увидит особых геометрических изменений , . Функция d(n) (3) - есть среднее арифметическое между разницами высот вершин уровня п+1 (более детализированного) и высоты под этой точкой уровня п (рис. 4). AD(n) - число удаляемых точек уровня п при оптимизации к более низко. Рис.4. Разницы высот D, тонкая линия - уровень п+1, толстая - уровень п , ( - ва будет иметь погрешность E = 0, то есть нет погрешности) вычисляется числи- (2) . уровень, E которого ниже максимальной погрешности MaxError. Следует добавить, что если длина вектора Ь меньше радиуса сферы, в который вписан сам блок, то блок следует рисовать с наивысшим качеством, чтобы не происходило сильных изменений в геометрии, когда камера почти вплотную приблизилась к нему. 4. Устранение артефактов При растеризации блоков с разными уровнями детализации возникают проблемы состыковки блоков, а именно, при переходе на более низкий уровень детализации будут возникать щели в стыках между блоками. Вызвано это расхождением истинной позиции точки блока высшего уровня и линейной аппроксимации между двумя точками блока низшего уровня (рис. 5). Рис. 5. Стык блоков с разной детализацией Для устранения подобных эффектов следует стягивать граничные вершины блоков более высокой детализации с вершинами, совпадающими с вершинами блока низкой детализации (рис. 6). Здесь показано стягивание вершины a к вершине Ь. Рис.6. Стягивание вершины a к вершине b ]]></text>
</doc>

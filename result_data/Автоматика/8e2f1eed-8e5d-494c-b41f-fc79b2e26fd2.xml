<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/adaptivnoe-upravlenie-informatsionnymi-potokami-raspredelennoy-sapr-sbis]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Лебедев Борис Константинович]]></item>
    <item type="str"><![CDATA[Венцов Николай Николаевич]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Адаптивное управление информационными потоками распределенной САПР СБИС]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[УПРАВЛЕНИЕ ДАННЫМИ]]></item>
    <item type="str"><![CDATA[ОПТИМИЗАЦИЯ]]></item>
    <item type="str"><![CDATA[АВТОМАТЫ АДАПТАЦИИ]]></item>
    <item type="str"><![CDATA[МУРАВЬИНЫЕ АЛГОРИТМЫ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[В работе представлен адаптивный алгоритм, управляющий процессом формирования текущего маршрута передачи проектных данных в распределенной САПР. Ключевыми компонентами алгоритма, отвечающими за выработку решений, являются автоматы адаптации и метод муравьиной колонии.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[В работе представлен адаптивный алгоритм, управляющий процессом формирования текущего маршрута передачи проектных данных в распределенной САПР. Ключевыми компонентами алгоритма, отвечающими за выработку решений, являются автоматы адаптации и метод муравьиной колонии. Управление данными; оптимизация; автоматы адаптации; муравьиные алгоритмы. B.K. Lebedev, N.N. Vencov ADAPTIVE MANAGEMENT INFORMATION FLOW DISTRIBUTED CAD VLSI In work is presented adaptive algorithm, control process of the shaping the current route of the issue design given in distributed CAD. The key component of the algorithm, have charge of production of the decisions, are an automatons to adaptation and method to ants colony. Management data; optimization; automatons to adaptation; ants algorithms. Введение. Разбиение исходной проектной задачи позволяет организовать параллельное решение полученных подзадач средствами распределенных САПР (РСАПР). В процессе реализации запросов к удаленным узлам возникает задача адаптивного управления выбором маршрута передачи проектных данных. Необходимость адаптивного управления обусловлена отсутствием единого теоретического подхода к прогнозированию сетевого трафика [1], и, как следствие, непредсказуемыми изменениями пропускных способностей каналов передачи данных. Разрабатываемые в настоящее время для стандартных телекоммуникационных систем подходы к адаптивному управлению маршрутами передачи данных не в полной мере приемлемы для РСАПР. Например, представленный в [2,3] алгоритм апостериорной К-потоковой маршрутизации предполагает планирование в каждом узле маршрута, начиная с узла источника, К>2 оптимальных (субоптимальных) маршрутов передачи данных к узлу получателю, то есть требует предоставления вычислительных ресурсов каждым узлом, входящим в маршрут. Узлы РСАПР, кроме задач телекоммуникационного характера, решают ресурсоемкие проектные задачи. По этой причине необходимо разработать адаптивный алгоритм маршрутизации, требующий минимум вычислительных ресурсов [4]. Формулировка задачи. Как динамическую систему обмена данными РСАПР можно представить графом G(t)= G(A(t), R(t), W(t)), (1) * Работа выполнена при поддержке: РФФИ (гранты № 10-07-90017, № 09-01-00509), г/б № 2.1.2.1652. где А - множество вершин графа (компьютеры-узлы РСАПР); R - множество ребер графа (каналы связи); W - веса ребер (параметры каналов связи). Каждому ребру rij £R, соединяющему вершины ai £A и aj £A, соответствуют две характеристики wij - максимально возможная пропускная способность и wij(t) - пропускная способность момент времени t. Элементы wij(t) (i,j=1,2,... |A|) У образуют матрицу W(t) размерности |А| Л|А|, где |А| - число вершин в графе описывающем пропускную способность каналов связи РСАПР в момент времени t. Маршруту Lip, по которому передаются данные от вершины ai £A (узла-отправителя) к вершине ap £A (узлу-получателю), также соответствуют две характеристики P(Lip) - максимальная пропускная способность маршрута и P(Lip(t)) -пропускная способность маршрута в момент времени t. Под максимальной пропускной способностью понимается скорость передачи данных относящихся к решаемой задаче при монопольном доступе к соответствующим каналам связи. Под пропускной способностью понимается скорость фактической или возможной передачи данных относящихся к решаемой задаче. Ребро в маршруте с наименьшей пропускной способностью определяет пропускную способность всего маршрута передачи данных: P(Lip (t)) = min{ wij (t) 1 e Lp (t)} (2) Адаптивный алгоритм решения задачи. Разработанный алгоритм осуществляет динамическое управление маршрутами передачи данных на основе анализа состояния среды проводимого в дискретные моменты времени tj, (частота дискретизации составляет одну секунду), при помощи двух автоматов адаптации (АА) [5,6]. Решение о том, какой из АА будет активен в данный момент, т.е. будет осуществлять выбор реализуемой альтернативы, принимается на основе анализа состояния среды. Основным является АА, схема которого изображена на рис. 1. В ситуациях, когда пропускная способность канала связи возрастает более, чем на 40 % в течении одной итерации, активируется АА, схема которого приведена на рис. 2. Применяемые АА поддерживают две альтернативы: ♦ А1 - поиск нового маршрута методом муравьиной колонии, с последующей передачей по нему данных в течении n временных интервалов; ♦ А2 - передача данных по текущему маршруту в течении n временных интервалов. Д1 А2 Рис. 2. Схема АА, реагирующего на резкое возрастание пропускной способности 60 Работа предлагаемого адаптивного алгоритма начинается с реализации начальной альтернативы А\. В дальнейшем алгоритм функционирует итеративно до тех пор, пока не будут переданы все данные от узла-отправителя к узлу-получателю. На каждой итерации выполняется четыре шага: 1. Состояние сети анализируется в дискретные моменты времени 1г,..., 1г+п-1, и+п, 1,+п+1, и+п+2,..., и+2п+1., где 1г+п+1 - момент начала реализации текущей альтернативы. Определяются значения величин Р(Ьр(1г)) Р(Ьгр(1г+п-1)), Р(Ьгр(1г+п)), Р(^1р(1г+п+1))> Р(Ьгр( 1г+п+2)'),---, Р(Ьгр(1г+2п+1)')' 2. На основе анализа значений Р(Ь,р(1г)),...,Р(Ь1р(1г+п_1)), Р(Ьгр(1г+п)), Р(Ь,р(1г+п+1)), Р(Ьгр( и+п+2)),~, Р(Ргр(и+2п+д) принимается решение о активации необходимого АА, а также выработке активным АА сигнала поощрения или наказания. 3. Под действием выработанного сигнала активный АА переходит в новое состояние. 4. Реализуется одна из двух альтернатив А! или А2, соответствующая новому состоянию активного АА. Рассмотрим правила выработки управляющих сигналов, которые являются общими для используемых АА. Если АА находится в состоянии соответствующем альтернативе Ль то сигнал поощрения выполняется в случае, если истинно условие: г+п+п+1 г+п «■ £ Р (ь,«,) >£ Р («-, )> (3) 3=г+ п+1 г=г где ь - маршрут, полученный на предыдущей итерации; Ь _ - маршрут, полу- гр гр ченный непосредственно перед маршрутом Ь ; 1 ...1 - моменты времени, в гр г г +п которые данные передавались по маршруту Ь (т.е. непосредственно предшест- гр вующие реализации альтернативы Ль); 1г+и+1...1г+и+и+1 - моменты времени, в которые данные передавались по маршрутуЬ (т.е. наступившие после реализации гР альтернативы Ль; а - эмпирически определяемый коэффициент, равный 0,7-0,9. Если АА находится в состоянии, соответствующем альтернативе Л2 , то сигнал наказания вырабатывается в случае, если истинно условие: (г+ п+п + 1 г+ п \ ( 1 г+ п+п + 1 Л £ Р(Ь(Г)) <в£ Р(Ь.(1, )агу Р(Ьр ) >-■ £ Р(Ь(1з )) >г> ■> >п И-лФ \ « 3=г+п+1 у (4) где 1г...1 - моменты времени непосредственно предшествующие реализации альтернативы Л2); 1г+п+1...1г+п+и+1 - моменты времени, наступившие после реализации альтернативы Л2; в - эмпирически определяемый коэффициент, равный 0,7-0,8; у - эмпирически определяемый коэффициент в диапазоне 0,1—0,3. Метод муравьиной колонии. При реализации альтернативы Л1 в качестве механизма поиска оптимального маршрута используется метод муравьиной колонии. Основная идея метода состоит в том, что каждый муравей осуществляет поиск маршрута самостоятельно, но при этом использует опыт своих предшествен- ников. Обмен опытом заключается в изменении/оценке состояния окружающей среды и выражается в отложении феромона. Программной генерации первого муравья предшествует создание матрицы распределения феромона Р{к) размерности |А| Х|А|, где к - количество муравьев, опыт которых учтен при формировании матрицы. В начале работы муравьиного алгоритма к=0, элементы матрицы ^(0), определяются по правилу где /ег0 = 0.001. Муравей начинает движение из вершины а,-.с целью определения оптимального маршрута в вершину ар. Выбор направления движения из текущей вершины а1 определяется на основе вероятностно-пропорционального правила: генерации к-1 муравьев. В процессе движения муравей сохраняет упорядоченный список пройденных ребер. Допускается многократное прохождение муравьём любого ребра, с целью выхода из тупиковых вершин. После того, как найдена искомая вершина ар, из маршрута удаляются циклы и определяется пропускная способность найденного ациклического маршрута. После того, как к-й муравей определил маршрут от вершины ai к вершине ар, определяется количество феромона, которое необходимо отложить на пройденных ребрах, а также смоделировать процесс испарения феромона. Количество феромона А/ откладываемого на ребрах, входящих в маршрут, Рр(() определяется по формуле: Испарение феромона моделируется пересчетом элементов матрицы Р(к) по правилу: если Ту є Я; если Ту £ Я, (5) (6) где уг к (/) - вероятность перехода к-го муравья из вершины аг в смежную вершину ау в момент времени М!у (/) - скорость передачи данных между смежными вер- шинами а и ау в момент времени і; уу (к _ 1) - уровень феромона на ребре Ту после (7) где п= 2..5. Матрица Р(к) определяется на основе матрицы Р(к-1) по правилу (8) где у є{1,2,...|А\} ) _\fV (к) - 5 ■ f - ^ еСЛи f ) - 5 ■ f - 1 - fer° У {.М, если fy(к)-5 fy(к -1) < /егй, (9) где 5 - коэффициент испарения феромона (Q.1-Q.3). После того, как рассчитаны элементы матрицы F(k), генерируется к+1 муравей, работа муравьиного алгоритма повторяется до тех пор, пока не будет сгенерировано заданное число муравьев т. Оптимальный маршрут выбирается на основе матрицы F(m). Заключение. Основными достоинствами разработанного алгоритма, по сравнению с алгоритмом апостериорной К-потоковой маршрутизации являются: ♦ поиск только одного маршрута соединяющего узел-отправитель с узлом-получателем, что уменьшает ВСА предлагаемого алгоритма; ♦ наличие адаптивного механизма определяющего необходимость изменения текущего маршрута передачи данных способствует более рациональному использованию вычислительных и пространственных ресурсов системы; ♦ промежуточные, по отношению к отправителю и получателю, узлы РСАПР не принимают участия в управлении маршрутизацией транзитного трафика, что способствует их более эффективному функционированию при решении проектных задач. ]]></text>
</doc>

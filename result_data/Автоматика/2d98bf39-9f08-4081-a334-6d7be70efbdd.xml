<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/gibridnyy-parallelnyy-gruppiruyuschiy-geneticheskiy-algoritm-dlya-resheniya-zadachi-upakovki-blokov]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Потарусов Р.В.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Гибридный Параллельный группирующий генетический Алгоритм для решения задачи упаковки блоков]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ЗАДАЧА УПАКОВКИ БЛОКОВ]]></item>
    <item type="str"><![CDATA[ГЕНЕТИЧЕСКИЕ АЛГОРИТМЫ]]></item>
    <item type="str"><![CDATA[ОПТИМИЗАЦИЯ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[В работе предлагается гибридный параллельный группирующий генетический алгоритм (ГПГГА) для решения задачи упаковки блоков. Разработанный алгоритм протестирован на производительность на различных экземплярах решаемой задачи. Полученные результаты показали эффективность ГПГГА для решения задачи упаковки блоков.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Введение. Задача упаковки блоков (Bin Packing Problem (BPP)) - хорошо известная NP-сложная комбинаторная оптимизационная задача. Цель BPP - скомби-( ) , -зировать общее количество блоков [1, 3, 5-7]. BPP является NP-полной задачей. BPP , [3]: форматирование таблиц, постраничное разбиение, размещение файлов. В данной работе предложен Гибридный Параллельный Группирующий Генетический Алгоритм (ГПГГА). Экспериментальные результаты показали, что разра- BPP решения того же качества, что и лучшие известные алгоритмы решения задачи упаковки блоков. 1. Формулировка задачи. BPP описывается следующим образом [1, 3, 5-10]. Дан определенный набор элементов I={i1,...,in}, |I| = n с весами W={w1 ,...wj }, |W| = j, такими, что 0 < wi < c, где c - объем каждого блока и набор блоков * Работа выполнена при поддержке: РФФИ (гранты № 06-01-00272, № 08-01-00473), РНП 2.1.2.3193, РНП 2.1.2.2238. Б={Ъ1 ,...ЪМ }, |В| = N. Разбить I на N подмножеств так, чтобы сумма весов в каждом подмножестве была максимум с и N было минимальным. 2. Целевая функция. Целевая функция (ЦФ) описывается следующим образом [2, 3, 6, 7, 9]: Максимизировать: где N - количество блоков, используемых для решения, Si - сумма весов элементов в блоке I (заполненность блока), с - объем блока, к - константа, к = 2. 3. Г ибридный Параллельный Г руппирующий Г енетический Алгоритм. 3.1. Общая процедура ГПГГА. 1. . 2. ( ). Для каждой из подпопуляций: 1) . -нут, закончить и перейти к шагу 3; 2) выполнить миграцию хромосом в другую подпопуляцию; 3) ( ) ; 4) выполнить соответствующий ОК к хромосомам в подпопуляции с вероятностью Рс; 5) применить оператор мутации к случайно выбранным хромосомам с вероятностью Рм; 6) -роятностью Рт; 7) -ния качества решения. 8) редукция новой подпопуляции (производится «естественный отбор» - выживают сильнейшие индивидуумы) в соответствии со значениями ЦФ полученных хромосом. На этом шаге одна генерация ГПГГА завершена, т.е. новая подпопуля-ция создана. Переход к шагу 1. Пока не достигнут критерий останова. Критерий останова есть фиксированное число генераций или теоретическое количество использованных блоков = сумма весов всех элементов/объем блока. 3. . 3.2. Кодировка решений, используемая в ГПГГА. Используемая кодировка решений задачи упаковки блоков описана в [13]. Следует лишь добавить, что генетические операторы в предлагаемом алгоритме не работают с той частью альтернативного решения, где расположены блоки, упакованные на 100%. Эта часть называется функциональной частью хромосомы (адьтернативного решения задачи ). 3.3. Генетические операторы. Используемые в ГПГГА оператор кроссинго-вера по методу дихотомии и оператор кроссинговера по методу золотого сечения, а также оператор направленной мутации и оператор случайной транспозиции описаны в [7]. 3.4. Особенности предложенного алгоритма: ♦ новая архитектура гибридного генетического поиска с миграцией; N ♦ модифицированные о ператоры кроссинговера; ♦ оператор направленной мутации; ♦ оператор случай ной транспозиции, которые ранее никогда не использовались для решения ВРР. 4. Экспериментальные результаты. Для оценки предложенного алгоритма ГПГГА был протестирован на самых сложных экземплярах задачи упаковки блоков. Таблица показывает название экземпляра задачи упаковки блоков (Экземпляр ВРР), количество блоков, потребовавшихся для решения данной задачи при помощи ГПГГА (ГПГГ А, Количест во блоков) и количество блоков в лучшем решении, полученном наиболее эффективными известными алгоритмами (Лучшее решение, количество блоков). Только в двух случаях (экземпляры НаМ2 и На^З) ГПГГА был менее успешным, чем самые лучшие существующие алгоритмы решения ВРР. Разница между полученными решениями составила всего 1 блок, что говорит о высокой эффективности применения разработанного алгоритма для решения рассматриваемой задачи. Таблица Экспериментальные результаты__________________________ Экземпляр ВРР ГПГГА, Количество блоков Лучшее решение, количество блоков НаМ0 56 56 Напії 57 57 НаМ2 57 56 НаМ3 56 55 Напі4 57 57 Напі5 56 56 Напіб 57 57 Напі7 55 55 Напі8 57 57 Напі9 56 56 Заключение. Эксперименты показали, что: ♦ При турнирной селекции размером 8 ГПГГА дал более худшие результа- , кроссинговера - 0.99, мутации - 0.1, а транспозиции - 0.5. ♦ Качество получаемых решен ий зависит от числа генераций, которое было установлено в 70, размер популяции - в 100, а также от применения итеративного локального поиска. ♦ При параметрах, указанных выше, достигнута наилучшая сходимость . Дальнейшими направлениями исследований могут быть следующие: ♦ Разработка и использование более сложных архитектур гибридного гене- . ♦ Разработка новых операторов мутации, транспозиции, сегрегации и дру- . ♦ Тестирование каждого оператора н а выживание хромосом после его ра- . ♦ Тестирование ГПГГА на производительность на других известных экзем- ВРР. ]]></text>
</doc>

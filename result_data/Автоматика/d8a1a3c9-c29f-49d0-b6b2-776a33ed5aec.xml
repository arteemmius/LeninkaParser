<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/reshenie-zadachi-kommivoyazhera-na-osnove-nechetkogo-geneticheskogo-algoritma]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Гладков Л.А.]]></item>
    <item type="str"><![CDATA[Гладкова Н.В.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Решение задачи коммивояжера на основе нечеткого генетического алгоритма]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[ЗАДАЧА О КОММИВОЯЖЕРЕ]]></item>
    <item type="str"><![CDATA[ЗК]]></item>
    <item type="str"><![CDATA[НЕЧЕТКИЙ ЛОГИЧЕСКИЙ КОНТРОЛЛЕР]]></item>
    <item type="str"><![CDATA[ФАЗЗИФИКАЦИЯ]]></item>
    <item type="str"><![CDATA[НЕЧЕТКИЕ ГЕНЕТИЧЕСКИЕ АЛГОРИТМЫ]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[В работе рассмотрена структура нечетких генетических алгоритмов, особенности применения и основные блоки нечеткого логического контроллера. Дана постановка задачи коммивояжера. Предложен новый подход к решению задачи коммивояжера на основе использования нечеткого логического контроллера. Предложена примерная структурная схема нечеткого генетического алгоритма решения задачи коммивояжера. Приведено описание разработанного программного продукта и его настроек.]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[Нечеткий генетический алгоритм можно определить как алгоритм, сочетающий поисковые возможности генетических алгоритмов и возможности математического аппарата нечеткой логики. Математический аппарат теории нечетких систем используется в данном случае для кодирования, подбора оптимальных параметров генетических алгоритмов, значений вероятности генетических операторов, выбора функции пригодности и критерия останова, создания нечетких генетиче-. Одной из особенностей нечеткого генетического алгоритма является наличие нечеткого логического контроллера (НЛК). НЛК преобразует заданные параметры к нечеткому виду, затем с помощью Базы Правил (БП) определяет управляющее воздействие и возвращает скорректированные значения контрольных параметров. В составе НЛК можно выделить следующие блоки [1]: ♦ база знаний, включающая в себя базу правил и базу данных; ♦ блок фаззификации; ♦ блок дефаззификации; ♦ система вы вода решения; ♦ система контроля. , , -бой множество нечетких правил R(k>, k = 1, ..., N. НЛК оперирует нечеткими множествами. Поэтому конкретное значение входного параметра НЛК подлежит опе-, - . На выходе блока выработки решения формируется одно или несколько нечетких множеств с соответствующими функциями принадлежности. Встает задача * Работа выполнена при поддержке РФФИ (грант № 08-01-00473). преобразования этих результирующих нечетких множеств (нечеткого множества) в управляющее воздействие на объекты управления НЛК. Такое преобразование называется дефаззификацией (defuzzification). , -ных блоков и степени их адекватности решаемой задаче. В генетических алгоритмах (ГА) управляющими параметрами, как правило, являются значения вероятности выполнения генетических операторов кроссинго-вера (Pc) и мутации (Pm), а также размер популяции. В нечетком генетическом алгоритме происходит динамическое изменение этих параметров при помощи нечет- ( ). входных параметров рассчитывает управляющее воздействие, регулирующее па. Постановку задачи о коммивояжере можно описать следующим образом: Есть некий коммивояжер, которому необходимо посетить N городов, не заезжая в один и тот же город дважды, и вернуться в исходный пункт. При этом длина ( ) . графов постановка задачи выглядит так: дан граф G = (X, U), где \X\ = n - множество вершин (городов), \ U\ = m - множество ребер (путей) между городами; DnXn -матрица расстояний (стоимостей), где dj, i,j е {1, 2,..., n} - это длина пути (стоимость переезда) из города (вершины) xt в x Для решения задачи коммивояжера предлагается использовать нечеткий ге. : 1. , , -тода «дробовика». 2. ( ). 3. . 4. . 5. « ». Основным моментом алгоритма является применение НЛК, использующего в качестве входных параметров среднее и лучшее значение ЦФ. Нечеткий логический контроллер оперирует лингвистическими переменными, такими как: NL (negative large) - «значительно хуже», NS (negative small) - «незначительно хуже», ZE (zero) - «частичное изменение», PS (positive small) - «незначительно лучше», PL (positive large) - «значительно лучше» [2, 3]. Формирование управляющего воздействия НЛК осуществляет на основе [4, 5]: fave (Q - f best (Q f ave (t) fave (t) - fave (t - 1) *1(0 = *2(*) = Ле« (0 где ( - временной шаг; /тах(() - лучшее значение ЦФ на итерации /; /те(() - среднее значение ЦФ на итерации /;/те(( - 1) - среднее значение ЦФ на итерации ^ - 1). Параметры е1, е2 заданы на следующих интервалах: е1 е [0; 1]; *2 е [-1; 1]. Выходной параметр ЬРс(1) определяющий вероятность выполнения кроссин-говера задан на интервале: АРс(() е [-0.1; 0.1]. Выходной параметр для оператора мутации АРт(1) тот, же что и для кроссинговера. Отсюда видно, что вероятности могут меняться не более, чем на 10%. Тогда используем четкие значения, чтобы Рс Рт : З2 Реф = Ре(Г -1) + АРеф; Ртф = Рш@ -1) + АРтф. То есть, НЛК представляет собой двумерный набор нечетких правил, представленных в табл. 1, 2. 1 Нечеткие правила для ОК (АРа($) e2 ei NL NS ZE PS PL PL NS ZE PS PS PL PS ZE ZE ZE ZE ZE ZE NS NL ZE NL NS 2 Нечеткие правила для OM (APm(t)) e2 ei NL NS ZE PS PL PL PS ZE PS NS NL PS ZE ZE NS ZE NS ZE PS PL ZE PL PS , , -дующие параметры е1 = 2Б и е2 = ЫЦ то, согласно приведенным таблицам (см. табл. 1, 2), получим: APc(t) = NS, APm(t) = PS. Следовательно, значения вероятностей кроссинговера и мутации определяются выражениями: Pc(t) = Pc(t-1) + NS; Pm(t) = Pm(t -1) + PS. To есть, при заданных значениях параметров е1 и е2 вероятность кроссинговера «немного» уменьшится, а вероятность мутации «значительно» увеличится. , -обходимо провести тестирование и настройку, как входных сигналов, так и соответствующих им управляющих воздействий нечеткого логического контроллера [6]. Структура предложенного нечеткого генетического алгоритма выглядит следующим образом (рис. 1): Начало НГА t = 0 Iteration counter Формирование начальной популяции P(t) Расчет ЦФ популяции P(t) Пока (не выполнено условие останова) { t = t + l Селекция OK P(t) OM P(t) Расчет ЦФ P(t) Отбор P(t) Регулировка параметров ГА зз НЛК (ei, e2) Обновляем параметры } Конец НГА Формирование начальної? популяции" определение ЦФ Выработка управляющих воздействий НЛК Rc(t, = Rc(t -1) + ARc(t, Rm(t) = Rrr(t -1) + ARrr(ty . i. { } На основе предложенного подхода была разработана программа для ЭВМ, в которой реализован описанный выше НГА. Программа создана в среде разработки Borland C++ Builder 6.0. Внешний вид программы представлен на рис. 2. Кроме задания основных параметров ГА, в программе имеется возможность выбора варианта решения задачи - с использованием НЛК и без него. Тем самым, можно легко проводить сравнительный анализ стандартного и нечеткого ГА. з4 В программе также реализована возможность задания нечетких правил, что делает удобным процесс исследования и выявления оптимальных сочетаний настроек нечеткого генетического алгоритма (рис. 3). Рис. 2. Основное окно программы Рис. 3. Задание нечетких правил ]]></text>
</doc>

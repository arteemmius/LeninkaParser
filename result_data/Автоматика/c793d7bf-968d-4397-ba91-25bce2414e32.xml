<doc>
  <source auto="true" type="str" verify="true"><![CDATA[https://cyberleninka.ru/article/n/obobschennaya-model-agenta-i-mnogoagentnoy-sistemy]]></source>
  <category auto="true" type="str" verify="true"><![CDATA[Автоматика]]></category>
  <author auto="true" type="list" verify="true">
    <item type="str"><![CDATA[Жмурко С.А.]]></item>
  </author>
  <title auto="true" type="str" verify="true"><![CDATA[Обобщенная модель агента и многоагентной системы]]></title>
  <keywords auto="true" type="list" verify="true">
    <item type="str"><![CDATA[САПР]]></item>
    <item type="str"><![CDATA[МНОГОАГЕНТНЫЕ СИСТЕМЫ]]></item>
    <item type="str"><![CDATA[ОБОБЩЕННАЯ МОДЕЛЬ]]></item>
    <item type="str"><![CDATA[РЕЦЕПТОРЫ]]></item>
    <item type="str"><![CDATA[ЭФФЕКТОРЫ]]></item>
    <item type="str"><![CDATA[ПРОЦЕССОР]]></item>
  </keywords>
  <annotation auto="true" type="str" verify="true"><![CDATA[В статье рассмотрены вопросы использования многоагентных систем в системах автоматизированного проектирования. Предложена обобщенная модель многоагентной системы, рассмотрены основные блоки этой модели (рецепторы, эффекторы и процессор) и их назначение. Также статья содержит математические модели многоагентной системы, рассмотрена специфика применения МАС, типы используемых агентов]]></annotation>
  <text auto="true" type="str" verify="true"><![CDATA[К основным принципам создания современных перспективных САПР [1] относятся представление САПР как человеко-машинной системы, комплексный подход к автоматизации проектирования, представление САПР как совокупности распределенных информационно-согласованных подсистем, открытость САПР и т.д. * Работа выполнена при поддержке: РФФИ (грант № 07-01-00174), РНП 2.1.2.3193, РНП 2.1.2.2238, г/б № Т.1.04.01, г/б № Т.12.8.08. Одним из основных способов, которые позволяют учесть все основополагающие принципы современных САПР, является использование агентов и многоагентных систем в задачах проектирования. Природа агентов исследуется различными группами ученых, работающими над стандартизацией многоагентных систем (MAC). Некоторые из этих групп представляют собой известные сообщества разработчиков, такие как FIPA (Foundation for Intelligent Physical Agents), OMG (Object Management Group), KAoS (Knowledge-able Agent-oriented System) и др. Современные исследования этих сообществ направлены на изучение природы распределения и взаимодействия агентов в мно-. зависят от внутренней реализации самого агента и модели многоагентной системы. Многие сообщества предлагают свои варианты архитектур агентов и MAC. Каждая из таких архитектур имеет ряд особенностей, поэтому разработчик перед , , известных архитектур и выбрать наиболее подходящую для решения своей задачи, либо же путем синтеза свойств разработать свою архитектуру. Однако первоочередной задачей при анализе конкретных архитектур агентов является определение всех составляющих блоков обобщенной архитектуры агента, анализ основных абстрактных компонент агента. В работе представлена обобщенная модель архитектуры агента, описывающая основные блоки агента, их назначение и взаимосвязь. Также в работе рассматривается модель многоагентной системы, отражающая взаимосвязь и взаимодействие агентов в многоагентной системе. Обобщенная модель архитектуры агента. Любой агент представляет собой , , , - пам [2]. внешней среды с ограниченным разрешением, обрабатывать ее на основе собст- , течение некоторого времени, преследуя свои собственные цели. Итак, агент - это программно или аппаратно реализованная система, обладающая следующими свойствами: ♦ автономность - способность функционировать без прямого вмешательства людей или компьютерных средств и при этом осуществлять самоконтроль над своими действиями и внутренними состояниями [3]; ♦ (social ability), . . ( , ), помощью языков коммуникации; ♦ реактивность - способность воспринимать состояние среды (физическо- , - , -сти других агентов, сети Internet или сразу все этих компонентов внешней ); ♦ целенаправленная активность (pro-activity) - способность агентов не просто реагировать на стимулы, поступающие из среды, но и осуществлять , . Эти свойства являются основополагающими при разработке агентов и много. , , -, . Каждый агент в общем виде состоит из трех основных блоков (рис. 1): блока рецепторов; блока эффекторов; процессора (блока переработки информации и бло-). СРЕДЛ СРЕД Л Рис. 1. Обобщенная архитектура агента Каждый из блоков отвечает за выполнение строго определенных функций. . агентов. Они обеспечивают прием информации, поступающей из среды и ее первичную обработку. После этого полученная и обработанная информация передается в блок памяти. . - ях на поступающие сигналы от рецепторов, а так же о состоянии эффекторов и имеющихся ресурсах. Таким образом, блок памяти обычно включает три основных : , информации, а так же внутреннюю модель мира и модель самого агента. Память также содержит программы переработки информации в управляющие сигналы эффекторов и результаты реакций на различные внешние ситуации. Немаловажным фактом является объем памяти и разнообразие хранимой в ней информации, так как именно это зачастую и определяет уровень автономности и интеллектуальности агентов. Процессор. Процессор обеспечивает переработку разнородных данных, принятие решений о выполнении тех или иных действий и выработку реакций на входящую информацию о текущем состоянии среды. Блок эффекторов. Эффекторы необходимы для воздействия на среду, выдаче информации в символьной форме, поддержании равновесия внутренней среды и т.д. Иногда в архитектурах агентов выделяют также другие модули, но они не являются обязательными и зачастую входят в состав основных блоков обобщенной архитектуры. Так, для большинства современных агентов одним из основных свойств является коммуникативность. В связи с этим производится выделение всех коммуникативных сигналов, исходящих от агентов. Это приводит к тому, что вы- деляют отдельный блок - блок коммуникации с другими агентами. Так же при использовании агентом различных методов, к примеру, методов эволюционного моделирования и генетических алгоритмов, разработчики выделяют соответствую, -тов. Зачастую, это делается для наглядности, хотя, в действительности, схему коммуникации или использование эволюционного подхода таким же образом можно описать и с помощью процессора, рецепторов и эффекторов. , -го агента - способность функционировать в условиях неточной, нечеткой и проти. , - ры среды, ни точно предсказывать результаты намеченного действия [2]. В связи с этим возникает необходимость рассмотрения полиморфного или нечеткого соответствия между средой E и е моделью M у агента, которое можно назвать нечетким : R : E хM ^ [0,1]. (1) Одним из способов записи отношения моделирования является запись в виде матрицы размера lXn, где на пересечении столбца e_j , j=1, ..., l и соответствующей строки m;, i=1, ..., n находится число /IR(e;-,)e [0,1]. Это число представляет собой коэффициент соответствия между данным состоянием среды и его внутренним представлением агентом. Модели многоагентной системы. Для разработки многоагентной системы понимания обобщенной модели агента недостаточно. Для этого необходимо представлять модель самой системы, так как именно она дает понять - какое место занимает агент в ней и как он соотносится с другими компонентами. Одним из способов описания многоагентной системы является способ, при котором подразумевают, что она (система) MAS = {A1,...,An; P} состоит из конечного множества {A1,...,An} интеллектуальных агентов и специального почтового агента P, моделирующего сеть связей между агентами Ai [4]. У интеллектуального агента A имеется внутренняя база данных (БД) IA, содержащая конечное множество базисных атомов и почтовый ящик MsgBoxA. Согласно современным представлениям, управление командной работой должно выполняться распределенными иерархическими системами с развитыми функциями координации и управления. Ключевой проблемой в таких системах является координация в реальном времени коллективного поведения членов команды, распределено решающих общую задачу [5]. Сложность такого подхода кроется в том, что агенты, составляющие команду, обладают общими и частными навыками и собственным поведением, неполными знаниями об окружающей среде и ограниченными ресурсами. При этом за счет реализации своих индивидуальных задач и коммуникации с другими агентами каждый агент выполняет общую задачу, поставленную перед ними. Агенты общаются между собой посредством передачи сообщений вида msg(Sender, Receiver, Msg), где Sender - агент-источник сообщения, Receiver - - , a Msg - , ( ) . - P. , P, - общения от агента P в свой почтовый ящик. При этом можно рассматривать два : 11S ♦ синхронный, когда предполагается, что Р передает сообщение адресату сразу (в этом случае агент Р фактически можно исключить из системы); ♦ асинхронный, когда передача сообщения от Р к агентам может занять произвольное количество времени. - -, ( ), -хронных МА-системах лучше отражаются свойства сильно распределенных (например, в Интернете) систем. Это связано со спецификой работы сетей, таких как Интернет. Данный подход к описанию многоагентной системы является довольно доступным к пониманию и основан на предсталении агента как сущности обладающей свойством коммуникации. Однако он не отражает всю специфику многоагентной системы. Существует другой способ формального описания МАС, основанный на понятии алгебраической системы, которая выражается в виде: Л$ = (X, П, О), (2) где X - непустое множество, называемое носителем или основой системы, П - множество предикатов, О - множество операций. Очевидно, что система может быть многоосновной, и в этом случае X = (Х1, ... ,Хп) [3]. Однако агенты редко являются одиночными системами. В настоящее время главный интерес представляют разработки, содержащие большое количество агентов разного назначения. К примеру, в большинстве многоагентных систем выделяют такие типы агентов, различающиеся по ролевому признаку: ♦ Агент-заказчик. Он формирует запрос и отправляет заказ на выполнение . , - ет в выработке решений по выполнению задачи и контролирует процесс . , удовлетворяет ли она его требованиям. ♦ А гент-координатор. Он создает и поддерживает сеть запросов и обязательств, необходимых для выполнения работы. Агент-координатор распределяет работу и отбирает требуемые ресурсы для ее успешного вы. ♦ А гент-исполнитель - это агент, занимающийся непосредственно выполнением задания ♦ Агент-субординатор. Он осуществляет общее управление процессами, протекающими на предприятии. ♦ А гент-наблюдатель. Он обладает достаточно полной информацией о деятельности предприятия и вырабатывает свои предложения об изменениях в базовой МАС, но может воздействовать на нее только косвенно через -. Все эти агенты взаимодействуют друг с другом. Следовательно, каждый агент - , - ся этими знаниями с другими агентами. В общем виде многоагентная система включает в себя множество агентов и множество объектов, что может быть записано в виде X = (А, О). Когда X = А и с учетом того, что МАС представляет собой открытую систе- , ЫЛБ = (А, Е, Я, ОЯО), (3) где А - множество агентов; Е = {е} - среда, в которой находится данная MAC; R - множество взаимодействий между агентами (например, коммуникативные ак, . .); ORG - , - ветствующих конкретным функциям (ролям) агентов и установившимся отношениям между ними. MAC ( - ): MAS = (A, ACT ,т, L), (4) где А - множество агентов; ACT - конечное множество действий в MAC; т: A—>2ACT, АСТа = т(а) - множество действий агента aeA, L - подмножество расширенного множества ACT*, которое описывает поведение всей MAC [6]. В настоящее время от САПР требуется все большее использование прогрес. проектированию сложных систем. Применение данного подхода в САПР даст не только некий прирост производительности, но и прибавит гибкость и устойчивость системы при изменении границ решаемых задач. Рассмотренные обобщенная архитектура агента и модели построения системы являются основополагающими при разработке любой многоагентной системы, в том числе и многоагентной системы, используемой для задач проектирования. Реализация всех основных блоков агента (блока рецепторов, блока эффекторов и процессора) является залогом правильного проектирования новой системы. Общий смысл и назначение этих блоков неизменны и одинаковы для разных многоагентных систем, однако реализация этих блоков полностью зависит от разработчика и от поставленной перед ним задачи. Понимание же моделей MAC необходимо для правильного толкования роли и места агента , -связи внутри многоагентной системы. ]]></text>
</doc>
